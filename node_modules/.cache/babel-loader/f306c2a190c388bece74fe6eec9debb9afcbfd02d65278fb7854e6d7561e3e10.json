{"ast":null,"code":"import _construct from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/construct.js\";\nimport _classCallCheck from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { addNodeClass } from '../core/Node.js';\nimport AttributeNode from '../core/AttributeNode.js';\nimport { nodeObject } from '../shadernode/ShaderNode.js';\nimport { Vector4 } from 'three';\nvar VertexColorNode = /*#__PURE__*/function (_AttributeNode) {\n  _inherits(VertexColorNode, _AttributeNode);\n  var _super = _createSuper(VertexColorNode);\n  function VertexColorNode() {\n    var _this;\n    var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    _classCallCheck(this, VertexColorNode);\n    _this = _super.call(this, null, 'vec4');\n    _this.isVertexColorNode = true;\n    _this.index = index;\n    return _this;\n  }\n  _createClass(VertexColorNode, [{\n    key: \"getAttributeName\",\n    value: function getAttributeName( /*builder*/\n    ) {\n      var index = this.index;\n      return 'color' + (index > 0 ? index : '');\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder) {\n      var attributeName = this.getAttributeName(builder);\n      var geometryAttribute = builder.hasGeometryAttribute(attributeName);\n      var result;\n      if (geometryAttribute === true) {\n        result = _get(_getPrototypeOf(VertexColorNode.prototype), \"generate\", this).call(this, builder);\n      } else {\n        // Vertex color fallback should be white\n        result = builder.generateConst(this.nodeType, new Vector4(1, 1, 1, 1));\n      }\n      return result;\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(data) {\n      _get(_getPrototypeOf(VertexColorNode.prototype), \"serialize\", this).call(this, data);\n      data.index = this.index;\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(data) {\n      _get(_getPrototypeOf(VertexColorNode.prototype), \"deserialize\", this).call(this, data);\n      this.index = data.index;\n    }\n  }]);\n  return VertexColorNode;\n}(AttributeNode);\nexport default VertexColorNode;\nexport var vertexColor = function vertexColor() {\n  for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n    params[_key] = arguments[_key];\n  }\n  return nodeObject(_construct(VertexColorNode, params));\n};\naddNodeClass('VertexColorNode', VertexColorNode);","map":{"version":3,"names":["addNodeClass","AttributeNode","nodeObject","Vector4","VertexColorNode","_AttributeNode","_inherits","_super","_createSuper","_this","index","arguments","length","undefined","_classCallCheck","call","isVertexColorNode","_createClass","key","value","getAttributeName","generate","builder","attributeName","geometryAttribute","hasGeometryAttribute","result","_get","_getPrototypeOf","prototype","generateConst","nodeType","serialize","data","deserialize","vertexColor","_len","params","Array","_key","_construct"],"sources":["/Users/vedant/node_modules/three/examples/jsm/nodes/accessors/VertexColorNode.js"],"sourcesContent":["import { addNodeClass } from '../core/Node.js';\nimport AttributeNode from '../core/AttributeNode.js';\nimport { nodeObject } from '../shadernode/ShaderNode.js';\nimport { Vector4 } from 'three';\n\nclass VertexColorNode extends AttributeNode {\n\n\tconstructor( index = 0 ) {\n\n\t\tsuper( null, 'vec4' );\n\n\t\tthis.isVertexColorNode = true;\n\n\t\tthis.index = index;\n\n\t}\n\n\tgetAttributeName( /*builder*/ ) {\n\n\t\tconst index = this.index;\n\n\t\treturn 'color' + ( index > 0 ? index : '' );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst attributeName = this.getAttributeName( builder );\n\t\tconst geometryAttribute = builder.hasGeometryAttribute( attributeName );\n\n\t\tlet result;\n\n\t\tif ( geometryAttribute === true ) {\n\n\t\t\tresult = super.generate( builder );\n\n\t\t} else {\n\n\t\t\t// Vertex color fallback should be white\n\t\t\tresult = builder.generateConst( this.nodeType, new Vector4( 1, 1, 1, 1 ) );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.index = this.index;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.index = data.index;\n\n\t}\n\n}\n\nexport default VertexColorNode;\n\nexport const vertexColor = ( ...params ) => nodeObject( new VertexColorNode( ...params ) );\n\naddNodeClass( 'VertexColorNode', VertexColorNode );\n"],"mappings":";;;;;;;AAAA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,OAAOC,aAAa,MAAM,0BAA0B;AACpD,SAASC,UAAU,QAAQ,6BAA6B;AACxD,SAASC,OAAO,QAAQ,OAAO;AAAC,IAE1BC,eAAe,0BAAAC,cAAA;EAAAC,SAAA,CAAAF,eAAA,EAAAC,cAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,eAAA;EAEpB,SAAAA,gBAAA,EAAyB;IAAA,IAAAK,KAAA;IAAA,IAAZC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;IAAAG,eAAA,OAAAV,eAAA;IAErBK,KAAA,GAAAF,MAAA,CAAAQ,IAAA,OAAO,IAAI,EAAE,MAAM;IAEnBN,KAAA,CAAKO,iBAAiB,GAAG,IAAI;IAE7BP,KAAA,CAAKC,KAAK,GAAGA,KAAK;IAAC,OAAAD,KAAA;EAEpB;EAACQ,YAAA,CAAAb,eAAA;IAAAc,GAAA;IAAAC,KAAA,EAED,SAAAC,iBAAA,CAAkB;IAAA,EAAc;MAE/B,IAAMV,KAAK,GAAG,IAAI,CAACA,KAAK;MAExB,OAAO,OAAO,IAAKA,KAAK,GAAG,CAAC,GAAGA,KAAK,GAAG,EAAE,CAAE;IAE5C;EAAC;IAAAQ,GAAA;IAAAC,KAAA,EAED,SAAAE,SAAUC,OAAO,EAAG;MAEnB,IAAMC,aAAa,GAAG,IAAI,CAACH,gBAAgB,CAAEE,OAAQ,CAAC;MACtD,IAAME,iBAAiB,GAAGF,OAAO,CAACG,oBAAoB,CAAEF,aAAc,CAAC;MAEvE,IAAIG,MAAM;MAEV,IAAKF,iBAAiB,KAAK,IAAI,EAAG;QAEjCE,MAAM,GAAAC,IAAA,CAAAC,eAAA,CAAAxB,eAAA,CAAAyB,SAAA,qBAAAd,IAAA,OAAmBO,OAAO,CAAE;MAEnC,CAAC,MAAM;QAEN;QACAI,MAAM,GAAGJ,OAAO,CAACQ,aAAa,CAAE,IAAI,CAACC,QAAQ,EAAE,IAAI5B,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC;MAE3E;MAEA,OAAOuB,MAAM;IAEd;EAAC;IAAAR,GAAA;IAAAC,KAAA,EAED,SAAAa,UAAWC,IAAI,EAAG;MAEjBN,IAAA,CAAAC,eAAA,CAAAxB,eAAA,CAAAyB,SAAA,sBAAAd,IAAA,OAAiBkB,IAAI;MAErBA,IAAI,CAACvB,KAAK,GAAG,IAAI,CAACA,KAAK;IAExB;EAAC;IAAAQ,GAAA;IAAAC,KAAA,EAED,SAAAe,YAAaD,IAAI,EAAG;MAEnBN,IAAA,CAAAC,eAAA,CAAAxB,eAAA,CAAAyB,SAAA,wBAAAd,IAAA,OAAmBkB,IAAI;MAEvB,IAAI,CAACvB,KAAK,GAAGuB,IAAI,CAACvB,KAAK;IAExB;EAAC;EAAA,OAAAN,eAAA;AAAA,EAxD4BH,aAAa;AA4D3C,eAAeG,eAAe;AAE9B,OAAO,IAAM+B,WAAW,GAAG,SAAdA,WAAWA,CAAA;EAAA,SAAAC,IAAA,GAAAzB,SAAA,CAAAC,MAAA,EAAQyB,MAAM,OAAAC,KAAA,CAAAF,IAAA,GAAAG,IAAA,MAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA;IAANF,MAAM,CAAAE,IAAA,IAAA5B,SAAA,CAAA4B,IAAA;EAAA;EAAA,OAAMrC,UAAU,CAAAsC,UAAA,CAAMpC,eAAe,EAAKiC,MAAM,CAAG,CAAC;AAAA;AAE1FrC,YAAY,CAAE,iBAAiB,EAAEI,eAAgB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}