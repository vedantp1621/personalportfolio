{"ast":null,"code":"import NodeMaterial, { addNodeMaterial } from './NodeMaterial.js';\nimport { diffuseColor, metalness, roughness, specularColor } from '../core/PropertyNode.js';\nimport { mix } from '../math/MathNode.js';\nimport { materialRoughness, materialMetalness } from '../accessors/MaterialNode.js';\nimport getRoughness from '../functions/material/getRoughness.js';\nimport PhysicalLightingModel from '../functions/PhysicalLightingModel.js';\nimport { float, vec3, vec4 } from '../shadernode/ShaderNode.js';\nimport { MeshStandardMaterial } from 'three';\nconst defaultValues = new MeshStandardMaterial();\nclass MeshStandardNodeMaterial extends NodeMaterial {\n  constructor(parameters) {\n    super();\n    this.isMeshStandardNodeMaterial = true;\n    this.emissiveNode = null;\n    this.metalnessNode = null;\n    this.roughnessNode = null;\n    this.setDefaultValues(defaultValues);\n    this.setValues(parameters);\n  }\n  setupLightingModel( /*builder*/\n  ) {\n    return new PhysicalLightingModel();\n  }\n  setupVariants() {\n    // METALNESS\n\n    const metalnessNode = this.metalnessNode ? float(this.metalnessNode) : materialMetalness;\n    metalness.assign(metalnessNode);\n\n    // ROUGHNESS\n\n    let roughnessNode = this.roughnessNode ? float(this.roughnessNode) : materialRoughness;\n    roughnessNode = getRoughness({\n      roughness: roughnessNode\n    });\n    roughness.assign(roughnessNode);\n\n    // SPECULAR COLOR\n\n    const specularColorNode = mix(vec3(0.04), diffuseColor.rgb, metalnessNode);\n    specularColor.assign(specularColorNode);\n\n    // DIFFUSE COLOR\n\n    diffuseColor.assign(vec4(diffuseColor.rgb.mul(metalnessNode.oneMinus()), diffuseColor.a));\n  }\n  copy(source) {\n    this.emissiveNode = source.emissiveNode;\n    this.metalnessNode = source.metalnessNode;\n    this.roughnessNode = source.roughnessNode;\n    return super.copy(source);\n  }\n}\nexport default MeshStandardNodeMaterial;\naddNodeMaterial('MeshStandardNodeMaterial', MeshStandardNodeMaterial);","map":{"version":3,"names":["NodeMaterial","addNodeMaterial","diffuseColor","metalness","roughness","specularColor","mix","materialRoughness","materialMetalness","getRoughness","PhysicalLightingModel","float","vec3","vec4","MeshStandardMaterial","defaultValues","MeshStandardNodeMaterial","constructor","parameters","isMeshStandardNodeMaterial","emissiveNode","metalnessNode","roughnessNode","setDefaultValues","setValues","setupLightingModel","setupVariants","assign","specularColorNode","rgb","mul","oneMinus","a","copy","source"],"sources":["/Users/vedant/node_modules/three/examples/jsm/nodes/materials/MeshStandardNodeMaterial.js"],"sourcesContent":["import NodeMaterial, { addNodeMaterial } from './NodeMaterial.js';\nimport { diffuseColor, metalness, roughness, specularColor } from '../core/PropertyNode.js';\nimport { mix } from '../math/MathNode.js';\nimport { materialRoughness, materialMetalness } from '../accessors/MaterialNode.js';\nimport getRoughness from '../functions/material/getRoughness.js';\nimport PhysicalLightingModel from '../functions/PhysicalLightingModel.js';\nimport { float, vec3, vec4 } from '../shadernode/ShaderNode.js';\n\nimport { MeshStandardMaterial } from 'three';\n\nconst defaultValues = new MeshStandardMaterial();\n\nclass MeshStandardNodeMaterial extends NodeMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardNodeMaterial = true;\n\n\t\tthis.emissiveNode = null;\n\n\t\tthis.metalnessNode = null;\n\t\tthis.roughnessNode = null;\n\n\t\tthis.setDefaultValues( defaultValues );\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tsetupLightingModel( /*builder*/ ) {\n\n\t\treturn new PhysicalLightingModel();\n\n\t}\n\n\tsetupVariants() {\n\n\t\t// METALNESS\n\n\t\tconst metalnessNode = this.metalnessNode ? float( this.metalnessNode ) : materialMetalness;\n\n\t\tmetalness.assign( metalnessNode );\n\n\t\t// ROUGHNESS\n\n\t\tlet roughnessNode = this.roughnessNode ? float( this.roughnessNode ) : materialRoughness;\n\t\troughnessNode = getRoughness( { roughness: roughnessNode } );\n\n\t\troughness.assign( roughnessNode );\n\n\t\t// SPECULAR COLOR\n\n\t\tconst specularColorNode = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessNode );\n\n\t\tspecularColor.assign( specularColorNode );\n\n\t\t// DIFFUSE COLOR\n\n\t\tdiffuseColor.assign( vec4( diffuseColor.rgb.mul( metalnessNode.oneMinus() ), diffuseColor.a ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.emissiveNode = source.emissiveNode;\n\n\t\tthis.metalnessNode = source.metalnessNode;\n\t\tthis.roughnessNode = source.roughnessNode;\n\n\t\treturn super.copy( source );\n\n\t}\n\n}\n\nexport default MeshStandardNodeMaterial;\n\naddNodeMaterial( 'MeshStandardNodeMaterial', MeshStandardNodeMaterial );\n"],"mappings":"AAAA,OAAOA,YAAY,IAAIC,eAAe,QAAQ,mBAAmB;AACjE,SAASC,YAAY,EAAEC,SAAS,EAAEC,SAAS,EAAEC,aAAa,QAAQ,yBAAyB;AAC3F,SAASC,GAAG,QAAQ,qBAAqB;AACzC,SAASC,iBAAiB,EAAEC,iBAAiB,QAAQ,8BAA8B;AACnF,OAAOC,YAAY,MAAM,uCAAuC;AAChE,OAAOC,qBAAqB,MAAM,uCAAuC;AACzE,SAASC,KAAK,EAAEC,IAAI,EAAEC,IAAI,QAAQ,6BAA6B;AAE/D,SAASC,oBAAoB,QAAQ,OAAO;AAE5C,MAAMC,aAAa,GAAG,IAAID,oBAAoB,CAAC,CAAC;AAEhD,MAAME,wBAAwB,SAAShB,YAAY,CAAC;EAEnDiB,WAAWA,CAAEC,UAAU,EAAG;IAEzB,KAAK,CAAC,CAAC;IAEP,IAAI,CAACC,0BAA0B,GAAG,IAAI;IAEtC,IAAI,CAACC,YAAY,GAAG,IAAI;IAExB,IAAI,CAACC,aAAa,GAAG,IAAI;IACzB,IAAI,CAACC,aAAa,GAAG,IAAI;IAEzB,IAAI,CAACC,gBAAgB,CAAER,aAAc,CAAC;IAEtC,IAAI,CAACS,SAAS,CAAEN,UAAW,CAAC;EAE7B;EAEAO,kBAAkBA,CAAA,CAAE;EAAA,EAAc;IAEjC,OAAO,IAAIf,qBAAqB,CAAC,CAAC;EAEnC;EAEAgB,aAAaA,CAAA,EAAG;IAEf;;IAEA,MAAML,aAAa,GAAG,IAAI,CAACA,aAAa,GAAGV,KAAK,CAAE,IAAI,CAACU,aAAc,CAAC,GAAGb,iBAAiB;IAE1FL,SAAS,CAACwB,MAAM,CAAEN,aAAc,CAAC;;IAEjC;;IAEA,IAAIC,aAAa,GAAG,IAAI,CAACA,aAAa,GAAGX,KAAK,CAAE,IAAI,CAACW,aAAc,CAAC,GAAGf,iBAAiB;IACxFe,aAAa,GAAGb,YAAY,CAAE;MAAEL,SAAS,EAAEkB;IAAc,CAAE,CAAC;IAE5DlB,SAAS,CAACuB,MAAM,CAAEL,aAAc,CAAC;;IAEjC;;IAEA,MAAMM,iBAAiB,GAAGtB,GAAG,CAAEM,IAAI,CAAE,IAAK,CAAC,EAAEV,YAAY,CAAC2B,GAAG,EAAER,aAAc,CAAC;IAE9EhB,aAAa,CAACsB,MAAM,CAAEC,iBAAkB,CAAC;;IAEzC;;IAEA1B,YAAY,CAACyB,MAAM,CAAEd,IAAI,CAAEX,YAAY,CAAC2B,GAAG,CAACC,GAAG,CAAET,aAAa,CAACU,QAAQ,CAAC,CAAE,CAAC,EAAE7B,YAAY,CAAC8B,CAAE,CAAE,CAAC;EAEhG;EAEAC,IAAIA,CAAEC,MAAM,EAAG;IAEd,IAAI,CAACd,YAAY,GAAGc,MAAM,CAACd,YAAY;IAEvC,IAAI,CAACC,aAAa,GAAGa,MAAM,CAACb,aAAa;IACzC,IAAI,CAACC,aAAa,GAAGY,MAAM,CAACZ,aAAa;IAEzC,OAAO,KAAK,CAACW,IAAI,CAAEC,MAAO,CAAC;EAE5B;AAED;AAEA,eAAelB,wBAAwB;AAEvCf,eAAe,CAAE,0BAA0B,EAAEe,wBAAyB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}