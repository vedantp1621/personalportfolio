{"ast":null,"code":"import UniformNode from '../core/UniformNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\nimport { addNodeClass } from '../core/Node.js';\nclass MaxMipLevelNode extends UniformNode {\n  constructor(textureNode) {\n    super(0);\n    this.textureNode = textureNode;\n    this.updateType = NodeUpdateType.FRAME;\n  }\n  get texture() {\n    return this.textureNode.value;\n  }\n  update() {\n    const texture = this.texture;\n    const images = texture.images;\n    const image = images && images.length > 0 ? images[0] && images[0].image || images[0] : texture.image;\n    if (image && image.width !== undefined) {\n      const {\n        width,\n        height\n      } = image;\n      this.value = Math.log2(Math.max(width, height));\n    }\n  }\n}\nexport default MaxMipLevelNode;\nexport const maxMipLevel = nodeProxy(MaxMipLevelNode);\naddNodeClass('MaxMipLevelNode', MaxMipLevelNode);","map":{"version":3,"names":["UniformNode","NodeUpdateType","nodeProxy","addNodeClass","MaxMipLevelNode","constructor","textureNode","updateType","FRAME","texture","value","update","images","image","length","width","undefined","height","Math","log2","max","maxMipLevel"],"sources":["/Users/vedant/node_modules/three/examples/jsm/nodes/utils/MaxMipLevelNode.js"],"sourcesContent":["import UniformNode from '../core/UniformNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\nimport { addNodeClass } from '../core/Node.js';\n\nclass MaxMipLevelNode extends UniformNode {\n\n\tconstructor( textureNode ) {\n\n\t\tsuper( 0 );\n\n\t\tthis.textureNode = textureNode;\n\n\t\tthis.updateType = NodeUpdateType.FRAME;\n\n\t}\n\n\tget texture() {\n\n\t\treturn this.textureNode.value;\n\n\t}\n\n\tupdate() {\n\n\t\tconst texture = this.texture;\n\t\tconst images = texture.images;\n\t\tconst image = ( images && images.length > 0 ) ? ( ( images[ 0 ] && images[ 0 ].image ) || images[ 0 ] ) : texture.image;\n\n\t\tif ( image && image.width !== undefined ) {\n\n\t\t\tconst { width, height } = image;\n\n\t\t\tthis.value = Math.log2( Math.max( width, height ) );\n\n\t\t}\n\n\t}\n\n}\n\nexport default MaxMipLevelNode;\n\nexport const maxMipLevel = nodeProxy( MaxMipLevelNode );\n\naddNodeClass( 'MaxMipLevelNode', MaxMipLevelNode );\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,wBAAwB;AAChD,SAASC,cAAc,QAAQ,sBAAsB;AACrD,SAASC,SAAS,QAAQ,6BAA6B;AACvD,SAASC,YAAY,QAAQ,iBAAiB;AAE9C,MAAMC,eAAe,SAASJ,WAAW,CAAC;EAEzCK,WAAWA,CAAEC,WAAW,EAAG;IAE1B,KAAK,CAAE,CAAE,CAAC;IAEV,IAAI,CAACA,WAAW,GAAGA,WAAW;IAE9B,IAAI,CAACC,UAAU,GAAGN,cAAc,CAACO,KAAK;EAEvC;EAEA,IAAIC,OAAOA,CAAA,EAAG;IAEb,OAAO,IAAI,CAACH,WAAW,CAACI,KAAK;EAE9B;EAEAC,MAAMA,CAAA,EAAG;IAER,MAAMF,OAAO,GAAG,IAAI,CAACA,OAAO;IAC5B,MAAMG,MAAM,GAAGH,OAAO,CAACG,MAAM;IAC7B,MAAMC,KAAK,GAAKD,MAAM,IAAIA,MAAM,CAACE,MAAM,GAAG,CAAC,GAASF,MAAM,CAAE,CAAC,CAAE,IAAIA,MAAM,CAAE,CAAC,CAAE,CAACC,KAAK,IAAMD,MAAM,CAAE,CAAC,CAAE,GAAKH,OAAO,CAACI,KAAK;IAEvH,IAAKA,KAAK,IAAIA,KAAK,CAACE,KAAK,KAAKC,SAAS,EAAG;MAEzC,MAAM;QAAED,KAAK;QAAEE;MAAO,CAAC,GAAGJ,KAAK;MAE/B,IAAI,CAACH,KAAK,GAAGQ,IAAI,CAACC,IAAI,CAAED,IAAI,CAACE,GAAG,CAAEL,KAAK,EAAEE,MAAO,CAAE,CAAC;IAEpD;EAED;AAED;AAEA,eAAeb,eAAe;AAE9B,OAAO,MAAMiB,WAAW,GAAGnB,SAAS,CAAEE,eAAgB,CAAC;AAEvDD,YAAY,CAAE,iBAAiB,EAAEC,eAAgB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}