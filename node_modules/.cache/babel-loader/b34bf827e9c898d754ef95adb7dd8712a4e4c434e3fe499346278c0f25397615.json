{"ast":null,"code":"import _slicedToArray from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n// Three.js Transpiler\n// https://raw.githubusercontent.com/AcademySoftwareFoundation/MaterialX/main/libraries/stdlib/genglsl/lib/mx_noise.glsl\n\nimport { int, uint, float, vec3, bool, uvec3, vec2, vec4, If, tslFn } from '../../shadernode/ShaderNode.js';\nimport { cond } from '../../math/CondNode.js';\nimport { sub, mul } from '../../math/OperatorNode.js';\nimport { floor, abs, max, dot, min, sqrt } from '../../math/MathNode.js';\nimport { overloadingFn } from '../../utils/FunctionOverloadingNode.js';\nimport { loop } from '../../utils/LoopNode.js';\nvar mx_select = tslFn(function (_ref) {\n  var _ref2 = _slicedToArray(_ref, 3),\n    b_immutable = _ref2[0],\n    t_immutable = _ref2[1],\n    f_immutable = _ref2[2];\n  var f = float(f_immutable).toVar();\n  var t = float(t_immutable).toVar();\n  var b = bool(b_immutable).toVar();\n  return cond(b, t, f);\n});\nvar mx_negate_if = tslFn(function (_ref3) {\n  var _ref4 = _slicedToArray(_ref3, 2),\n    val_immutable = _ref4[0],\n    b_immutable = _ref4[1];\n  var b = bool(b_immutable).toVar();\n  var val = float(val_immutable).toVar();\n  return cond(b, val.negate(), val);\n});\nvar mx_floor = tslFn(function (_ref5) {\n  var _ref6 = _slicedToArray(_ref5, 1),\n    x_immutable = _ref6[0];\n  var x = float(x_immutable).toVar();\n  return int(floor(x));\n});\nvar mx_floorfrac = tslFn(function (_ref7) {\n  var _ref8 = _slicedToArray(_ref7, 2),\n    x_immutable = _ref8[0],\n    i = _ref8[1];\n  var x = float(x_immutable).toVar();\n  i.assign(mx_floor(x));\n  return x.sub(float(i));\n});\nvar mx_bilerp_0 = tslFn(function (_ref9) {\n  var _ref10 = _slicedToArray(_ref9, 6),\n    v0_immutable = _ref10[0],\n    v1_immutable = _ref10[1],\n    v2_immutable = _ref10[2],\n    v3_immutable = _ref10[3],\n    s_immutable = _ref10[4],\n    t_immutable = _ref10[5];\n  var t = float(t_immutable).toVar();\n  var s = float(s_immutable).toVar();\n  var v3 = float(v3_immutable).toVar();\n  var v2 = float(v2_immutable).toVar();\n  var v1 = float(v1_immutable).toVar();\n  var v0 = float(v0_immutable).toVar();\n  var s1 = float(sub(1.0, s)).toVar();\n  return sub(1.0, t).mul(v0.mul(s1).add(v1.mul(s))).add(t.mul(v2.mul(s1).add(v3.mul(s))));\n});\nvar mx_bilerp_1 = tslFn(function (_ref11) {\n  var _ref12 = _slicedToArray(_ref11, 6),\n    v0_immutable = _ref12[0],\n    v1_immutable = _ref12[1],\n    v2_immutable = _ref12[2],\n    v3_immutable = _ref12[3],\n    s_immutable = _ref12[4],\n    t_immutable = _ref12[5];\n  var t = float(t_immutable).toVar();\n  var s = float(s_immutable).toVar();\n  var v3 = vec3(v3_immutable).toVar();\n  var v2 = vec3(v2_immutable).toVar();\n  var v1 = vec3(v1_immutable).toVar();\n  var v0 = vec3(v0_immutable).toVar();\n  var s1 = float(sub(1.0, s)).toVar();\n  return sub(1.0, t).mul(v0.mul(s1).add(v1.mul(s))).add(t.mul(v2.mul(s1).add(v3.mul(s))));\n});\nvar mx_bilerp = overloadingFn([mx_bilerp_0, mx_bilerp_1]);\nvar mx_trilerp_0 = tslFn(function (_ref13) {\n  var _ref14 = _slicedToArray(_ref13, 11),\n    v0_immutable = _ref14[0],\n    v1_immutable = _ref14[1],\n    v2_immutable = _ref14[2],\n    v3_immutable = _ref14[3],\n    v4_immutable = _ref14[4],\n    v5_immutable = _ref14[5],\n    v6_immutable = _ref14[6],\n    v7_immutable = _ref14[7],\n    s_immutable = _ref14[8],\n    t_immutable = _ref14[9],\n    r_immutable = _ref14[10];\n  var r = float(r_immutable).toVar();\n  var t = float(t_immutable).toVar();\n  var s = float(s_immutable).toVar();\n  var v7 = float(v7_immutable).toVar();\n  var v6 = float(v6_immutable).toVar();\n  var v5 = float(v5_immutable).toVar();\n  var v4 = float(v4_immutable).toVar();\n  var v3 = float(v3_immutable).toVar();\n  var v2 = float(v2_immutable).toVar();\n  var v1 = float(v1_immutable).toVar();\n  var v0 = float(v0_immutable).toVar();\n  var s1 = float(sub(1.0, s)).toVar();\n  var t1 = float(sub(1.0, t)).toVar();\n  var r1 = float(sub(1.0, r)).toVar();\n  return r1.mul(t1.mul(v0.mul(s1).add(v1.mul(s))).add(t.mul(v2.mul(s1).add(v3.mul(s))))).add(r.mul(t1.mul(v4.mul(s1).add(v5.mul(s))).add(t.mul(v6.mul(s1).add(v7.mul(s))))));\n});\nvar mx_trilerp_1 = tslFn(function (_ref15) {\n  var _ref16 = _slicedToArray(_ref15, 11),\n    v0_immutable = _ref16[0],\n    v1_immutable = _ref16[1],\n    v2_immutable = _ref16[2],\n    v3_immutable = _ref16[3],\n    v4_immutable = _ref16[4],\n    v5_immutable = _ref16[5],\n    v6_immutable = _ref16[6],\n    v7_immutable = _ref16[7],\n    s_immutable = _ref16[8],\n    t_immutable = _ref16[9],\n    r_immutable = _ref16[10];\n  var r = float(r_immutable).toVar();\n  var t = float(t_immutable).toVar();\n  var s = float(s_immutable).toVar();\n  var v7 = vec3(v7_immutable).toVar();\n  var v6 = vec3(v6_immutable).toVar();\n  var v5 = vec3(v5_immutable).toVar();\n  var v4 = vec3(v4_immutable).toVar();\n  var v3 = vec3(v3_immutable).toVar();\n  var v2 = vec3(v2_immutable).toVar();\n  var v1 = vec3(v1_immutable).toVar();\n  var v0 = vec3(v0_immutable).toVar();\n  var s1 = float(sub(1.0, s)).toVar();\n  var t1 = float(sub(1.0, t)).toVar();\n  var r1 = float(sub(1.0, r)).toVar();\n  return r1.mul(t1.mul(v0.mul(s1).add(v1.mul(s))).add(t.mul(v2.mul(s1).add(v3.mul(s))))).add(r.mul(t1.mul(v4.mul(s1).add(v5.mul(s))).add(t.mul(v6.mul(s1).add(v7.mul(s))))));\n});\nvar mx_trilerp = overloadingFn([mx_trilerp_0, mx_trilerp_1]);\nvar mx_gradient_float_0 = tslFn(function (_ref17) {\n  var _ref18 = _slicedToArray(_ref17, 3),\n    hash_immutable = _ref18[0],\n    x_immutable = _ref18[1],\n    y_immutable = _ref18[2];\n  var y = float(y_immutable).toVar();\n  var x = float(x_immutable).toVar();\n  var hash = uint(hash_immutable).toVar();\n  var h = uint(hash.bitAnd(uint(7))).toVar();\n  var u = float(mx_select(h.lessThan(uint(4)), x, y)).toVar();\n  var v = float(mul(2.0, mx_select(h.lessThan(uint(4)), y, x))).toVar();\n  return mx_negate_if(u, bool(h.bitAnd(uint(1)))).add(mx_negate_if(v, bool(h.bitAnd(uint(2)))));\n});\nvar mx_gradient_float_1 = tslFn(function (_ref19) {\n  var _ref20 = _slicedToArray(_ref19, 4),\n    hash_immutable = _ref20[0],\n    x_immutable = _ref20[1],\n    y_immutable = _ref20[2],\n    z_immutable = _ref20[3];\n  var z = float(z_immutable).toVar();\n  var y = float(y_immutable).toVar();\n  var x = float(x_immutable).toVar();\n  var hash = uint(hash_immutable).toVar();\n  var h = uint(hash.bitAnd(uint(15))).toVar();\n  var u = float(mx_select(h.lessThan(uint(8)), x, y)).toVar();\n  var v = float(mx_select(h.lessThan(uint(4)), y, mx_select(h.equal(uint(12)).or(h.equal(uint(14))), x, z))).toVar();\n  return mx_negate_if(u, bool(h.bitAnd(uint(1)))).add(mx_negate_if(v, bool(h.bitAnd(uint(2)))));\n});\nvar mx_gradient_float = overloadingFn([mx_gradient_float_0, mx_gradient_float_1]);\nvar mx_gradient_vec3_0 = tslFn(function (_ref21) {\n  var _ref22 = _slicedToArray(_ref21, 3),\n    hash_immutable = _ref22[0],\n    x_immutable = _ref22[1],\n    y_immutable = _ref22[2];\n  var y = float(y_immutable).toVar();\n  var x = float(x_immutable).toVar();\n  var hash = uvec3(hash_immutable).toVar();\n  return vec3(mx_gradient_float(hash.x, x, y), mx_gradient_float(hash.y, x, y), mx_gradient_float(hash.z, x, y));\n});\nvar mx_gradient_vec3_1 = tslFn(function (_ref23) {\n  var _ref24 = _slicedToArray(_ref23, 4),\n    hash_immutable = _ref24[0],\n    x_immutable = _ref24[1],\n    y_immutable = _ref24[2],\n    z_immutable = _ref24[3];\n  var z = float(z_immutable).toVar();\n  var y = float(y_immutable).toVar();\n  var x = float(x_immutable).toVar();\n  var hash = uvec3(hash_immutable).toVar();\n  return vec3(mx_gradient_float(hash.x, x, y, z), mx_gradient_float(hash.y, x, y, z), mx_gradient_float(hash.z, x, y, z));\n});\nvar mx_gradient_vec3 = overloadingFn([mx_gradient_vec3_0, mx_gradient_vec3_1]);\nvar mx_gradient_scale2d_0 = tslFn(function (_ref25) {\n  var _ref26 = _slicedToArray(_ref25, 1),\n    v_immutable = _ref26[0];\n  var v = float(v_immutable).toVar();\n  return mul(0.6616, v);\n});\nvar mx_gradient_scale3d_0 = tslFn(function (_ref27) {\n  var _ref28 = _slicedToArray(_ref27, 1),\n    v_immutable = _ref28[0];\n  var v = float(v_immutable).toVar();\n  return mul(0.9820, v);\n});\nvar mx_gradient_scale2d_1 = tslFn(function (_ref29) {\n  var _ref30 = _slicedToArray(_ref29, 1),\n    v_immutable = _ref30[0];\n  var v = vec3(v_immutable).toVar();\n  return mul(0.6616, v);\n});\nvar mx_gradient_scale2d = overloadingFn([mx_gradient_scale2d_0, mx_gradient_scale2d_1]);\nvar mx_gradient_scale3d_1 = tslFn(function (_ref31) {\n  var _ref32 = _slicedToArray(_ref31, 1),\n    v_immutable = _ref32[0];\n  var v = vec3(v_immutable).toVar();\n  return mul(0.9820, v);\n});\nvar mx_gradient_scale3d = overloadingFn([mx_gradient_scale3d_0, mx_gradient_scale3d_1]);\nvar mx_rotl32 = tslFn(function (_ref33) {\n  var _ref34 = _slicedToArray(_ref33, 2),\n    x_immutable = _ref34[0],\n    k_immutable = _ref34[1];\n  var k = int(k_immutable).toVar();\n  var x = uint(x_immutable).toVar();\n  return x.shiftLeft(k).bitOr(x.shiftRight(int(32).sub(k)));\n});\nvar mx_bjmix = tslFn(function (_ref35) {\n  var _ref36 = _slicedToArray(_ref35, 3),\n    a = _ref36[0],\n    b = _ref36[1],\n    c = _ref36[2];\n  a.subAssign(c);\n  a.bitXorAssign(mx_rotl32(c, int(4)));\n  c.addAssign(b);\n  b.subAssign(a);\n  b.bitXorAssign(mx_rotl32(a, int(6)));\n  a.addAssign(c);\n  c.subAssign(b);\n  c.bitXorAssign(mx_rotl32(b, int(8)));\n  b.addAssign(a);\n  a.subAssign(c);\n  a.bitXorAssign(mx_rotl32(c, int(16)));\n  c.addAssign(b);\n  b.subAssign(a);\n  b.bitXorAssign(mx_rotl32(a, int(19)));\n  a.addAssign(c);\n  c.subAssign(b);\n  c.bitXorAssign(mx_rotl32(b, int(4)));\n  b.addAssign(a);\n});\nvar mx_bjfinal = tslFn(function (_ref37) {\n  var _ref38 = _slicedToArray(_ref37, 3),\n    a_immutable = _ref38[0],\n    b_immutable = _ref38[1],\n    c_immutable = _ref38[2];\n  var c = uint(c_immutable).toVar();\n  var b = uint(b_immutable).toVar();\n  var a = uint(a_immutable).toVar();\n  c.bitXorAssign(b);\n  c.subAssign(mx_rotl32(b, int(14)));\n  a.bitXorAssign(c);\n  a.subAssign(mx_rotl32(c, int(11)));\n  b.bitXorAssign(a);\n  b.subAssign(mx_rotl32(a, int(25)));\n  c.bitXorAssign(b);\n  c.subAssign(mx_rotl32(b, int(16)));\n  a.bitXorAssign(c);\n  a.subAssign(mx_rotl32(c, int(4)));\n  b.bitXorAssign(a);\n  b.subAssign(mx_rotl32(a, int(14)));\n  c.bitXorAssign(b);\n  c.subAssign(mx_rotl32(b, int(24)));\n  return c;\n});\nvar mx_bits_to_01 = tslFn(function (_ref39) {\n  var _ref40 = _slicedToArray(_ref39, 1),\n    bits_immutable = _ref40[0];\n  var bits = uint(bits_immutable).toVar();\n  return float(bits).div(float(uint(int(0xffffffff))));\n});\nvar mx_fade = tslFn(function (_ref41) {\n  var _ref42 = _slicedToArray(_ref41, 1),\n    t_immutable = _ref42[0];\n  var t = float(t_immutable).toVar();\n  return t.mul(t.mul(t.mul(t.mul(t.mul(6.0).sub(15.0)).add(10.0))));\n});\nvar mx_hash_int_0 = tslFn(function (_ref43) {\n  var _ref44 = _slicedToArray(_ref43, 1),\n    x_immutable = _ref44[0];\n  var x = int(x_immutable).toVar();\n  var len = uint(uint(1)).toVar();\n  var seed = uint(uint(int(0xdeadbeef)).add(len.shiftLeft(uint(2)).add(uint(13)))).toVar();\n  return mx_bjfinal(seed.add(uint(x)), seed, seed);\n});\nvar mx_hash_int_1 = tslFn(function (_ref45) {\n  var _ref46 = _slicedToArray(_ref45, 2),\n    x_immutable = _ref46[0],\n    y_immutable = _ref46[1];\n  var y = int(y_immutable).toVar();\n  var x = int(x_immutable).toVar();\n  var len = uint(uint(2)).toVar();\n  var a = uint().toVar(),\n    b = uint().toVar(),\n    c = uint().toVar();\n  a.assign(b.assign(c.assign(uint(int(0xdeadbeef)).add(len.shiftLeft(uint(2)).add(uint(13))))));\n  a.addAssign(uint(x));\n  b.addAssign(uint(y));\n  return mx_bjfinal(a, b, c);\n});\nvar mx_hash_int_2 = tslFn(function (_ref47) {\n  var _ref48 = _slicedToArray(_ref47, 3),\n    x_immutable = _ref48[0],\n    y_immutable = _ref48[1],\n    z_immutable = _ref48[2];\n  var z = int(z_immutable).toVar();\n  var y = int(y_immutable).toVar();\n  var x = int(x_immutable).toVar();\n  var len = uint(uint(3)).toVar();\n  var a = uint().toVar(),\n    b = uint().toVar(),\n    c = uint().toVar();\n  a.assign(b.assign(c.assign(uint(int(0xdeadbeef)).add(len.shiftLeft(uint(2)).add(uint(13))))));\n  a.addAssign(uint(x));\n  b.addAssign(uint(y));\n  c.addAssign(uint(z));\n  return mx_bjfinal(a, b, c);\n});\nvar mx_hash_int_3 = tslFn(function (_ref49) {\n  var _ref50 = _slicedToArray(_ref49, 4),\n    x_immutable = _ref50[0],\n    y_immutable = _ref50[1],\n    z_immutable = _ref50[2],\n    xx_immutable = _ref50[3];\n  var xx = int(xx_immutable).toVar();\n  var z = int(z_immutable).toVar();\n  var y = int(y_immutable).toVar();\n  var x = int(x_immutable).toVar();\n  var len = uint(uint(4)).toVar();\n  var a = uint().toVar(),\n    b = uint().toVar(),\n    c = uint().toVar();\n  a.assign(b.assign(c.assign(uint(int(0xdeadbeef)).add(len.shiftLeft(uint(2)).add(uint(13))))));\n  a.addAssign(uint(x));\n  b.addAssign(uint(y));\n  c.addAssign(uint(z));\n  mx_bjmix(a, b, c);\n  a.addAssign(uint(xx));\n  return mx_bjfinal(a, b, c);\n});\nvar mx_hash_int_4 = tslFn(function (_ref51) {\n  var _ref52 = _slicedToArray(_ref51, 5),\n    x_immutable = _ref52[0],\n    y_immutable = _ref52[1],\n    z_immutable = _ref52[2],\n    xx_immutable = _ref52[3],\n    yy_immutable = _ref52[4];\n  var yy = int(yy_immutable).toVar();\n  var xx = int(xx_immutable).toVar();\n  var z = int(z_immutable).toVar();\n  var y = int(y_immutable).toVar();\n  var x = int(x_immutable).toVar();\n  var len = uint(uint(5)).toVar();\n  var a = uint().toVar(),\n    b = uint().toVar(),\n    c = uint().toVar();\n  a.assign(b.assign(c.assign(uint(int(0xdeadbeef)).add(len.shiftLeft(uint(2)).add(uint(13))))));\n  a.addAssign(uint(x));\n  b.addAssign(uint(y));\n  c.addAssign(uint(z));\n  mx_bjmix(a, b, c);\n  a.addAssign(uint(xx));\n  b.addAssign(uint(yy));\n  return mx_bjfinal(a, b, c);\n});\nvar mx_hash_int = overloadingFn([mx_hash_int_0, mx_hash_int_1, mx_hash_int_2, mx_hash_int_3, mx_hash_int_4]);\nvar mx_hash_vec3_0 = tslFn(function (_ref53) {\n  var _ref54 = _slicedToArray(_ref53, 2),\n    x_immutable = _ref54[0],\n    y_immutable = _ref54[1];\n  var y = int(y_immutable).toVar();\n  var x = int(x_immutable).toVar();\n  var h = uint(mx_hash_int(x, y)).toVar();\n  var result = uvec3().toVar();\n  result.x.assign(h.bitAnd(int(0xFF)));\n  result.y.assign(h.shiftRight(int(8)).bitAnd(int(0xFF)));\n  result.z.assign(h.shiftRight(int(16)).bitAnd(int(0xFF)));\n  return result;\n});\nvar mx_hash_vec3_1 = tslFn(function (_ref55) {\n  var _ref56 = _slicedToArray(_ref55, 3),\n    x_immutable = _ref56[0],\n    y_immutable = _ref56[1],\n    z_immutable = _ref56[2];\n  var z = int(z_immutable).toVar();\n  var y = int(y_immutable).toVar();\n  var x = int(x_immutable).toVar();\n  var h = uint(mx_hash_int(x, y, z)).toVar();\n  var result = uvec3().toVar();\n  result.x.assign(h.bitAnd(int(0xFF)));\n  result.y.assign(h.shiftRight(int(8)).bitAnd(int(0xFF)));\n  result.z.assign(h.shiftRight(int(16)).bitAnd(int(0xFF)));\n  return result;\n});\nvar mx_hash_vec3 = overloadingFn([mx_hash_vec3_0, mx_hash_vec3_1]);\nvar mx_perlin_noise_float_0 = tslFn(function (_ref57) {\n  var _ref58 = _slicedToArray(_ref57, 1),\n    p_immutable = _ref58[0];\n  var p = vec2(p_immutable).toVar();\n  var X = int().toVar(),\n    Y = int().toVar();\n  var fx = float(mx_floorfrac(p.x, X)).toVar();\n  var fy = float(mx_floorfrac(p.y, Y)).toVar();\n  var u = float(mx_fade(fx)).toVar();\n  var v = float(mx_fade(fy)).toVar();\n  var result = float(mx_bilerp(mx_gradient_float(mx_hash_int(X, Y), fx, fy), mx_gradient_float(mx_hash_int(X.add(int(1)), Y), fx.sub(1.0), fy), mx_gradient_float(mx_hash_int(X, Y.add(int(1))), fx, fy.sub(1.0)), mx_gradient_float(mx_hash_int(X.add(int(1)), Y.add(int(1))), fx.sub(1.0), fy.sub(1.0)), u, v)).toVar();\n  return mx_gradient_scale2d(result);\n});\nvar mx_perlin_noise_float_1 = tslFn(function (_ref59) {\n  var _ref60 = _slicedToArray(_ref59, 1),\n    p_immutable = _ref60[0];\n  var p = vec3(p_immutable).toVar();\n  var X = int().toVar(),\n    Y = int().toVar(),\n    Z = int().toVar();\n  var fx = float(mx_floorfrac(p.x, X)).toVar();\n  var fy = float(mx_floorfrac(p.y, Y)).toVar();\n  var fz = float(mx_floorfrac(p.z, Z)).toVar();\n  var u = float(mx_fade(fx)).toVar();\n  var v = float(mx_fade(fy)).toVar();\n  var w = float(mx_fade(fz)).toVar();\n  var result = float(mx_trilerp(mx_gradient_float(mx_hash_int(X, Y, Z), fx, fy, fz), mx_gradient_float(mx_hash_int(X.add(int(1)), Y, Z), fx.sub(1.0), fy, fz), mx_gradient_float(mx_hash_int(X, Y.add(int(1)), Z), fx, fy.sub(1.0), fz), mx_gradient_float(mx_hash_int(X.add(int(1)), Y.add(int(1)), Z), fx.sub(1.0), fy.sub(1.0), fz), mx_gradient_float(mx_hash_int(X, Y, Z.add(int(1))), fx, fy, fz.sub(1.0)), mx_gradient_float(mx_hash_int(X.add(int(1)), Y, Z.add(int(1))), fx.sub(1.0), fy, fz.sub(1.0)), mx_gradient_float(mx_hash_int(X, Y.add(int(1)), Z.add(int(1))), fx, fy.sub(1.0), fz.sub(1.0)), mx_gradient_float(mx_hash_int(X.add(int(1)), Y.add(int(1)), Z.add(int(1))), fx.sub(1.0), fy.sub(1.0), fz.sub(1.0)), u, v, w)).toVar();\n  return mx_gradient_scale3d(result);\n});\nvar mx_perlin_noise_float = overloadingFn([mx_perlin_noise_float_0, mx_perlin_noise_float_1]);\nvar mx_perlin_noise_vec3_0 = tslFn(function (_ref61) {\n  var _ref62 = _slicedToArray(_ref61, 1),\n    p_immutable = _ref62[0];\n  var p = vec2(p_immutable).toVar();\n  var X = int().toVar(),\n    Y = int().toVar();\n  var fx = float(mx_floorfrac(p.x, X)).toVar();\n  var fy = float(mx_floorfrac(p.y, Y)).toVar();\n  var u = float(mx_fade(fx)).toVar();\n  var v = float(mx_fade(fy)).toVar();\n  var result = vec3(mx_bilerp(mx_gradient_vec3(mx_hash_vec3(X, Y), fx, fy), mx_gradient_vec3(mx_hash_vec3(X.add(int(1)), Y), fx.sub(1.0), fy), mx_gradient_vec3(mx_hash_vec3(X, Y.add(int(1))), fx, fy.sub(1.0)), mx_gradient_vec3(mx_hash_vec3(X.add(int(1)), Y.add(int(1))), fx.sub(1.0), fy.sub(1.0)), u, v)).toVar();\n  return mx_gradient_scale2d(result);\n});\nvar mx_perlin_noise_vec3_1 = tslFn(function (_ref63) {\n  var _ref64 = _slicedToArray(_ref63, 1),\n    p_immutable = _ref64[0];\n  var p = vec3(p_immutable).toVar();\n  var X = int().toVar(),\n    Y = int().toVar(),\n    Z = int().toVar();\n  var fx = float(mx_floorfrac(p.x, X)).toVar();\n  var fy = float(mx_floorfrac(p.y, Y)).toVar();\n  var fz = float(mx_floorfrac(p.z, Z)).toVar();\n  var u = float(mx_fade(fx)).toVar();\n  var v = float(mx_fade(fy)).toVar();\n  var w = float(mx_fade(fz)).toVar();\n  var result = vec3(mx_trilerp(mx_gradient_vec3(mx_hash_vec3(X, Y, Z), fx, fy, fz), mx_gradient_vec3(mx_hash_vec3(X.add(int(1)), Y, Z), fx.sub(1.0), fy, fz), mx_gradient_vec3(mx_hash_vec3(X, Y.add(int(1)), Z), fx, fy.sub(1.0), fz), mx_gradient_vec3(mx_hash_vec3(X.add(int(1)), Y.add(int(1)), Z), fx.sub(1.0), fy.sub(1.0), fz), mx_gradient_vec3(mx_hash_vec3(X, Y, Z.add(int(1))), fx, fy, fz.sub(1.0)), mx_gradient_vec3(mx_hash_vec3(X.add(int(1)), Y, Z.add(int(1))), fx.sub(1.0), fy, fz.sub(1.0)), mx_gradient_vec3(mx_hash_vec3(X, Y.add(int(1)), Z.add(int(1))), fx, fy.sub(1.0), fz.sub(1.0)), mx_gradient_vec3(mx_hash_vec3(X.add(int(1)), Y.add(int(1)), Z.add(int(1))), fx.sub(1.0), fy.sub(1.0), fz.sub(1.0)), u, v, w)).toVar();\n  return mx_gradient_scale3d(result);\n});\nvar mx_perlin_noise_vec3 = overloadingFn([mx_perlin_noise_vec3_0, mx_perlin_noise_vec3_1]);\nvar mx_cell_noise_float_0 = tslFn(function (_ref65) {\n  var _ref66 = _slicedToArray(_ref65, 1),\n    p_immutable = _ref66[0];\n  var p = float(p_immutable).toVar();\n  var ix = int(mx_floor(p)).toVar();\n  return mx_bits_to_01(mx_hash_int(ix));\n});\nvar mx_cell_noise_float_1 = tslFn(function (_ref67) {\n  var _ref68 = _slicedToArray(_ref67, 1),\n    p_immutable = _ref68[0];\n  var p = vec2(p_immutable).toVar();\n  var ix = int(mx_floor(p.x)).toVar();\n  var iy = int(mx_floor(p.y)).toVar();\n  return mx_bits_to_01(mx_hash_int(ix, iy));\n});\nvar mx_cell_noise_float_2 = tslFn(function (_ref69) {\n  var _ref70 = _slicedToArray(_ref69, 1),\n    p_immutable = _ref70[0];\n  var p = vec3(p_immutable).toVar();\n  var ix = int(mx_floor(p.x)).toVar();\n  var iy = int(mx_floor(p.y)).toVar();\n  var iz = int(mx_floor(p.z)).toVar();\n  return mx_bits_to_01(mx_hash_int(ix, iy, iz));\n});\nvar mx_cell_noise_float_3 = tslFn(function (_ref71) {\n  var _ref72 = _slicedToArray(_ref71, 1),\n    p_immutable = _ref72[0];\n  var p = vec4(p_immutable).toVar();\n  var ix = int(mx_floor(p.x)).toVar();\n  var iy = int(mx_floor(p.y)).toVar();\n  var iz = int(mx_floor(p.z)).toVar();\n  var iw = int(mx_floor(p.w)).toVar();\n  return mx_bits_to_01(mx_hash_int(ix, iy, iz, iw));\n});\nvar mx_cell_noise_float = overloadingFn([mx_cell_noise_float_0, mx_cell_noise_float_1, mx_cell_noise_float_2, mx_cell_noise_float_3]);\nvar mx_cell_noise_vec3_0 = tslFn(function (_ref73) {\n  var _ref74 = _slicedToArray(_ref73, 1),\n    p_immutable = _ref74[0];\n  var p = float(p_immutable).toVar();\n  var ix = int(mx_floor(p)).toVar();\n  return vec3(mx_bits_to_01(mx_hash_int(ix, int(0))), mx_bits_to_01(mx_hash_int(ix, int(1))), mx_bits_to_01(mx_hash_int(ix, int(2))));\n});\nvar mx_cell_noise_vec3_1 = tslFn(function (_ref75) {\n  var _ref76 = _slicedToArray(_ref75, 1),\n    p_immutable = _ref76[0];\n  var p = vec2(p_immutable).toVar();\n  var ix = int(mx_floor(p.x)).toVar();\n  var iy = int(mx_floor(p.y)).toVar();\n  return vec3(mx_bits_to_01(mx_hash_int(ix, iy, int(0))), mx_bits_to_01(mx_hash_int(ix, iy, int(1))), mx_bits_to_01(mx_hash_int(ix, iy, int(2))));\n});\nvar mx_cell_noise_vec3_2 = tslFn(function (_ref77) {\n  var _ref78 = _slicedToArray(_ref77, 1),\n    p_immutable = _ref78[0];\n  var p = vec3(p_immutable).toVar();\n  var ix = int(mx_floor(p.x)).toVar();\n  var iy = int(mx_floor(p.y)).toVar();\n  var iz = int(mx_floor(p.z)).toVar();\n  return vec3(mx_bits_to_01(mx_hash_int(ix, iy, iz, int(0))), mx_bits_to_01(mx_hash_int(ix, iy, iz, int(1))), mx_bits_to_01(mx_hash_int(ix, iy, iz, int(2))));\n});\nvar mx_cell_noise_vec3_3 = tslFn(function (_ref79) {\n  var _ref80 = _slicedToArray(_ref79, 1),\n    p_immutable = _ref80[0];\n  var p = vec4(p_immutable).toVar();\n  var ix = int(mx_floor(p.x)).toVar();\n  var iy = int(mx_floor(p.y)).toVar();\n  var iz = int(mx_floor(p.z)).toVar();\n  var iw = int(mx_floor(p.w)).toVar();\n  return vec3(mx_bits_to_01(mx_hash_int(ix, iy, iz, iw, int(0))), mx_bits_to_01(mx_hash_int(ix, iy, iz, iw, int(1))), mx_bits_to_01(mx_hash_int(ix, iy, iz, iw, int(2))));\n});\nvar mx_cell_noise_vec3 = overloadingFn([mx_cell_noise_vec3_0, mx_cell_noise_vec3_1, mx_cell_noise_vec3_2, mx_cell_noise_vec3_3]);\nvar mx_fractal_noise_float = tslFn(function (_ref81) {\n  var _ref82 = _slicedToArray(_ref81, 4),\n    p_immutable = _ref82[0],\n    octaves_immutable = _ref82[1],\n    lacunarity_immutable = _ref82[2],\n    diminish_immutable = _ref82[3];\n  var diminish = float(diminish_immutable).toVar();\n  var lacunarity = float(lacunarity_immutable).toVar();\n  var octaves = int(octaves_immutable).toVar();\n  var p = vec3(p_immutable).toVar();\n  var result = float(0.0).toVar();\n  var amplitude = float(1.0).toVar();\n  loop({\n    start: int(0),\n    end: octaves\n  }, function (_ref83) {\n    var i = _ref83.i;\n    result.addAssign(amplitude.mul(mx_perlin_noise_float(p)));\n    amplitude.mulAssign(diminish);\n    p.mulAssign(lacunarity);\n  });\n  return result;\n});\nvar mx_fractal_noise_vec3 = tslFn(function (_ref84) {\n  var _ref85 = _slicedToArray(_ref84, 4),\n    p_immutable = _ref85[0],\n    octaves_immutable = _ref85[1],\n    lacunarity_immutable = _ref85[2],\n    diminish_immutable = _ref85[3];\n  var diminish = float(diminish_immutable).toVar();\n  var lacunarity = float(lacunarity_immutable).toVar();\n  var octaves = int(octaves_immutable).toVar();\n  var p = vec3(p_immutable).toVar();\n  var result = vec3(0.0).toVar();\n  var amplitude = float(1.0).toVar();\n  loop({\n    start: int(0),\n    end: octaves\n  }, function (_ref86) {\n    var i = _ref86.i;\n    result.addAssign(amplitude.mul(mx_perlin_noise_vec3(p)));\n    amplitude.mulAssign(diminish);\n    p.mulAssign(lacunarity);\n  });\n  return result;\n});\nvar mx_fractal_noise_vec2 = tslFn(function (_ref87) {\n  var _ref88 = _slicedToArray(_ref87, 4),\n    p_immutable = _ref88[0],\n    octaves_immutable = _ref88[1],\n    lacunarity_immutable = _ref88[2],\n    diminish_immutable = _ref88[3];\n  var diminish = float(diminish_immutable).toVar();\n  var lacunarity = float(lacunarity_immutable).toVar();\n  var octaves = int(octaves_immutable).toVar();\n  var p = vec3(p_immutable).toVar();\n  return vec2(mx_fractal_noise_float(p, octaves, lacunarity, diminish), mx_fractal_noise_float(p.add(vec3(int(19), int(193), int(17))), octaves, lacunarity, diminish));\n});\nvar mx_fractal_noise_vec4 = tslFn(function (_ref89) {\n  var _ref90 = _slicedToArray(_ref89, 4),\n    p_immutable = _ref90[0],\n    octaves_immutable = _ref90[1],\n    lacunarity_immutable = _ref90[2],\n    diminish_immutable = _ref90[3];\n  var diminish = float(diminish_immutable).toVar();\n  var lacunarity = float(lacunarity_immutable).toVar();\n  var octaves = int(octaves_immutable).toVar();\n  var p = vec3(p_immutable).toVar();\n  var c = vec3(mx_fractal_noise_vec3(p, octaves, lacunarity, diminish)).toVar();\n  var f = float(mx_fractal_noise_float(p.add(vec3(int(19), int(193), int(17))), octaves, lacunarity, diminish)).toVar();\n  return vec4(c, f);\n});\nvar mx_worley_distance_0 = tslFn(function (_ref91) {\n  var _ref92 = _slicedToArray(_ref91, 7),\n    p_immutable = _ref92[0],\n    x_immutable = _ref92[1],\n    y_immutable = _ref92[2],\n    xoff_immutable = _ref92[3],\n    yoff_immutable = _ref92[4],\n    jitter_immutable = _ref92[5],\n    metric_immutable = _ref92[6];\n  var metric = int(metric_immutable).toVar();\n  var jitter = float(jitter_immutable).toVar();\n  var yoff = int(yoff_immutable).toVar();\n  var xoff = int(xoff_immutable).toVar();\n  var y = int(y_immutable).toVar();\n  var x = int(x_immutable).toVar();\n  var p = vec2(p_immutable).toVar();\n  var tmp = vec3(mx_cell_noise_vec3(vec2(x.add(xoff), y.add(yoff)))).toVar();\n  var off = vec2(tmp.x, tmp.y).toVar();\n  off.subAssign(0.5);\n  off.mulAssign(jitter);\n  off.addAssign(0.5);\n  var cellpos = vec2(vec2(float(x), float(y)).add(off)).toVar();\n  var diff = vec2(cellpos.sub(p)).toVar();\n  If(metric.equal(int(2)), function () {\n    return abs(diff.x).add(abs(diff.y));\n  });\n  If(metric.equal(int(3)), function () {\n    return max(abs(diff.x), abs(diff.y));\n  });\n  return dot(diff, diff);\n});\nvar mx_worley_distance_1 = tslFn(function (_ref93) {\n  var _ref94 = _slicedToArray(_ref93, 9),\n    p_immutable = _ref94[0],\n    x_immutable = _ref94[1],\n    y_immutable = _ref94[2],\n    z_immutable = _ref94[3],\n    xoff_immutable = _ref94[4],\n    yoff_immutable = _ref94[5],\n    zoff_immutable = _ref94[6],\n    jitter_immutable = _ref94[7],\n    metric_immutable = _ref94[8];\n  var metric = int(metric_immutable).toVar();\n  var jitter = float(jitter_immutable).toVar();\n  var zoff = int(zoff_immutable).toVar();\n  var yoff = int(yoff_immutable).toVar();\n  var xoff = int(xoff_immutable).toVar();\n  var z = int(z_immutable).toVar();\n  var y = int(y_immutable).toVar();\n  var x = int(x_immutable).toVar();\n  var p = vec3(p_immutable).toVar();\n  var off = vec3(mx_cell_noise_vec3(vec3(x.add(xoff), y.add(yoff), z.add(zoff)))).toVar();\n  off.subAssign(0.5);\n  off.mulAssign(jitter);\n  off.addAssign(0.5);\n  var cellpos = vec3(vec3(float(x), float(y), float(z)).add(off)).toVar();\n  var diff = vec3(cellpos.sub(p)).toVar();\n  If(metric.equal(int(2)), function () {\n    return abs(diff.x).add(abs(diff.y).add(abs(diff.z)));\n  });\n  If(metric.equal(int(3)), function () {\n    return max(max(abs(diff.x), abs(diff.y)), abs(diff.z));\n  });\n  return dot(diff, diff);\n});\nvar mx_worley_distance = overloadingFn([mx_worley_distance_0, mx_worley_distance_1]);\nvar mx_worley_noise_float_0 = tslFn(function (_ref95) {\n  var _ref96 = _slicedToArray(_ref95, 3),\n    p_immutable = _ref96[0],\n    jitter_immutable = _ref96[1],\n    metric_immutable = _ref96[2];\n  var metric = int(metric_immutable).toVar();\n  var jitter = float(jitter_immutable).toVar();\n  var p = vec2(p_immutable).toVar();\n  var X = int().toVar(),\n    Y = int().toVar();\n  var localpos = vec2(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y)).toVar();\n  var sqdist = float(1e6).toVar();\n  loop({\n    start: -1,\n    end: int(1),\n    name: 'x',\n    condition: '<='\n  }, function (_ref97) {\n    var x = _ref97.x;\n    loop({\n      start: -1,\n      end: int(1),\n      name: 'y',\n      condition: '<='\n    }, function (_ref98) {\n      var y = _ref98.y;\n      var dist = float(mx_worley_distance(localpos, x, y, X, Y, jitter, metric)).toVar();\n      sqdist.assign(min(sqdist, dist));\n    });\n  });\n  If(metric.equal(int(0)), function () {\n    sqdist.assign(sqrt(sqdist));\n  });\n  return sqdist;\n});\nvar mx_worley_noise_vec2_0 = tslFn(function (_ref99) {\n  var _ref100 = _slicedToArray(_ref99, 3),\n    p_immutable = _ref100[0],\n    jitter_immutable = _ref100[1],\n    metric_immutable = _ref100[2];\n  var metric = int(metric_immutable).toVar();\n  var jitter = float(jitter_immutable).toVar();\n  var p = vec2(p_immutable).toVar();\n  var X = int().toVar(),\n    Y = int().toVar();\n  var localpos = vec2(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y)).toVar();\n  var sqdist = vec2(1e6, 1e6).toVar();\n  loop({\n    start: -1,\n    end: int(1),\n    name: 'x',\n    condition: '<='\n  }, function (_ref101) {\n    var x = _ref101.x;\n    loop({\n      start: -1,\n      end: int(1),\n      name: 'y',\n      condition: '<='\n    }, function (_ref102) {\n      var y = _ref102.y;\n      var dist = float(mx_worley_distance(localpos, x, y, X, Y, jitter, metric)).toVar();\n      If(dist.lessThan(sqdist.x), function () {\n        sqdist.y.assign(sqdist.x);\n        sqdist.x.assign(dist);\n      }).elseif(dist.lessThan(sqdist.y), function () {\n        sqdist.y.assign(dist);\n      });\n    });\n  });\n  If(metric.equal(int(0)), function () {\n    sqdist.assign(sqrt(sqdist));\n  });\n  return sqdist;\n});\nvar mx_worley_noise_vec3_0 = tslFn(function (_ref103) {\n  var _ref104 = _slicedToArray(_ref103, 3),\n    p_immutable = _ref104[0],\n    jitter_immutable = _ref104[1],\n    metric_immutable = _ref104[2];\n  var metric = int(metric_immutable).toVar();\n  var jitter = float(jitter_immutable).toVar();\n  var p = vec2(p_immutable).toVar();\n  var X = int().toVar(),\n    Y = int().toVar();\n  var localpos = vec2(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y)).toVar();\n  var sqdist = vec3(1e6, 1e6, 1e6).toVar();\n  loop({\n    start: -1,\n    end: int(1),\n    name: 'x',\n    condition: '<='\n  }, function (_ref105) {\n    var x = _ref105.x;\n    loop({\n      start: -1,\n      end: int(1),\n      name: 'y',\n      condition: '<='\n    }, function (_ref106) {\n      var y = _ref106.y;\n      var dist = float(mx_worley_distance(localpos, x, y, X, Y, jitter, metric)).toVar();\n      If(dist.lessThan(sqdist.x), function () {\n        sqdist.z.assign(sqdist.y);\n        sqdist.y.assign(sqdist.x);\n        sqdist.x.assign(dist);\n      }).elseif(dist.lessThan(sqdist.y), function () {\n        sqdist.z.assign(sqdist.y);\n        sqdist.y.assign(dist);\n      }).elseif(dist.lessThan(sqdist.z), function () {\n        sqdist.z.assign(dist);\n      });\n    });\n  });\n  If(metric.equal(int(0)), function () {\n    sqdist.assign(sqrt(sqdist));\n  });\n  return sqdist;\n});\nvar mx_worley_noise_float_1 = tslFn(function (_ref107) {\n  var _ref108 = _slicedToArray(_ref107, 3),\n    p_immutable = _ref108[0],\n    jitter_immutable = _ref108[1],\n    metric_immutable = _ref108[2];\n  var metric = int(metric_immutable).toVar();\n  var jitter = float(jitter_immutable).toVar();\n  var p = vec3(p_immutable).toVar();\n  var X = int().toVar(),\n    Y = int().toVar(),\n    Z = int().toVar();\n  var localpos = vec3(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y), mx_floorfrac(p.z, Z)).toVar();\n  var sqdist = float(1e6).toVar();\n  loop({\n    start: -1,\n    end: int(1),\n    name: 'x',\n    condition: '<='\n  }, function (_ref109) {\n    var x = _ref109.x;\n    loop({\n      start: -1,\n      end: int(1),\n      name: 'y',\n      condition: '<='\n    }, function (_ref110) {\n      var y = _ref110.y;\n      loop({\n        start: -1,\n        end: int(1),\n        name: 'z',\n        condition: '<='\n      }, function (_ref111) {\n        var z = _ref111.z;\n        var dist = float(mx_worley_distance(localpos, x, y, z, X, Y, Z, jitter, metric)).toVar();\n        sqdist.assign(min(sqdist, dist));\n      });\n    });\n  });\n  If(metric.equal(int(0)), function () {\n    sqdist.assign(sqrt(sqdist));\n  });\n  return sqdist;\n});\nvar mx_worley_noise_float = overloadingFn([mx_worley_noise_float_0, mx_worley_noise_float_1]);\nvar mx_worley_noise_vec2_1 = tslFn(function (_ref112) {\n  var _ref113 = _slicedToArray(_ref112, 3),\n    p_immutable = _ref113[0],\n    jitter_immutable = _ref113[1],\n    metric_immutable = _ref113[2];\n  var metric = int(metric_immutable).toVar();\n  var jitter = float(jitter_immutable).toVar();\n  var p = vec3(p_immutable).toVar();\n  var X = int().toVar(),\n    Y = int().toVar(),\n    Z = int().toVar();\n  var localpos = vec3(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y), mx_floorfrac(p.z, Z)).toVar();\n  var sqdist = vec2(1e6, 1e6).toVar();\n  loop({\n    start: -1,\n    end: int(1),\n    name: 'x',\n    condition: '<='\n  }, function (_ref114) {\n    var x = _ref114.x;\n    loop({\n      start: -1,\n      end: int(1),\n      name: 'y',\n      condition: '<='\n    }, function (_ref115) {\n      var y = _ref115.y;\n      loop({\n        start: -1,\n        end: int(1),\n        name: 'z',\n        condition: '<='\n      }, function (_ref116) {\n        var z = _ref116.z;\n        var dist = float(mx_worley_distance(localpos, x, y, z, X, Y, Z, jitter, metric)).toVar();\n        If(dist.lessThan(sqdist.x), function () {\n          sqdist.y.assign(sqdist.x);\n          sqdist.x.assign(dist);\n        }).elseif(dist.lessThan(sqdist.y), function () {\n          sqdist.y.assign(dist);\n        });\n      });\n    });\n  });\n  If(metric.equal(int(0)), function () {\n    sqdist.assign(sqrt(sqdist));\n  });\n  return sqdist;\n});\nvar mx_worley_noise_vec2 = overloadingFn([mx_worley_noise_vec2_0, mx_worley_noise_vec2_1]);\nvar mx_worley_noise_vec3_1 = tslFn(function (_ref117) {\n  var _ref118 = _slicedToArray(_ref117, 3),\n    p_immutable = _ref118[0],\n    jitter_immutable = _ref118[1],\n    metric_immutable = _ref118[2];\n  var metric = int(metric_immutable).toVar();\n  var jitter = float(jitter_immutable).toVar();\n  var p = vec3(p_immutable).toVar();\n  var X = int().toVar(),\n    Y = int().toVar(),\n    Z = int().toVar();\n  var localpos = vec3(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y), mx_floorfrac(p.z, Z)).toVar();\n  var sqdist = vec3(1e6, 1e6, 1e6).toVar();\n  loop({\n    start: -1,\n    end: int(1),\n    name: 'x',\n    condition: '<='\n  }, function (_ref119) {\n    var x = _ref119.x;\n    loop({\n      start: -1,\n      end: int(1),\n      name: 'y',\n      condition: '<='\n    }, function (_ref120) {\n      var y = _ref120.y;\n      loop({\n        start: -1,\n        end: int(1),\n        name: 'z',\n        condition: '<='\n      }, function (_ref121) {\n        var z = _ref121.z;\n        var dist = float(mx_worley_distance(localpos, x, y, z, X, Y, Z, jitter, metric)).toVar();\n        If(dist.lessThan(sqdist.x), function () {\n          sqdist.z.assign(sqdist.y);\n          sqdist.y.assign(sqdist.x);\n          sqdist.x.assign(dist);\n        }).elseif(dist.lessThan(sqdist.y), function () {\n          sqdist.z.assign(sqdist.y);\n          sqdist.y.assign(dist);\n        }).elseif(dist.lessThan(sqdist.z), function () {\n          sqdist.z.assign(dist);\n        });\n      });\n    });\n  });\n  If(metric.equal(int(0)), function () {\n    sqdist.assign(sqrt(sqdist));\n  });\n  return sqdist;\n});\nvar mx_worley_noise_vec3 = overloadingFn([mx_worley_noise_vec3_0, mx_worley_noise_vec3_1]);\n\n// layouts\n\nmx_select.setLayout({\n  name: 'mx_select',\n  type: 'float',\n  inputs: [{\n    name: 'b',\n    type: 'bool'\n  }, {\n    name: 't',\n    type: 'float'\n  }, {\n    name: 'f',\n    type: 'float'\n  }]\n});\nmx_negate_if.setLayout({\n  name: 'mx_negate_if',\n  type: 'float',\n  inputs: [{\n    name: 'val',\n    type: 'float'\n  }, {\n    name: 'b',\n    type: 'bool'\n  }]\n});\nmx_floor.setLayout({\n  name: 'mx_floor',\n  type: 'int',\n  inputs: [{\n    name: 'x',\n    type: 'float'\n  }]\n});\nmx_bilerp_0.setLayout({\n  name: 'mx_bilerp_0',\n  type: 'float',\n  inputs: [{\n    name: 'v0',\n    type: 'float'\n  }, {\n    name: 'v1',\n    type: 'float'\n  }, {\n    name: 'v2',\n    type: 'float'\n  }, {\n    name: 'v3',\n    type: 'float'\n  }, {\n    name: 's',\n    type: 'float'\n  }, {\n    name: 't',\n    type: 'float'\n  }]\n});\nmx_bilerp_1.setLayout({\n  name: 'mx_bilerp_1',\n  type: 'vec3',\n  inputs: [{\n    name: 'v0',\n    type: 'vec3'\n  }, {\n    name: 'v1',\n    type: 'vec3'\n  }, {\n    name: 'v2',\n    type: 'vec3'\n  }, {\n    name: 'v3',\n    type: 'vec3'\n  }, {\n    name: 's',\n    type: 'float'\n  }, {\n    name: 't',\n    type: 'float'\n  }]\n});\nmx_trilerp_0.setLayout({\n  name: 'mx_trilerp_0',\n  type: 'float',\n  inputs: [{\n    name: 'v0',\n    type: 'float'\n  }, {\n    name: 'v1',\n    type: 'float'\n  }, {\n    name: 'v2',\n    type: 'float'\n  }, {\n    name: 'v3',\n    type: 'float'\n  }, {\n    name: 'v4',\n    type: 'float'\n  }, {\n    name: 'v5',\n    type: 'float'\n  }, {\n    name: 'v6',\n    type: 'float'\n  }, {\n    name: 'v7',\n    type: 'float'\n  }, {\n    name: 's',\n    type: 'float'\n  }, {\n    name: 't',\n    type: 'float'\n  }, {\n    name: 'r',\n    type: 'float'\n  }]\n});\nmx_trilerp_1.setLayout({\n  name: 'mx_trilerp_1',\n  type: 'vec3',\n  inputs: [{\n    name: 'v0',\n    type: 'vec3'\n  }, {\n    name: 'v1',\n    type: 'vec3'\n  }, {\n    name: 'v2',\n    type: 'vec3'\n  }, {\n    name: 'v3',\n    type: 'vec3'\n  }, {\n    name: 'v4',\n    type: 'vec3'\n  }, {\n    name: 'v5',\n    type: 'vec3'\n  }, {\n    name: 'v6',\n    type: 'vec3'\n  }, {\n    name: 'v7',\n    type: 'vec3'\n  }, {\n    name: 's',\n    type: 'float'\n  }, {\n    name: 't',\n    type: 'float'\n  }, {\n    name: 'r',\n    type: 'float'\n  }]\n});\nmx_gradient_float_0.setLayout({\n  name: 'mx_gradient_float_0',\n  type: 'float',\n  inputs: [{\n    name: 'hash',\n    type: 'uint'\n  }, {\n    name: 'x',\n    type: 'float'\n  }, {\n    name: 'y',\n    type: 'float'\n  }]\n});\nmx_gradient_float_1.setLayout({\n  name: 'mx_gradient_float_1',\n  type: 'float',\n  inputs: [{\n    name: 'hash',\n    type: 'uint'\n  }, {\n    name: 'x',\n    type: 'float'\n  }, {\n    name: 'y',\n    type: 'float'\n  }, {\n    name: 'z',\n    type: 'float'\n  }]\n});\nmx_gradient_vec3_0.setLayout({\n  name: 'mx_gradient_vec3_0',\n  type: 'vec3',\n  inputs: [{\n    name: 'hash',\n    type: 'uvec3'\n  }, {\n    name: 'x',\n    type: 'float'\n  }, {\n    name: 'y',\n    type: 'float'\n  }]\n});\nmx_gradient_vec3_1.setLayout({\n  name: 'mx_gradient_vec3_1',\n  type: 'vec3',\n  inputs: [{\n    name: 'hash',\n    type: 'uvec3'\n  }, {\n    name: 'x',\n    type: 'float'\n  }, {\n    name: 'y',\n    type: 'float'\n  }, {\n    name: 'z',\n    type: 'float'\n  }]\n});\nmx_gradient_scale2d_0.setLayout({\n  name: 'mx_gradient_scale2d_0',\n  type: 'float',\n  inputs: [{\n    name: 'v',\n    type: 'float'\n  }]\n});\nmx_gradient_scale3d_0.setLayout({\n  name: 'mx_gradient_scale3d_0',\n  type: 'float',\n  inputs: [{\n    name: 'v',\n    type: 'float'\n  }]\n});\nmx_gradient_scale2d_1.setLayout({\n  name: 'mx_gradient_scale2d_1',\n  type: 'vec3',\n  inputs: [{\n    name: 'v',\n    type: 'vec3'\n  }]\n});\nmx_gradient_scale3d_1.setLayout({\n  name: 'mx_gradient_scale3d_1',\n  type: 'vec3',\n  inputs: [{\n    name: 'v',\n    type: 'vec3'\n  }]\n});\nmx_rotl32.setLayout({\n  name: 'mx_rotl32',\n  type: 'uint',\n  inputs: [{\n    name: 'x',\n    type: 'uint'\n  }, {\n    name: 'k',\n    type: 'int'\n  }]\n});\nmx_bjfinal.setLayout({\n  name: 'mx_bjfinal',\n  type: 'uint',\n  inputs: [{\n    name: 'a',\n    type: 'uint'\n  }, {\n    name: 'b',\n    type: 'uint'\n  }, {\n    name: 'c',\n    type: 'uint'\n  }]\n});\nmx_bits_to_01.setLayout({\n  name: 'mx_bits_to_01',\n  type: 'float',\n  inputs: [{\n    name: 'bits',\n    type: 'uint'\n  }]\n});\nmx_fade.setLayout({\n  name: 'mx_fade',\n  type: 'float',\n  inputs: [{\n    name: 't',\n    type: 'float'\n  }]\n});\nmx_hash_int_0.setLayout({\n  name: 'mx_hash_int_0',\n  type: 'uint',\n  inputs: [{\n    name: 'x',\n    type: 'int'\n  }]\n});\nmx_hash_int_1.setLayout({\n  name: 'mx_hash_int_1',\n  type: 'uint',\n  inputs: [{\n    name: 'x',\n    type: 'int'\n  }, {\n    name: 'y',\n    type: 'int'\n  }]\n});\nmx_hash_int_2.setLayout({\n  name: 'mx_hash_int_2',\n  type: 'uint',\n  inputs: [{\n    name: 'x',\n    type: 'int'\n  }, {\n    name: 'y',\n    type: 'int'\n  }, {\n    name: 'z',\n    type: 'int'\n  }]\n});\nmx_hash_int_3.setLayout({\n  name: 'mx_hash_int_3',\n  type: 'uint',\n  inputs: [{\n    name: 'x',\n    type: 'int'\n  }, {\n    name: 'y',\n    type: 'int'\n  }, {\n    name: 'z',\n    type: 'int'\n  }, {\n    name: 'xx',\n    type: 'int'\n  }]\n});\nmx_hash_int_4.setLayout({\n  name: 'mx_hash_int_4',\n  type: 'uint',\n  inputs: [{\n    name: 'x',\n    type: 'int'\n  }, {\n    name: 'y',\n    type: 'int'\n  }, {\n    name: 'z',\n    type: 'int'\n  }, {\n    name: 'xx',\n    type: 'int'\n  }, {\n    name: 'yy',\n    type: 'int'\n  }]\n});\nmx_hash_vec3_0.setLayout({\n  name: 'mx_hash_vec3_0',\n  type: 'uvec3',\n  inputs: [{\n    name: 'x',\n    type: 'int'\n  }, {\n    name: 'y',\n    type: 'int'\n  }]\n});\nmx_hash_vec3_1.setLayout({\n  name: 'mx_hash_vec3_1',\n  type: 'uvec3',\n  inputs: [{\n    name: 'x',\n    type: 'int'\n  }, {\n    name: 'y',\n    type: 'int'\n  }, {\n    name: 'z',\n    type: 'int'\n  }]\n});\nmx_perlin_noise_float_0.setLayout({\n  name: 'mx_perlin_noise_float_0',\n  type: 'float',\n  inputs: [{\n    name: 'p',\n    type: 'vec2'\n  }]\n});\nmx_perlin_noise_float_1.setLayout({\n  name: 'mx_perlin_noise_float_1',\n  type: 'float',\n  inputs: [{\n    name: 'p',\n    type: 'vec3'\n  }]\n});\nmx_perlin_noise_vec3_0.setLayout({\n  name: 'mx_perlin_noise_vec3_0',\n  type: 'vec3',\n  inputs: [{\n    name: 'p',\n    type: 'vec2'\n  }]\n});\nmx_perlin_noise_vec3_1.setLayout({\n  name: 'mx_perlin_noise_vec3_1',\n  type: 'vec3',\n  inputs: [{\n    name: 'p',\n    type: 'vec3'\n  }]\n});\nmx_cell_noise_float_0.setLayout({\n  name: 'mx_cell_noise_float_0',\n  type: 'float',\n  inputs: [{\n    name: 'p',\n    type: 'float'\n  }]\n});\nmx_cell_noise_float_1.setLayout({\n  name: 'mx_cell_noise_float_1',\n  type: 'float',\n  inputs: [{\n    name: 'p',\n    type: 'vec2'\n  }]\n});\nmx_cell_noise_float_2.setLayout({\n  name: 'mx_cell_noise_float_2',\n  type: 'float',\n  inputs: [{\n    name: 'p',\n    type: 'vec3'\n  }]\n});\nmx_cell_noise_float_3.setLayout({\n  name: 'mx_cell_noise_float_3',\n  type: 'float',\n  inputs: [{\n    name: 'p',\n    type: 'vec4'\n  }]\n});\nmx_cell_noise_vec3_0.setLayout({\n  name: 'mx_cell_noise_vec3_0',\n  type: 'vec3',\n  inputs: [{\n    name: 'p',\n    type: 'float'\n  }]\n});\nmx_cell_noise_vec3_1.setLayout({\n  name: 'mx_cell_noise_vec3_1',\n  type: 'vec3',\n  inputs: [{\n    name: 'p',\n    type: 'vec2'\n  }]\n});\nmx_cell_noise_vec3_2.setLayout({\n  name: 'mx_cell_noise_vec3_2',\n  type: 'vec3',\n  inputs: [{\n    name: 'p',\n    type: 'vec3'\n  }]\n});\nmx_cell_noise_vec3_3.setLayout({\n  name: 'mx_cell_noise_vec3_3',\n  type: 'vec3',\n  inputs: [{\n    name: 'p',\n    type: 'vec4'\n  }]\n});\nmx_fractal_noise_float.setLayout({\n  name: 'mx_fractal_noise_float',\n  type: 'float',\n  inputs: [{\n    name: 'p',\n    type: 'vec3'\n  }, {\n    name: 'octaves',\n    type: 'int'\n  }, {\n    name: 'lacunarity',\n    type: 'float'\n  }, {\n    name: 'diminish',\n    type: 'float'\n  }]\n});\nmx_fractal_noise_vec3.setLayout({\n  name: 'mx_fractal_noise_vec3',\n  type: 'vec3',\n  inputs: [{\n    name: 'p',\n    type: 'vec3'\n  }, {\n    name: 'octaves',\n    type: 'int'\n  }, {\n    name: 'lacunarity',\n    type: 'float'\n  }, {\n    name: 'diminish',\n    type: 'float'\n  }]\n});\nmx_fractal_noise_vec2.setLayout({\n  name: 'mx_fractal_noise_vec2',\n  type: 'vec2',\n  inputs: [{\n    name: 'p',\n    type: 'vec3'\n  }, {\n    name: 'octaves',\n    type: 'int'\n  }, {\n    name: 'lacunarity',\n    type: 'float'\n  }, {\n    name: 'diminish',\n    type: 'float'\n  }]\n});\nmx_fractal_noise_vec4.setLayout({\n  name: 'mx_fractal_noise_vec4',\n  type: 'vec4',\n  inputs: [{\n    name: 'p',\n    type: 'vec3'\n  }, {\n    name: 'octaves',\n    type: 'int'\n  }, {\n    name: 'lacunarity',\n    type: 'float'\n  }, {\n    name: 'diminish',\n    type: 'float'\n  }]\n});\nmx_worley_distance_0.setLayout({\n  name: 'mx_worley_distance_0',\n  type: 'float',\n  inputs: [{\n    name: 'p',\n    type: 'vec2'\n  }, {\n    name: 'x',\n    type: 'int'\n  }, {\n    name: 'y',\n    type: 'int'\n  }, {\n    name: 'xoff',\n    type: 'int'\n  }, {\n    name: 'yoff',\n    type: 'int'\n  }, {\n    name: 'jitter',\n    type: 'float'\n  }, {\n    name: 'metric',\n    type: 'int'\n  }]\n});\nmx_worley_distance_1.setLayout({\n  name: 'mx_worley_distance_1',\n  type: 'float',\n  inputs: [{\n    name: 'p',\n    type: 'vec3'\n  }, {\n    name: 'x',\n    type: 'int'\n  }, {\n    name: 'y',\n    type: 'int'\n  }, {\n    name: 'z',\n    type: 'int'\n  }, {\n    name: 'xoff',\n    type: 'int'\n  }, {\n    name: 'yoff',\n    type: 'int'\n  }, {\n    name: 'zoff',\n    type: 'int'\n  }, {\n    name: 'jitter',\n    type: 'float'\n  }, {\n    name: 'metric',\n    type: 'int'\n  }]\n});\nmx_worley_noise_float_0.setLayout({\n  name: 'mx_worley_noise_float_0',\n  type: 'float',\n  inputs: [{\n    name: 'p',\n    type: 'vec2'\n  }, {\n    name: 'jitter',\n    type: 'float'\n  }, {\n    name: 'metric',\n    type: 'int'\n  }]\n});\nmx_worley_noise_vec2_0.setLayout({\n  name: 'mx_worley_noise_vec2_0',\n  type: 'vec2',\n  inputs: [{\n    name: 'p',\n    type: 'vec2'\n  }, {\n    name: 'jitter',\n    type: 'float'\n  }, {\n    name: 'metric',\n    type: 'int'\n  }]\n});\nmx_worley_noise_vec3_0.setLayout({\n  name: 'mx_worley_noise_vec3_0',\n  type: 'vec3',\n  inputs: [{\n    name: 'p',\n    type: 'vec2'\n  }, {\n    name: 'jitter',\n    type: 'float'\n  }, {\n    name: 'metric',\n    type: 'int'\n  }]\n});\nmx_worley_noise_float_1.setLayout({\n  name: 'mx_worley_noise_float_1',\n  type: 'float',\n  inputs: [{\n    name: 'p',\n    type: 'vec3'\n  }, {\n    name: 'jitter',\n    type: 'float'\n  }, {\n    name: 'metric',\n    type: 'int'\n  }]\n});\nmx_worley_noise_vec2_1.setLayout({\n  name: 'mx_worley_noise_vec2_1',\n  type: 'vec2',\n  inputs: [{\n    name: 'p',\n    type: 'vec3'\n  }, {\n    name: 'jitter',\n    type: 'float'\n  }, {\n    name: 'metric',\n    type: 'int'\n  }]\n});\nmx_worley_noise_vec3_1.setLayout({\n  name: 'mx_worley_noise_vec3_1',\n  type: 'vec3',\n  inputs: [{\n    name: 'p',\n    type: 'vec3'\n  }, {\n    name: 'jitter',\n    type: 'float'\n  }, {\n    name: 'metric',\n    type: 'int'\n  }]\n});\nexport { mx_select, mx_negate_if, mx_floor, mx_floorfrac, mx_bilerp, mx_trilerp, mx_gradient_float, mx_gradient_vec3, mx_gradient_scale2d, mx_gradient_scale3d, mx_rotl32, mx_bjmix, mx_bjfinal, mx_bits_to_01, mx_fade, mx_hash_int, mx_hash_vec3, mx_perlin_noise_float, mx_perlin_noise_vec3, mx_cell_noise_float, mx_cell_noise_vec3, mx_fractal_noise_float, mx_fractal_noise_vec3, mx_fractal_noise_vec2, mx_fractal_noise_vec4, mx_worley_distance, mx_worley_noise_float, mx_worley_noise_vec2, mx_worley_noise_vec3 };","map":{"version":3,"names":["int","uint","float","vec3","bool","uvec3","vec2","vec4","If","tslFn","cond","sub","mul","floor","abs","max","dot","min","sqrt","overloadingFn","loop","mx_select","_ref","_ref2","_slicedToArray","b_immutable","t_immutable","f_immutable","f","toVar","t","b","mx_negate_if","_ref3","_ref4","val_immutable","val","negate","mx_floor","_ref5","_ref6","x_immutable","x","mx_floorfrac","_ref7","_ref8","i","assign","mx_bilerp_0","_ref9","_ref10","v0_immutable","v1_immutable","v2_immutable","v3_immutable","s_immutable","s","v3","v2","v1","v0","s1","add","mx_bilerp_1","_ref11","_ref12","mx_bilerp","mx_trilerp_0","_ref13","_ref14","v4_immutable","v5_immutable","v6_immutable","v7_immutable","r_immutable","r","v7","v6","v5","v4","t1","r1","mx_trilerp_1","_ref15","_ref16","mx_trilerp","mx_gradient_float_0","_ref17","_ref18","hash_immutable","y_immutable","y","hash","h","bitAnd","u","lessThan","v","mx_gradient_float_1","_ref19","_ref20","z_immutable","z","equal","or","mx_gradient_float","mx_gradient_vec3_0","_ref21","_ref22","mx_gradient_vec3_1","_ref23","_ref24","mx_gradient_vec3","mx_gradient_scale2d_0","_ref25","_ref26","v_immutable","mx_gradient_scale3d_0","_ref27","_ref28","mx_gradient_scale2d_1","_ref29","_ref30","mx_gradient_scale2d","mx_gradient_scale3d_1","_ref31","_ref32","mx_gradient_scale3d","mx_rotl32","_ref33","_ref34","k_immutable","k","shiftLeft","bitOr","shiftRight","mx_bjmix","_ref35","_ref36","a","c","subAssign","bitXorAssign","addAssign","mx_bjfinal","_ref37","_ref38","a_immutable","c_immutable","mx_bits_to_01","_ref39","_ref40","bits_immutable","bits","div","mx_fade","_ref41","_ref42","mx_hash_int_0","_ref43","_ref44","len","seed","mx_hash_int_1","_ref45","_ref46","mx_hash_int_2","_ref47","_ref48","mx_hash_int_3","_ref49","_ref50","xx_immutable","xx","mx_hash_int_4","_ref51","_ref52","yy_immutable","yy","mx_hash_int","mx_hash_vec3_0","_ref53","_ref54","result","mx_hash_vec3_1","_ref55","_ref56","mx_hash_vec3","mx_perlin_noise_float_0","_ref57","_ref58","p_immutable","p","X","Y","fx","fy","mx_perlin_noise_float_1","_ref59","_ref60","Z","fz","w","mx_perlin_noise_float","mx_perlin_noise_vec3_0","_ref61","_ref62","mx_perlin_noise_vec3_1","_ref63","_ref64","mx_perlin_noise_vec3","mx_cell_noise_float_0","_ref65","_ref66","ix","mx_cell_noise_float_1","_ref67","_ref68","iy","mx_cell_noise_float_2","_ref69","_ref70","iz","mx_cell_noise_float_3","_ref71","_ref72","iw","mx_cell_noise_float","mx_cell_noise_vec3_0","_ref73","_ref74","mx_cell_noise_vec3_1","_ref75","_ref76","mx_cell_noise_vec3_2","_ref77","_ref78","mx_cell_noise_vec3_3","_ref79","_ref80","mx_cell_noise_vec3","mx_fractal_noise_float","_ref81","_ref82","octaves_immutable","lacunarity_immutable","diminish_immutable","diminish","lacunarity","octaves","amplitude","start","end","_ref83","mulAssign","mx_fractal_noise_vec3","_ref84","_ref85","_ref86","mx_fractal_noise_vec2","_ref87","_ref88","mx_fractal_noise_vec4","_ref89","_ref90","mx_worley_distance_0","_ref91","_ref92","xoff_immutable","yoff_immutable","jitter_immutable","metric_immutable","metric","jitter","yoff","xoff","tmp","off","cellpos","diff","mx_worley_distance_1","_ref93","_ref94","zoff_immutable","zoff","mx_worley_distance","mx_worley_noise_float_0","_ref95","_ref96","localpos","sqdist","name","condition","_ref97","_ref98","dist","mx_worley_noise_vec2_0","_ref99","_ref100","_ref101","_ref102","elseif","mx_worley_noise_vec3_0","_ref103","_ref104","_ref105","_ref106","mx_worley_noise_float_1","_ref107","_ref108","_ref109","_ref110","_ref111","mx_worley_noise_float","mx_worley_noise_vec2_1","_ref112","_ref113","_ref114","_ref115","_ref116","mx_worley_noise_vec2","mx_worley_noise_vec3_1","_ref117","_ref118","_ref119","_ref120","_ref121","mx_worley_noise_vec3","setLayout","type","inputs"],"sources":["/Users/vedant/node_modules/three/examples/jsm/nodes/materialx/lib/mx_noise.js"],"sourcesContent":["// Three.js Transpiler\n// https://raw.githubusercontent.com/AcademySoftwareFoundation/MaterialX/main/libraries/stdlib/genglsl/lib/mx_noise.glsl\n\nimport { int, uint, float, vec3, bool, uvec3, vec2, vec4, If, tslFn } from '../../shadernode/ShaderNode.js';\nimport { cond } from '../../math/CondNode.js';\nimport { sub, mul } from '../../math/OperatorNode.js';\nimport { floor, abs, max, dot, min, sqrt } from '../../math/MathNode.js';\nimport { overloadingFn } from '../../utils/FunctionOverloadingNode.js';\nimport { loop } from '../../utils/LoopNode.js';\n\nconst mx_select = tslFn( ( [ b_immutable, t_immutable, f_immutable ] ) => {\n\n\tconst f = float( f_immutable ).toVar();\n\tconst t = float( t_immutable ).toVar();\n\tconst b = bool( b_immutable ).toVar();\n\n\treturn cond( b, t, f );\n\n} );\n\nconst mx_negate_if = tslFn( ( [ val_immutable, b_immutable ] ) => {\n\n\tconst b = bool( b_immutable ).toVar();\n\tconst val = float( val_immutable ).toVar();\n\n\treturn cond( b, val.negate(), val );\n\n} );\n\nconst mx_floor = tslFn( ( [ x_immutable ] ) => {\n\n\tconst x = float( x_immutable ).toVar();\n\n\treturn int( floor( x ) );\n\n} );\n\nconst mx_floorfrac = tslFn( ( [ x_immutable, i ] ) => {\n\n\tconst x = float( x_immutable ).toVar();\n\ti.assign( mx_floor( x ) );\n\n\treturn x.sub( float( i ) );\n\n} );\n\nconst mx_bilerp_0 = tslFn( ( [ v0_immutable, v1_immutable, v2_immutable, v3_immutable, s_immutable, t_immutable ] ) => {\n\n\tconst t = float( t_immutable ).toVar();\n\tconst s = float( s_immutable ).toVar();\n\tconst v3 = float( v3_immutable ).toVar();\n\tconst v2 = float( v2_immutable ).toVar();\n\tconst v1 = float( v1_immutable ).toVar();\n\tconst v0 = float( v0_immutable ).toVar();\n\tconst s1 = float( sub( 1.0, s ) ).toVar();\n\n\treturn sub( 1.0, t ).mul( v0.mul( s1 ).add( v1.mul( s ) ) ).add( t.mul( v2.mul( s1 ).add( v3.mul( s ) ) ) );\n\n} );\n\nconst mx_bilerp_1 = tslFn( ( [ v0_immutable, v1_immutable, v2_immutable, v3_immutable, s_immutable, t_immutable ] ) => {\n\n\tconst t = float( t_immutable ).toVar();\n\tconst s = float( s_immutable ).toVar();\n\tconst v3 = vec3( v3_immutable ).toVar();\n\tconst v2 = vec3( v2_immutable ).toVar();\n\tconst v1 = vec3( v1_immutable ).toVar();\n\tconst v0 = vec3( v0_immutable ).toVar();\n\tconst s1 = float( sub( 1.0, s ) ).toVar();\n\n\treturn sub( 1.0, t ).mul( v0.mul( s1 ).add( v1.mul( s ) ) ).add( t.mul( v2.mul( s1 ).add( v3.mul( s ) ) ) );\n\n} );\n\nconst mx_bilerp = overloadingFn( [ mx_bilerp_0, mx_bilerp_1 ] );\n\nconst mx_trilerp_0 = tslFn( ( [ v0_immutable, v1_immutable, v2_immutable, v3_immutable, v4_immutable, v5_immutable, v6_immutable, v7_immutable, s_immutable, t_immutable, r_immutable ] ) => {\n\n\tconst r = float( r_immutable ).toVar();\n\tconst t = float( t_immutable ).toVar();\n\tconst s = float( s_immutable ).toVar();\n\tconst v7 = float( v7_immutable ).toVar();\n\tconst v6 = float( v6_immutable ).toVar();\n\tconst v5 = float( v5_immutable ).toVar();\n\tconst v4 = float( v4_immutable ).toVar();\n\tconst v3 = float( v3_immutable ).toVar();\n\tconst v2 = float( v2_immutable ).toVar();\n\tconst v1 = float( v1_immutable ).toVar();\n\tconst v0 = float( v0_immutable ).toVar();\n\tconst s1 = float( sub( 1.0, s ) ).toVar();\n\tconst t1 = float( sub( 1.0, t ) ).toVar();\n\tconst r1 = float( sub( 1.0, r ) ).toVar();\n\n\treturn r1.mul( t1.mul( v0.mul( s1 ).add( v1.mul( s ) ) ).add( t.mul( v2.mul( s1 ).add( v3.mul( s ) ) ) ) ).add( r.mul( t1.mul( v4.mul( s1 ).add( v5.mul( s ) ) ).add( t.mul( v6.mul( s1 ).add( v7.mul( s ) ) ) ) ) );\n\n} );\n\nconst mx_trilerp_1 = tslFn( ( [ v0_immutable, v1_immutable, v2_immutable, v3_immutable, v4_immutable, v5_immutable, v6_immutable, v7_immutable, s_immutable, t_immutable, r_immutable ] ) => {\n\n\tconst r = float( r_immutable ).toVar();\n\tconst t = float( t_immutable ).toVar();\n\tconst s = float( s_immutable ).toVar();\n\tconst v7 = vec3( v7_immutable ).toVar();\n\tconst v6 = vec3( v6_immutable ).toVar();\n\tconst v5 = vec3( v5_immutable ).toVar();\n\tconst v4 = vec3( v4_immutable ).toVar();\n\tconst v3 = vec3( v3_immutable ).toVar();\n\tconst v2 = vec3( v2_immutable ).toVar();\n\tconst v1 = vec3( v1_immutable ).toVar();\n\tconst v0 = vec3( v0_immutable ).toVar();\n\tconst s1 = float( sub( 1.0, s ) ).toVar();\n\tconst t1 = float( sub( 1.0, t ) ).toVar();\n\tconst r1 = float( sub( 1.0, r ) ).toVar();\n\n\treturn r1.mul( t1.mul( v0.mul( s1 ).add( v1.mul( s ) ) ).add( t.mul( v2.mul( s1 ).add( v3.mul( s ) ) ) ) ).add( r.mul( t1.mul( v4.mul( s1 ).add( v5.mul( s ) ) ).add( t.mul( v6.mul( s1 ).add( v7.mul( s ) ) ) ) ) );\n\n} );\n\nconst mx_trilerp = overloadingFn( [ mx_trilerp_0, mx_trilerp_1 ] );\n\nconst mx_gradient_float_0 = tslFn( ( [ hash_immutable, x_immutable, y_immutable ] ) => {\n\n\tconst y = float( y_immutable ).toVar();\n\tconst x = float( x_immutable ).toVar();\n\tconst hash = uint( hash_immutable ).toVar();\n\tconst h = uint( hash.bitAnd( uint( 7 ) ) ).toVar();\n\tconst u = float( mx_select( h.lessThan( uint( 4 ) ), x, y ) ).toVar();\n\tconst v = float( mul( 2.0, mx_select( h.lessThan( uint( 4 ) ), y, x ) ) ).toVar();\n\n\treturn mx_negate_if( u, bool( h.bitAnd( uint( 1 ) ) ) ).add( mx_negate_if( v, bool( h.bitAnd( uint( 2 ) ) ) ) );\n\n} );\n\nconst mx_gradient_float_1 = tslFn( ( [ hash_immutable, x_immutable, y_immutable, z_immutable ] ) => {\n\n\tconst z = float( z_immutable ).toVar();\n\tconst y = float( y_immutable ).toVar();\n\tconst x = float( x_immutable ).toVar();\n\tconst hash = uint( hash_immutable ).toVar();\n\tconst h = uint( hash.bitAnd( uint( 15 ) ) ).toVar();\n\tconst u = float( mx_select( h.lessThan( uint( 8 ) ), x, y ) ).toVar();\n\tconst v = float( mx_select( h.lessThan( uint( 4 ) ), y, mx_select( h.equal( uint( 12 ) ).or( h.equal( uint( 14 ) ) ), x, z ) ) ).toVar();\n\n\treturn mx_negate_if( u, bool( h.bitAnd( uint( 1 ) ) ) ).add( mx_negate_if( v, bool( h.bitAnd( uint( 2 ) ) ) ) );\n\n} );\n\nconst mx_gradient_float = overloadingFn( [ mx_gradient_float_0, mx_gradient_float_1 ] );\n\nconst mx_gradient_vec3_0 = tslFn( ( [ hash_immutable, x_immutable, y_immutable ] ) => {\n\n\tconst y = float( y_immutable ).toVar();\n\tconst x = float( x_immutable ).toVar();\n\tconst hash = uvec3( hash_immutable ).toVar();\n\n\treturn vec3( mx_gradient_float( hash.x, x, y ), mx_gradient_float( hash.y, x, y ), mx_gradient_float( hash.z, x, y ) );\n\n} );\n\nconst mx_gradient_vec3_1 = tslFn( ( [ hash_immutable, x_immutable, y_immutable, z_immutable ] ) => {\n\n\tconst z = float( z_immutable ).toVar();\n\tconst y = float( y_immutable ).toVar();\n\tconst x = float( x_immutable ).toVar();\n\tconst hash = uvec3( hash_immutable ).toVar();\n\n\treturn vec3( mx_gradient_float( hash.x, x, y, z ), mx_gradient_float( hash.y, x, y, z ), mx_gradient_float( hash.z, x, y, z ) );\n\n} );\n\nconst mx_gradient_vec3 = overloadingFn( [ mx_gradient_vec3_0, mx_gradient_vec3_1 ] );\n\nconst mx_gradient_scale2d_0 = tslFn( ( [ v_immutable ] ) => {\n\n\tconst v = float( v_immutable ).toVar();\n\n\treturn mul( 0.6616, v );\n\n} );\n\nconst mx_gradient_scale3d_0 = tslFn( ( [ v_immutable ] ) => {\n\n\tconst v = float( v_immutable ).toVar();\n\n\treturn mul( 0.9820, v );\n\n} );\n\nconst mx_gradient_scale2d_1 = tslFn( ( [ v_immutable ] ) => {\n\n\tconst v = vec3( v_immutable ).toVar();\n\n\treturn mul( 0.6616, v );\n\n} );\n\nconst mx_gradient_scale2d = overloadingFn( [ mx_gradient_scale2d_0, mx_gradient_scale2d_1 ] );\n\nconst mx_gradient_scale3d_1 = tslFn( ( [ v_immutable ] ) => {\n\n\tconst v = vec3( v_immutable ).toVar();\n\n\treturn mul( 0.9820, v );\n\n} );\n\nconst mx_gradient_scale3d = overloadingFn( [ mx_gradient_scale3d_0, mx_gradient_scale3d_1 ] );\n\nconst mx_rotl32 = tslFn( ( [ x_immutable, k_immutable ] ) => {\n\n\tconst k = int( k_immutable ).toVar();\n\tconst x = uint( x_immutable ).toVar();\n\n\treturn x.shiftLeft( k ).bitOr( x.shiftRight( int( 32 ).sub( k ) ) );\n\n} );\n\nconst mx_bjmix = tslFn( ( [ a, b, c ] ) => {\n\n\ta.subAssign( c );\n\ta.bitXorAssign( mx_rotl32( c, int( 4 ) ) );\n\tc.addAssign( b );\n\tb.subAssign( a );\n\tb.bitXorAssign( mx_rotl32( a, int( 6 ) ) );\n\ta.addAssign( c );\n\tc.subAssign( b );\n\tc.bitXorAssign( mx_rotl32( b, int( 8 ) ) );\n\tb.addAssign( a );\n\ta.subAssign( c );\n\ta.bitXorAssign( mx_rotl32( c, int( 16 ) ) );\n\tc.addAssign( b );\n\tb.subAssign( a );\n\tb.bitXorAssign( mx_rotl32( a, int( 19 ) ) );\n\ta.addAssign( c );\n\tc.subAssign( b );\n\tc.bitXorAssign( mx_rotl32( b, int( 4 ) ) );\n\tb.addAssign( a );\n\n} );\n\nconst mx_bjfinal = tslFn( ( [ a_immutable, b_immutable, c_immutable ] ) => {\n\n\tconst c = uint( c_immutable ).toVar();\n\tconst b = uint( b_immutable ).toVar();\n\tconst a = uint( a_immutable ).toVar();\n\tc.bitXorAssign( b );\n\tc.subAssign( mx_rotl32( b, int( 14 ) ) );\n\ta.bitXorAssign( c );\n\ta.subAssign( mx_rotl32( c, int( 11 ) ) );\n\tb.bitXorAssign( a );\n\tb.subAssign( mx_rotl32( a, int( 25 ) ) );\n\tc.bitXorAssign( b );\n\tc.subAssign( mx_rotl32( b, int( 16 ) ) );\n\ta.bitXorAssign( c );\n\ta.subAssign( mx_rotl32( c, int( 4 ) ) );\n\tb.bitXorAssign( a );\n\tb.subAssign( mx_rotl32( a, int( 14 ) ) );\n\tc.bitXorAssign( b );\n\tc.subAssign( mx_rotl32( b, int( 24 ) ) );\n\n\treturn c;\n\n} );\n\nconst mx_bits_to_01 = tslFn( ( [ bits_immutable ] ) => {\n\n\tconst bits = uint( bits_immutable ).toVar();\n\n\treturn float( bits ).div( float( uint( int( 0xffffffff ) ) ) );\n\n} );\n\nconst mx_fade = tslFn( ( [ t_immutable ] ) => {\n\n\tconst t = float( t_immutable ).toVar();\n\n\treturn t.mul( t.mul( t.mul( t.mul( t.mul( 6.0 ).sub( 15.0 ) ).add( 10.0 ) ) ) );\n\n} );\n\nconst mx_hash_int_0 = tslFn( ( [ x_immutable ] ) => {\n\n\tconst x = int( x_immutable ).toVar();\n\tconst len = uint( uint( 1 ) ).toVar();\n\tconst seed = uint( uint( int( 0xdeadbeef ) ).add( len.shiftLeft( uint( 2 ) ).add( uint( 13 ) ) ) ).toVar();\n\n\treturn mx_bjfinal( seed.add( uint( x ) ), seed, seed );\n\n} );\n\nconst mx_hash_int_1 = tslFn( ( [ x_immutable, y_immutable ] ) => {\n\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst len = uint( uint( 2 ) ).toVar();\n\tconst a = uint().toVar(), b = uint().toVar(), c = uint().toVar();\n\ta.assign( b.assign( c.assign( uint( int( 0xdeadbeef ) ).add( len.shiftLeft( uint( 2 ) ).add( uint( 13 ) ) ) ) ) );\n\ta.addAssign( uint( x ) );\n\tb.addAssign( uint( y ) );\n\n\treturn mx_bjfinal( a, b, c );\n\n} );\n\nconst mx_hash_int_2 = tslFn( ( [ x_immutable, y_immutable, z_immutable ] ) => {\n\n\tconst z = int( z_immutable ).toVar();\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst len = uint( uint( 3 ) ).toVar();\n\tconst a = uint().toVar(), b = uint().toVar(), c = uint().toVar();\n\ta.assign( b.assign( c.assign( uint( int( 0xdeadbeef ) ).add( len.shiftLeft( uint( 2 ) ).add( uint( 13 ) ) ) ) ) );\n\ta.addAssign( uint( x ) );\n\tb.addAssign( uint( y ) );\n\tc.addAssign( uint( z ) );\n\n\treturn mx_bjfinal( a, b, c );\n\n} );\n\nconst mx_hash_int_3 = tslFn( ( [ x_immutable, y_immutable, z_immutable, xx_immutable ] ) => {\n\n\tconst xx = int( xx_immutable ).toVar();\n\tconst z = int( z_immutable ).toVar();\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst len = uint( uint( 4 ) ).toVar();\n\tconst a = uint().toVar(), b = uint().toVar(), c = uint().toVar();\n\ta.assign( b.assign( c.assign( uint( int( 0xdeadbeef ) ).add( len.shiftLeft( uint( 2 ) ).add( uint( 13 ) ) ) ) ) );\n\ta.addAssign( uint( x ) );\n\tb.addAssign( uint( y ) );\n\tc.addAssign( uint( z ) );\n\tmx_bjmix( a, b, c );\n\ta.addAssign( uint( xx ) );\n\n\treturn mx_bjfinal( a, b, c );\n\n} );\n\nconst mx_hash_int_4 = tslFn( ( [ x_immutable, y_immutable, z_immutable, xx_immutable, yy_immutable ] ) => {\n\n\tconst yy = int( yy_immutable ).toVar();\n\tconst xx = int( xx_immutable ).toVar();\n\tconst z = int( z_immutable ).toVar();\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst len = uint( uint( 5 ) ).toVar();\n\tconst a = uint().toVar(), b = uint().toVar(), c = uint().toVar();\n\ta.assign( b.assign( c.assign( uint( int( 0xdeadbeef ) ).add( len.shiftLeft( uint( 2 ) ).add( uint( 13 ) ) ) ) ) );\n\ta.addAssign( uint( x ) );\n\tb.addAssign( uint( y ) );\n\tc.addAssign( uint( z ) );\n\tmx_bjmix( a, b, c );\n\ta.addAssign( uint( xx ) );\n\tb.addAssign( uint( yy ) );\n\n\treturn mx_bjfinal( a, b, c );\n\n} );\n\nconst mx_hash_int = overloadingFn( [ mx_hash_int_0, mx_hash_int_1, mx_hash_int_2, mx_hash_int_3, mx_hash_int_4 ] );\n\nconst mx_hash_vec3_0 = tslFn( ( [ x_immutable, y_immutable ] ) => {\n\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst h = uint( mx_hash_int( x, y ) ).toVar();\n\tconst result = uvec3().toVar();\n\tresult.x.assign( h.bitAnd( int( 0xFF ) ) );\n\tresult.y.assign( h.shiftRight( int( 8 ) ).bitAnd( int( 0xFF ) ) );\n\tresult.z.assign( h.shiftRight( int( 16 ) ).bitAnd( int( 0xFF ) ) );\n\n\treturn result;\n\n} );\n\nconst mx_hash_vec3_1 = tslFn( ( [ x_immutable, y_immutable, z_immutable ] ) => {\n\n\tconst z = int( z_immutable ).toVar();\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst h = uint( mx_hash_int( x, y, z ) ).toVar();\n\tconst result = uvec3().toVar();\n\tresult.x.assign( h.bitAnd( int( 0xFF ) ) );\n\tresult.y.assign( h.shiftRight( int( 8 ) ).bitAnd( int( 0xFF ) ) );\n\tresult.z.assign( h.shiftRight( int( 16 ) ).bitAnd( int( 0xFF ) ) );\n\n\treturn result;\n\n} );\n\nconst mx_hash_vec3 = overloadingFn( [ mx_hash_vec3_0, mx_hash_vec3_1 ] );\n\nconst mx_perlin_noise_float_0 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec2( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar();\n\tconst fx = float( mx_floorfrac( p.x, X ) ).toVar();\n\tconst fy = float( mx_floorfrac( p.y, Y ) ).toVar();\n\tconst u = float( mx_fade( fx ) ).toVar();\n\tconst v = float( mx_fade( fy ) ).toVar();\n\tconst result = float( mx_bilerp( mx_gradient_float( mx_hash_int( X, Y ), fx, fy ), mx_gradient_float( mx_hash_int( X.add( int( 1 ) ), Y ), fx.sub( 1.0 ), fy ), mx_gradient_float( mx_hash_int( X, Y.add( int( 1 ) ) ), fx, fy.sub( 1.0 ) ), mx_gradient_float( mx_hash_int( X.add( int( 1 ) ), Y.add( int( 1 ) ) ), fx.sub( 1.0 ), fy.sub( 1.0 ) ), u, v ) ).toVar();\n\n\treturn mx_gradient_scale2d( result );\n\n} );\n\nconst mx_perlin_noise_float_1 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec3( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar(), Z = int().toVar();\n\tconst fx = float( mx_floorfrac( p.x, X ) ).toVar();\n\tconst fy = float( mx_floorfrac( p.y, Y ) ).toVar();\n\tconst fz = float( mx_floorfrac( p.z, Z ) ).toVar();\n\tconst u = float( mx_fade( fx ) ).toVar();\n\tconst v = float( mx_fade( fy ) ).toVar();\n\tconst w = float( mx_fade( fz ) ).toVar();\n\tconst result = float( mx_trilerp( mx_gradient_float( mx_hash_int( X, Y, Z ), fx, fy, fz ), mx_gradient_float( mx_hash_int( X.add( int( 1 ) ), Y, Z ), fx.sub( 1.0 ), fy, fz ), mx_gradient_float( mx_hash_int( X, Y.add( int( 1 ) ), Z ), fx, fy.sub( 1.0 ), fz ), mx_gradient_float( mx_hash_int( X.add( int( 1 ) ), Y.add( int( 1 ) ), Z ), fx.sub( 1.0 ), fy.sub( 1.0 ), fz ), mx_gradient_float( mx_hash_int( X, Y, Z.add( int( 1 ) ) ), fx, fy, fz.sub( 1.0 ) ), mx_gradient_float( mx_hash_int( X.add( int( 1 ) ), Y, Z.add( int( 1 ) ) ), fx.sub( 1.0 ), fy, fz.sub( 1.0 ) ), mx_gradient_float( mx_hash_int( X, Y.add( int( 1 ) ), Z.add( int( 1 ) ) ), fx, fy.sub( 1.0 ), fz.sub( 1.0 ) ), mx_gradient_float( mx_hash_int( X.add( int( 1 ) ), Y.add( int( 1 ) ), Z.add( int( 1 ) ) ), fx.sub( 1.0 ), fy.sub( 1.0 ), fz.sub( 1.0 ) ), u, v, w ) ).toVar();\n\n\treturn mx_gradient_scale3d( result );\n\n} );\n\nconst mx_perlin_noise_float = overloadingFn( [ mx_perlin_noise_float_0, mx_perlin_noise_float_1 ] );\n\nconst mx_perlin_noise_vec3_0 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec2( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar();\n\tconst fx = float( mx_floorfrac( p.x, X ) ).toVar();\n\tconst fy = float( mx_floorfrac( p.y, Y ) ).toVar();\n\tconst u = float( mx_fade( fx ) ).toVar();\n\tconst v = float( mx_fade( fy ) ).toVar();\n\tconst result = vec3( mx_bilerp( mx_gradient_vec3( mx_hash_vec3( X, Y ), fx, fy ), mx_gradient_vec3( mx_hash_vec3( X.add( int( 1 ) ), Y ), fx.sub( 1.0 ), fy ), mx_gradient_vec3( mx_hash_vec3( X, Y.add( int( 1 ) ) ), fx, fy.sub( 1.0 ) ), mx_gradient_vec3( mx_hash_vec3( X.add( int( 1 ) ), Y.add( int( 1 ) ) ), fx.sub( 1.0 ), fy.sub( 1.0 ) ), u, v ) ).toVar();\n\n\treturn mx_gradient_scale2d( result );\n\n} );\n\nconst mx_perlin_noise_vec3_1 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec3( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar(), Z = int().toVar();\n\tconst fx = float( mx_floorfrac( p.x, X ) ).toVar();\n\tconst fy = float( mx_floorfrac( p.y, Y ) ).toVar();\n\tconst fz = float( mx_floorfrac( p.z, Z ) ).toVar();\n\tconst u = float( mx_fade( fx ) ).toVar();\n\tconst v = float( mx_fade( fy ) ).toVar();\n\tconst w = float( mx_fade( fz ) ).toVar();\n\tconst result = vec3( mx_trilerp( mx_gradient_vec3( mx_hash_vec3( X, Y, Z ), fx, fy, fz ), mx_gradient_vec3( mx_hash_vec3( X.add( int( 1 ) ), Y, Z ), fx.sub( 1.0 ), fy, fz ), mx_gradient_vec3( mx_hash_vec3( X, Y.add( int( 1 ) ), Z ), fx, fy.sub( 1.0 ), fz ), mx_gradient_vec3( mx_hash_vec3( X.add( int( 1 ) ), Y.add( int( 1 ) ), Z ), fx.sub( 1.0 ), fy.sub( 1.0 ), fz ), mx_gradient_vec3( mx_hash_vec3( X, Y, Z.add( int( 1 ) ) ), fx, fy, fz.sub( 1.0 ) ), mx_gradient_vec3( mx_hash_vec3( X.add( int( 1 ) ), Y, Z.add( int( 1 ) ) ), fx.sub( 1.0 ), fy, fz.sub( 1.0 ) ), mx_gradient_vec3( mx_hash_vec3( X, Y.add( int( 1 ) ), Z.add( int( 1 ) ) ), fx, fy.sub( 1.0 ), fz.sub( 1.0 ) ), mx_gradient_vec3( mx_hash_vec3( X.add( int( 1 ) ), Y.add( int( 1 ) ), Z.add( int( 1 ) ) ), fx.sub( 1.0 ), fy.sub( 1.0 ), fz.sub( 1.0 ) ), u, v, w ) ).toVar();\n\n\treturn mx_gradient_scale3d( result );\n\n} );\n\nconst mx_perlin_noise_vec3 = overloadingFn( [ mx_perlin_noise_vec3_0, mx_perlin_noise_vec3_1 ] );\n\nconst mx_cell_noise_float_0 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = float( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p ) ).toVar();\n\n\treturn mx_bits_to_01( mx_hash_int( ix ) );\n\n} );\n\nconst mx_cell_noise_float_1 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec2( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p.x ) ).toVar();\n\tconst iy = int( mx_floor( p.y ) ).toVar();\n\n\treturn mx_bits_to_01( mx_hash_int( ix, iy ) );\n\n} );\n\nconst mx_cell_noise_float_2 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec3( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p.x ) ).toVar();\n\tconst iy = int( mx_floor( p.y ) ).toVar();\n\tconst iz = int( mx_floor( p.z ) ).toVar();\n\n\treturn mx_bits_to_01( mx_hash_int( ix, iy, iz ) );\n\n} );\n\nconst mx_cell_noise_float_3 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec4( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p.x ) ).toVar();\n\tconst iy = int( mx_floor( p.y ) ).toVar();\n\tconst iz = int( mx_floor( p.z ) ).toVar();\n\tconst iw = int( mx_floor( p.w ) ).toVar();\n\n\treturn mx_bits_to_01( mx_hash_int( ix, iy, iz, iw ) );\n\n} );\n\nconst mx_cell_noise_float = overloadingFn( [ mx_cell_noise_float_0, mx_cell_noise_float_1, mx_cell_noise_float_2, mx_cell_noise_float_3 ] );\n\nconst mx_cell_noise_vec3_0 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = float( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p ) ).toVar();\n\n\treturn vec3( mx_bits_to_01( mx_hash_int( ix, int( 0 ) ) ), mx_bits_to_01( mx_hash_int( ix, int( 1 ) ) ), mx_bits_to_01( mx_hash_int( ix, int( 2 ) ) ) );\n\n} );\n\nconst mx_cell_noise_vec3_1 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec2( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p.x ) ).toVar();\n\tconst iy = int( mx_floor( p.y ) ).toVar();\n\n\treturn vec3( mx_bits_to_01( mx_hash_int( ix, iy, int( 0 ) ) ), mx_bits_to_01( mx_hash_int( ix, iy, int( 1 ) ) ), mx_bits_to_01( mx_hash_int( ix, iy, int( 2 ) ) ) );\n\n} );\n\nconst mx_cell_noise_vec3_2 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec3( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p.x ) ).toVar();\n\tconst iy = int( mx_floor( p.y ) ).toVar();\n\tconst iz = int( mx_floor( p.z ) ).toVar();\n\n\treturn vec3( mx_bits_to_01( mx_hash_int( ix, iy, iz, int( 0 ) ) ), mx_bits_to_01( mx_hash_int( ix, iy, iz, int( 1 ) ) ), mx_bits_to_01( mx_hash_int( ix, iy, iz, int( 2 ) ) ) );\n\n} );\n\nconst mx_cell_noise_vec3_3 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec4( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p.x ) ).toVar();\n\tconst iy = int( mx_floor( p.y ) ).toVar();\n\tconst iz = int( mx_floor( p.z ) ).toVar();\n\tconst iw = int( mx_floor( p.w ) ).toVar();\n\n\treturn vec3( mx_bits_to_01( mx_hash_int( ix, iy, iz, iw, int( 0 ) ) ), mx_bits_to_01( mx_hash_int( ix, iy, iz, iw, int( 1 ) ) ), mx_bits_to_01( mx_hash_int( ix, iy, iz, iw, int( 2 ) ) ) );\n\n} );\n\nconst mx_cell_noise_vec3 = overloadingFn( [ mx_cell_noise_vec3_0, mx_cell_noise_vec3_1, mx_cell_noise_vec3_2, mx_cell_noise_vec3_3 ] );\n\nconst mx_fractal_noise_float = tslFn( ( [ p_immutable, octaves_immutable, lacunarity_immutable, diminish_immutable ] ) => {\n\n\tconst diminish = float( diminish_immutable ).toVar();\n\tconst lacunarity = float( lacunarity_immutable ).toVar();\n\tconst octaves = int( octaves_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\tconst result = float( 0.0 ).toVar();\n\tconst amplitude = float( 1.0 ).toVar();\n\n\tloop( { start: int( 0 ), end: octaves }, ( { i } ) => {\n\n\t\tresult.addAssign( amplitude.mul( mx_perlin_noise_float( p ) ) );\n\t\tamplitude.mulAssign( diminish );\n\t\tp.mulAssign( lacunarity );\n\n\t} );\n\n\treturn result;\n\n} );\n\nconst mx_fractal_noise_vec3 = tslFn( ( [ p_immutable, octaves_immutable, lacunarity_immutable, diminish_immutable ] ) => {\n\n\tconst diminish = float( diminish_immutable ).toVar();\n\tconst lacunarity = float( lacunarity_immutable ).toVar();\n\tconst octaves = int( octaves_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\tconst result = vec3( 0.0 ).toVar();\n\tconst amplitude = float( 1.0 ).toVar();\n\n\tloop( { start: int( 0 ), end: octaves }, ( { i } ) => {\n\n\t\tresult.addAssign( amplitude.mul( mx_perlin_noise_vec3( p ) ) );\n\t\tamplitude.mulAssign( diminish );\n\t\tp.mulAssign( lacunarity );\n\n\t} );\n\n\treturn result;\n\n} );\n\nconst mx_fractal_noise_vec2 = tslFn( ( [ p_immutable, octaves_immutable, lacunarity_immutable, diminish_immutable ] ) => {\n\n\tconst diminish = float( diminish_immutable ).toVar();\n\tconst lacunarity = float( lacunarity_immutable ).toVar();\n\tconst octaves = int( octaves_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\n\treturn vec2( mx_fractal_noise_float( p, octaves, lacunarity, diminish ), mx_fractal_noise_float( p.add( vec3( int( 19 ), int( 193 ), int( 17 ) ) ), octaves, lacunarity, diminish ) );\n\n} );\n\nconst mx_fractal_noise_vec4 = tslFn( ( [ p_immutable, octaves_immutable, lacunarity_immutable, diminish_immutable ] ) => {\n\n\tconst diminish = float( diminish_immutable ).toVar();\n\tconst lacunarity = float( lacunarity_immutable ).toVar();\n\tconst octaves = int( octaves_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\tconst c = vec3( mx_fractal_noise_vec3( p, octaves, lacunarity, diminish ) ).toVar();\n\tconst f = float( mx_fractal_noise_float( p.add( vec3( int( 19 ), int( 193 ), int( 17 ) ) ), octaves, lacunarity, diminish ) ).toVar();\n\n\treturn vec4( c, f );\n\n} );\n\nconst mx_worley_distance_0 = tslFn( ( [ p_immutable, x_immutable, y_immutable, xoff_immutable, yoff_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst yoff = int( yoff_immutable ).toVar();\n\tconst xoff = int( xoff_immutable ).toVar();\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst p = vec2( p_immutable ).toVar();\n\tconst tmp = vec3( mx_cell_noise_vec3( vec2( x.add( xoff ), y.add( yoff ) ) ) ).toVar();\n\tconst off = vec2( tmp.x, tmp.y ).toVar();\n\toff.subAssign( 0.5 );\n\toff.mulAssign( jitter );\n\toff.addAssign( 0.5 );\n\tconst cellpos = vec2( vec2( float( x ), float( y ) ).add( off ) ).toVar();\n\tconst diff = vec2( cellpos.sub( p ) ).toVar();\n\n\tIf( metric.equal( int( 2 ) ), () => {\n\n\t\treturn abs( diff.x ).add( abs( diff.y ) );\n\n\t} );\n\n\tIf( metric.equal( int( 3 ) ), () => {\n\n\t\treturn max( abs( diff.x ), abs( diff.y ) );\n\n\t} );\n\n\treturn dot( diff, diff );\n\n} );\n\nconst mx_worley_distance_1 = tslFn( ( [ p_immutable, x_immutable, y_immutable, z_immutable, xoff_immutable, yoff_immutable, zoff_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst zoff = int( zoff_immutable ).toVar();\n\tconst yoff = int( yoff_immutable ).toVar();\n\tconst xoff = int( xoff_immutable ).toVar();\n\tconst z = int( z_immutable ).toVar();\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\tconst off = vec3( mx_cell_noise_vec3( vec3( x.add( xoff ), y.add( yoff ), z.add( zoff ) ) ) ).toVar();\n\toff.subAssign( 0.5 );\n\toff.mulAssign( jitter );\n\toff.addAssign( 0.5 );\n\tconst cellpos = vec3( vec3( float( x ), float( y ), float( z ) ).add( off ) ).toVar();\n\tconst diff = vec3( cellpos.sub( p ) ).toVar();\n\n\tIf( metric.equal( int( 2 ) ), () => {\n\n\t\treturn abs( diff.x ).add( abs( diff.y ).add( abs( diff.z ) ) );\n\n\t} );\n\n\tIf( metric.equal( int( 3 ) ), () => {\n\n\t\treturn max( max( abs( diff.x ), abs( diff.y ) ), abs( diff.z ) );\n\n\t} );\n\n\treturn dot( diff, diff );\n\n} );\n\nconst mx_worley_distance = overloadingFn( [ mx_worley_distance_0, mx_worley_distance_1 ] );\n\nconst mx_worley_noise_float_0 = tslFn( ( [ p_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst p = vec2( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar();\n\tconst localpos = vec2( mx_floorfrac( p.x, X ), mx_floorfrac( p.y, Y ) ).toVar();\n\tconst sqdist = float( 1e6 ).toVar();\n\n\tloop( { start: - 1, end: int( 1 ), name: 'x', condition: '<=' }, ( { x } ) => {\n\n\t\tloop( { start: - 1, end: int( 1 ), name: 'y', condition: '<=' }, ( { y } ) => {\n\n\t\t\tconst dist = float( mx_worley_distance( localpos, x, y, X, Y, jitter, metric ) ).toVar();\n\t\t\tsqdist.assign( min( sqdist, dist ) );\n\n\t\t} );\n\n\t} );\n\n\tIf( metric.equal( int( 0 ) ), () => {\n\n\t\tsqdist.assign( sqrt( sqdist ) );\n\n\t} );\n\n\treturn sqdist;\n\n} );\n\nconst mx_worley_noise_vec2_0 = tslFn( ( [ p_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst p = vec2( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar();\n\tconst localpos = vec2( mx_floorfrac( p.x, X ), mx_floorfrac( p.y, Y ) ).toVar();\n\tconst sqdist = vec2( 1e6, 1e6 ).toVar();\n\n\tloop( { start: - 1, end: int( 1 ), name: 'x', condition: '<=' }, ( { x } ) => {\n\n\t\tloop( { start: - 1, end: int( 1 ), name: 'y', condition: '<=' }, ( { y } ) => {\n\n\t\t\tconst dist = float( mx_worley_distance( localpos, x, y, X, Y, jitter, metric ) ).toVar();\n\n\t\t\tIf( dist.lessThan( sqdist.x ), () => {\n\n\t\t\t\tsqdist.y.assign( sqdist.x );\n\t\t\t\tsqdist.x.assign( dist );\n\n\t\t\t} ).elseif( dist.lessThan( sqdist.y ), () => {\n\n\t\t\t\tsqdist.y.assign( dist );\n\n\t\t\t} );\n\n\t\t} );\n\n\t} );\n\n\tIf( metric.equal( int( 0 ) ), () => {\n\n\t\tsqdist.assign( sqrt( sqdist ) );\n\n\t} );\n\n\treturn sqdist;\n\n} );\n\nconst mx_worley_noise_vec3_0 = tslFn( ( [ p_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst p = vec2( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar();\n\tconst localpos = vec2( mx_floorfrac( p.x, X ), mx_floorfrac( p.y, Y ) ).toVar();\n\tconst sqdist = vec3( 1e6, 1e6, 1e6 ).toVar();\n\n\tloop( { start: - 1, end: int( 1 ), name: 'x', condition: '<=' }, ( { x } ) => {\n\n\t\tloop( { start: - 1, end: int( 1 ), name: 'y', condition: '<=' }, ( { y } ) => {\n\n\t\t\tconst dist = float( mx_worley_distance( localpos, x, y, X, Y, jitter, metric ) ).toVar();\n\n\t\t\tIf( dist.lessThan( sqdist.x ), () => {\n\n\t\t\t\tsqdist.z.assign( sqdist.y );\n\t\t\t\tsqdist.y.assign( sqdist.x );\n\t\t\t\tsqdist.x.assign( dist );\n\n\t\t\t} ).elseif( dist.lessThan( sqdist.y ), () => {\n\n\t\t\t\tsqdist.z.assign( sqdist.y );\n\t\t\t\tsqdist.y.assign( dist );\n\n\t\t\t} ).elseif( dist.lessThan( sqdist.z ), () => {\n\n\t\t\t\tsqdist.z.assign( dist );\n\n\t\t\t} );\n\n\t\t} );\n\n\t} );\n\n\tIf( metric.equal( int( 0 ) ), () => {\n\n\t\tsqdist.assign( sqrt( sqdist ) );\n\n\t} );\n\n\treturn sqdist;\n\n} );\n\nconst mx_worley_noise_float_1 = tslFn( ( [ p_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar(), Z = int().toVar();\n\tconst localpos = vec3( mx_floorfrac( p.x, X ), mx_floorfrac( p.y, Y ), mx_floorfrac( p.z, Z ) ).toVar();\n\tconst sqdist = float( 1e6 ).toVar();\n\n\tloop( { start: - 1, end: int( 1 ), name: 'x', condition: '<=' }, ( { x } ) => {\n\n\t\tloop( { start: - 1, end: int( 1 ), name: 'y', condition: '<=' }, ( { y } ) => {\n\n\t\t\tloop( { start: - 1, end: int( 1 ), name: 'z', condition: '<=' }, ( { z } ) => {\n\n\t\t\t\tconst dist = float( mx_worley_distance( localpos, x, y, z, X, Y, Z, jitter, metric ) ).toVar();\n\t\t\t\tsqdist.assign( min( sqdist, dist ) );\n\n\t\t\t} );\n\n\t\t} );\n\n\t} );\n\n\tIf( metric.equal( int( 0 ) ), () => {\n\n\t\tsqdist.assign( sqrt( sqdist ) );\n\n\t} );\n\n\treturn sqdist;\n\n} );\n\nconst mx_worley_noise_float = overloadingFn( [ mx_worley_noise_float_0, mx_worley_noise_float_1 ] );\n\nconst mx_worley_noise_vec2_1 = tslFn( ( [ p_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar(), Z = int().toVar();\n\tconst localpos = vec3( mx_floorfrac( p.x, X ), mx_floorfrac( p.y, Y ), mx_floorfrac( p.z, Z ) ).toVar();\n\tconst sqdist = vec2( 1e6, 1e6 ).toVar();\n\n\tloop( { start: - 1, end: int( 1 ), name: 'x', condition: '<=' }, ( { x } ) => {\n\n\t\tloop( { start: - 1, end: int( 1 ), name: 'y', condition: '<=' }, ( { y } ) => {\n\n\t\t\tloop( { start: - 1, end: int( 1 ), name: 'z', condition: '<=' }, ( { z } ) => {\n\n\t\t\t\tconst dist = float( mx_worley_distance( localpos, x, y, z, X, Y, Z, jitter, metric ) ).toVar();\n\n\t\t\t\tIf( dist.lessThan( sqdist.x ), () => {\n\n\t\t\t\t\tsqdist.y.assign( sqdist.x );\n\t\t\t\t\tsqdist.x.assign( dist );\n\n\t\t\t\t} ).elseif( dist.lessThan( sqdist.y ), () => {\n\n\t\t\t\t\tsqdist.y.assign( dist );\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t} );\n\n\t} );\n\n\tIf( metric.equal( int( 0 ) ), () => {\n\n\t\tsqdist.assign( sqrt( sqdist ) );\n\n\t} );\n\n\treturn sqdist;\n\n} );\n\nconst mx_worley_noise_vec2 = overloadingFn( [ mx_worley_noise_vec2_0, mx_worley_noise_vec2_1 ] );\n\nconst mx_worley_noise_vec3_1 = tslFn( ( [ p_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar(), Z = int().toVar();\n\tconst localpos = vec3( mx_floorfrac( p.x, X ), mx_floorfrac( p.y, Y ), mx_floorfrac( p.z, Z ) ).toVar();\n\tconst sqdist = vec3( 1e6, 1e6, 1e6 ).toVar();\n\n\tloop( { start: - 1, end: int( 1 ), name: 'x', condition: '<=' }, ( { x } ) => {\n\n\t\tloop( { start: - 1, end: int( 1 ), name: 'y', condition: '<=' }, ( { y } ) => {\n\n\t\t\tloop( { start: - 1, end: int( 1 ), name: 'z', condition: '<=' }, ( { z } ) => {\n\n\t\t\t\tconst dist = float( mx_worley_distance( localpos, x, y, z, X, Y, Z, jitter, metric ) ).toVar();\n\n\t\t\t\tIf( dist.lessThan( sqdist.x ), () => {\n\n\t\t\t\t\tsqdist.z.assign( sqdist.y );\n\t\t\t\t\tsqdist.y.assign( sqdist.x );\n\t\t\t\t\tsqdist.x.assign( dist );\n\n\t\t\t\t} ).elseif( dist.lessThan( sqdist.y ), () => {\n\n\t\t\t\t\tsqdist.z.assign( sqdist.y );\n\t\t\t\t\tsqdist.y.assign( dist );\n\n\t\t\t\t} ).elseif( dist.lessThan( sqdist.z ), () => {\n\n\t\t\t\t\tsqdist.z.assign( dist );\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t} );\n\n\t} );\n\n\tIf( metric.equal( int( 0 ) ), () => {\n\n\t\tsqdist.assign( sqrt( sqdist ) );\n\n\t} );\n\n\treturn sqdist;\n\n} );\n\nconst mx_worley_noise_vec3 = overloadingFn( [ mx_worley_noise_vec3_0, mx_worley_noise_vec3_1 ] );\n\n// layouts\n\nmx_select.setLayout( {\n\tname: 'mx_select',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'b', type: 'bool' },\n\t\t{ name: 't', type: 'float' },\n\t\t{ name: 'f', type: 'float' }\n\t]\n} );\n\nmx_negate_if.setLayout( {\n\tname: 'mx_negate_if',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'val', type: 'float' },\n\t\t{ name: 'b', type: 'bool' }\n\t]\n} );\n\nmx_floor.setLayout( {\n\tname: 'mx_floor',\n\ttype: 'int',\n\tinputs: [\n\t\t{ name: 'x', type: 'float' }\n\t]\n} );\n\nmx_bilerp_0.setLayout( {\n\tname: 'mx_bilerp_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'v0', type: 'float' },\n\t\t{ name: 'v1', type: 'float' },\n\t\t{ name: 'v2', type: 'float' },\n\t\t{ name: 'v3', type: 'float' },\n\t\t{ name: 's', type: 'float' },\n\t\t{ name: 't', type: 'float' }\n\t]\n} );\n\nmx_bilerp_1.setLayout( {\n\tname: 'mx_bilerp_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'v0', type: 'vec3' },\n\t\t{ name: 'v1', type: 'vec3' },\n\t\t{ name: 'v2', type: 'vec3' },\n\t\t{ name: 'v3', type: 'vec3' },\n\t\t{ name: 's', type: 'float' },\n\t\t{ name: 't', type: 'float' }\n\t]\n} );\n\nmx_trilerp_0.setLayout( {\n\tname: 'mx_trilerp_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'v0', type: 'float' },\n\t\t{ name: 'v1', type: 'float' },\n\t\t{ name: 'v2', type: 'float' },\n\t\t{ name: 'v3', type: 'float' },\n\t\t{ name: 'v4', type: 'float' },\n\t\t{ name: 'v5', type: 'float' },\n\t\t{ name: 'v6', type: 'float' },\n\t\t{ name: 'v7', type: 'float' },\n\t\t{ name: 's', type: 'float' },\n\t\t{ name: 't', type: 'float' },\n\t\t{ name: 'r', type: 'float' }\n\t]\n} );\n\nmx_trilerp_1.setLayout( {\n\tname: 'mx_trilerp_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'v0', type: 'vec3' },\n\t\t{ name: 'v1', type: 'vec3' },\n\t\t{ name: 'v2', type: 'vec3' },\n\t\t{ name: 'v3', type: 'vec3' },\n\t\t{ name: 'v4', type: 'vec3' },\n\t\t{ name: 'v5', type: 'vec3' },\n\t\t{ name: 'v6', type: 'vec3' },\n\t\t{ name: 'v7', type: 'vec3' },\n\t\t{ name: 's', type: 'float' },\n\t\t{ name: 't', type: 'float' },\n\t\t{ name: 'r', type: 'float' }\n\t]\n} );\n\nmx_gradient_float_0.setLayout( {\n\tname: 'mx_gradient_float_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'hash', type: 'uint' },\n\t\t{ name: 'x', type: 'float' },\n\t\t{ name: 'y', type: 'float' }\n\t]\n} );\n\nmx_gradient_float_1.setLayout( {\n\tname: 'mx_gradient_float_1',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'hash', type: 'uint' },\n\t\t{ name: 'x', type: 'float' },\n\t\t{ name: 'y', type: 'float' },\n\t\t{ name: 'z', type: 'float' }\n\t]\n} );\n\nmx_gradient_vec3_0.setLayout( {\n\tname: 'mx_gradient_vec3_0',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'hash', type: 'uvec3' },\n\t\t{ name: 'x', type: 'float' },\n\t\t{ name: 'y', type: 'float' }\n\t]\n} );\n\nmx_gradient_vec3_1.setLayout( {\n\tname: 'mx_gradient_vec3_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'hash', type: 'uvec3' },\n\t\t{ name: 'x', type: 'float' },\n\t\t{ name: 'y', type: 'float' },\n\t\t{ name: 'z', type: 'float' }\n\t]\n} );\n\nmx_gradient_scale2d_0.setLayout( {\n\tname: 'mx_gradient_scale2d_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'v', type: 'float' }\n\t]\n} );\n\nmx_gradient_scale3d_0.setLayout( {\n\tname: 'mx_gradient_scale3d_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'v', type: 'float' }\n\t]\n} );\n\nmx_gradient_scale2d_1.setLayout( {\n\tname: 'mx_gradient_scale2d_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'v', type: 'vec3' }\n\t]\n} );\n\nmx_gradient_scale3d_1.setLayout( {\n\tname: 'mx_gradient_scale3d_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'v', type: 'vec3' }\n\t]\n} );\n\nmx_rotl32.setLayout( {\n\tname: 'mx_rotl32',\n\ttype: 'uint',\n\tinputs: [\n\t\t{ name: 'x', type: 'uint' },\n\t\t{ name: 'k', type: 'int' }\n\t]\n} );\n\nmx_bjfinal.setLayout( {\n\tname: 'mx_bjfinal',\n\ttype: 'uint',\n\tinputs: [\n\t\t{ name: 'a', type: 'uint' },\n\t\t{ name: 'b', type: 'uint' },\n\t\t{ name: 'c', type: 'uint' }\n\t]\n} );\n\nmx_bits_to_01.setLayout( {\n\tname: 'mx_bits_to_01',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'bits', type: 'uint' }\n\t]\n} );\n\nmx_fade.setLayout( {\n\tname: 'mx_fade',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 't', type: 'float' }\n\t]\n} );\n\nmx_hash_int_0.setLayout( {\n\tname: 'mx_hash_int_0',\n\ttype: 'uint',\n\tinputs: [\n\t\t{ name: 'x', type: 'int' }\n\t]\n} );\n\nmx_hash_int_1.setLayout( {\n\tname: 'mx_hash_int_1',\n\ttype: 'uint',\n\tinputs: [\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' }\n\t]\n} );\n\nmx_hash_int_2.setLayout( {\n\tname: 'mx_hash_int_2',\n\ttype: 'uint',\n\tinputs: [\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' },\n\t\t{ name: 'z', type: 'int' }\n\t]\n} );\n\nmx_hash_int_3.setLayout( {\n\tname: 'mx_hash_int_3',\n\ttype: 'uint',\n\tinputs: [\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' },\n\t\t{ name: 'z', type: 'int' },\n\t\t{ name: 'xx', type: 'int' }\n\t]\n} );\n\nmx_hash_int_4.setLayout( {\n\tname: 'mx_hash_int_4',\n\ttype: 'uint',\n\tinputs: [\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' },\n\t\t{ name: 'z', type: 'int' },\n\t\t{ name: 'xx', type: 'int' },\n\t\t{ name: 'yy', type: 'int' }\n\t]\n} );\n\nmx_hash_vec3_0.setLayout( {\n\tname: 'mx_hash_vec3_0',\n\ttype: 'uvec3',\n\tinputs: [\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' }\n\t]\n} );\n\nmx_hash_vec3_1.setLayout( {\n\tname: 'mx_hash_vec3_1',\n\ttype: 'uvec3',\n\tinputs: [\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' },\n\t\t{ name: 'z', type: 'int' }\n\t]\n} );\n\nmx_perlin_noise_float_0.setLayout( {\n\tname: 'mx_perlin_noise_float_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' }\n\t]\n} );\n\nmx_perlin_noise_float_1.setLayout( {\n\tname: 'mx_perlin_noise_float_1',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' }\n\t]\n} );\n\nmx_perlin_noise_vec3_0.setLayout( {\n\tname: 'mx_perlin_noise_vec3_0',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' }\n\t]\n} );\n\nmx_perlin_noise_vec3_1.setLayout( {\n\tname: 'mx_perlin_noise_vec3_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' }\n\t]\n} );\n\nmx_cell_noise_float_0.setLayout( {\n\tname: 'mx_cell_noise_float_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'float' }\n\t]\n} );\n\nmx_cell_noise_float_1.setLayout( {\n\tname: 'mx_cell_noise_float_1',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' }\n\t]\n} );\n\nmx_cell_noise_float_2.setLayout( {\n\tname: 'mx_cell_noise_float_2',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' }\n\t]\n} );\n\nmx_cell_noise_float_3.setLayout( {\n\tname: 'mx_cell_noise_float_3',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec4' }\n\t]\n} );\n\nmx_cell_noise_vec3_0.setLayout( {\n\tname: 'mx_cell_noise_vec3_0',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'float' }\n\t]\n} );\n\nmx_cell_noise_vec3_1.setLayout( {\n\tname: 'mx_cell_noise_vec3_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' }\n\t]\n} );\n\nmx_cell_noise_vec3_2.setLayout( {\n\tname: 'mx_cell_noise_vec3_2',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' }\n\t]\n} );\n\nmx_cell_noise_vec3_3.setLayout( {\n\tname: 'mx_cell_noise_vec3_3',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec4' }\n\t]\n} );\n\nmx_fractal_noise_float.setLayout( {\n\tname: 'mx_fractal_noise_float',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'octaves', type: 'int' },\n\t\t{ name: 'lacunarity', type: 'float' },\n\t\t{ name: 'diminish', type: 'float' }\n\t]\n} );\n\nmx_fractal_noise_vec3.setLayout( {\n\tname: 'mx_fractal_noise_vec3',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'octaves', type: 'int' },\n\t\t{ name: 'lacunarity', type: 'float' },\n\t\t{ name: 'diminish', type: 'float' }\n\t]\n} );\n\nmx_fractal_noise_vec2.setLayout( {\n\tname: 'mx_fractal_noise_vec2',\n\ttype: 'vec2',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'octaves', type: 'int' },\n\t\t{ name: 'lacunarity', type: 'float' },\n\t\t{ name: 'diminish', type: 'float' }\n\t]\n} );\n\nmx_fractal_noise_vec4.setLayout( {\n\tname: 'mx_fractal_noise_vec4',\n\ttype: 'vec4',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'octaves', type: 'int' },\n\t\t{ name: 'lacunarity', type: 'float' },\n\t\t{ name: 'diminish', type: 'float' }\n\t]\n} );\n\nmx_worley_distance_0.setLayout( {\n\tname: 'mx_worley_distance_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' },\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' },\n\t\t{ name: 'xoff', type: 'int' },\n\t\t{ name: 'yoff', type: 'int' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nmx_worley_distance_1.setLayout( {\n\tname: 'mx_worley_distance_1',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' },\n\t\t{ name: 'z', type: 'int' },\n\t\t{ name: 'xoff', type: 'int' },\n\t\t{ name: 'yoff', type: 'int' },\n\t\t{ name: 'zoff', type: 'int' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nmx_worley_noise_float_0.setLayout( {\n\tname: 'mx_worley_noise_float_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nmx_worley_noise_vec2_0.setLayout( {\n\tname: 'mx_worley_noise_vec2_0',\n\ttype: 'vec2',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nmx_worley_noise_vec3_0.setLayout( {\n\tname: 'mx_worley_noise_vec3_0',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nmx_worley_noise_float_1.setLayout( {\n\tname: 'mx_worley_noise_float_1',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nmx_worley_noise_vec2_1.setLayout( {\n\tname: 'mx_worley_noise_vec2_1',\n\ttype: 'vec2',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nmx_worley_noise_vec3_1.setLayout( {\n\tname: 'mx_worley_noise_vec3_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nexport { mx_select, mx_negate_if, mx_floor, mx_floorfrac, mx_bilerp, mx_trilerp, mx_gradient_float, mx_gradient_vec3, mx_gradient_scale2d, mx_gradient_scale3d, mx_rotl32, mx_bjmix, mx_bjfinal, mx_bits_to_01, mx_fade, mx_hash_int, mx_hash_vec3, mx_perlin_noise_float, mx_perlin_noise_vec3, mx_cell_noise_float, mx_cell_noise_vec3, mx_fractal_noise_float, mx_fractal_noise_vec3, mx_fractal_noise_vec2, mx_fractal_noise_vec4, mx_worley_distance, mx_worley_noise_float, mx_worley_noise_vec2, mx_worley_noise_vec3 };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}