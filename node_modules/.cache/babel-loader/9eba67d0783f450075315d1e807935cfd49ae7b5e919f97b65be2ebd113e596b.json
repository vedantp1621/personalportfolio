{"ast":null,"code":"import _classCallCheck from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport TempNode from '../core/TempNode.js';\nimport { dot, mix } from '../math/MathNode.js';\nimport { add } from '../math/OperatorNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { addNodeElement, tslFn, nodeProxy, float, vec3 } from '../shadernode/ShaderNode.js';\nvar saturationNode = tslFn(function (_ref) {\n  var color = _ref.color,\n    adjustment = _ref.adjustment;\n  return adjustment.mix(luminance(color.rgb), color.rgb);\n});\nvar vibranceNode = tslFn(function (_ref2) {\n  var color = _ref2.color,\n    adjustment = _ref2.adjustment;\n  var average = add(color.r, color.g, color.b).div(3.0);\n  var mx = color.r.max(color.g.max(color.b));\n  var amt = mx.sub(average).mul(adjustment).mul(-3.0);\n  return mix(color.rgb, mx, amt);\n});\nvar hueNode = tslFn(function (_ref3) {\n  var color = _ref3.color,\n    adjustment = _ref3.adjustment;\n  var k = vec3(0.57735, 0.57735, 0.57735);\n  var cosAngle = adjustment.cos();\n  return vec3(color.rgb.mul(cosAngle).add(k.cross(color.rgb).mul(adjustment.sin()).add(k.mul(dot(k, color.rgb).mul(cosAngle.oneMinus())))));\n});\nvar ColorAdjustmentNode = /*#__PURE__*/function (_TempNode) {\n  _inherits(ColorAdjustmentNode, _TempNode);\n  var _super = _createSuper(ColorAdjustmentNode);\n  function ColorAdjustmentNode(method, colorNode) {\n    var _this;\n    var adjustmentNode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : float(1);\n    _classCallCheck(this, ColorAdjustmentNode);\n    _this = _super.call(this, 'vec3');\n    _this.method = method;\n    _this.colorNode = colorNode;\n    _this.adjustmentNode = adjustmentNode;\n    return _this;\n  }\n  _createClass(ColorAdjustmentNode, [{\n    key: \"setup\",\n    value: function setup() {\n      var method = this.method,\n        colorNode = this.colorNode,\n        adjustmentNode = this.adjustmentNode;\n      var callParams = {\n        color: colorNode,\n        adjustment: adjustmentNode\n      };\n      var outputNode = null;\n      if (method === ColorAdjustmentNode.SATURATION) {\n        outputNode = saturationNode(callParams);\n      } else if (method === ColorAdjustmentNode.VIBRANCE) {\n        outputNode = vibranceNode(callParams);\n      } else if (method === ColorAdjustmentNode.HUE) {\n        outputNode = hueNode(callParams);\n      } else {\n        console.error(\"\".concat(this.type, \": Method \\\"\").concat(this.method, \"\\\" not supported!\"));\n      }\n      return outputNode;\n    }\n  }]);\n  return ColorAdjustmentNode;\n}(TempNode);\nColorAdjustmentNode.SATURATION = 'saturation';\nColorAdjustmentNode.VIBRANCE = 'vibrance';\nColorAdjustmentNode.HUE = 'hue';\nexport default ColorAdjustmentNode;\nexport var saturation = nodeProxy(ColorAdjustmentNode, ColorAdjustmentNode.SATURATION);\nexport var vibrance = nodeProxy(ColorAdjustmentNode, ColorAdjustmentNode.VIBRANCE);\nexport var hue = nodeProxy(ColorAdjustmentNode, ColorAdjustmentNode.HUE);\nexport var lumaCoeffs = vec3(0.2125, 0.7154, 0.0721);\nexport var luminance = function luminance(color) {\n  var luma = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : lumaCoeffs;\n  return dot(color, luma);\n};\nexport var threshold = function threshold(color, _threshold) {\n  return mix(vec3(0.0), color, luminance(color).sub(_threshold).max(0));\n};\naddNodeElement('saturation', saturation);\naddNodeElement('vibrance', vibrance);\naddNodeElement('hue', hue);\naddNodeElement('threshold', threshold);\naddNodeClass('ColorAdjustmentNode', ColorAdjustmentNode);","map":{"version":3,"names":["TempNode","dot","mix","add","addNodeClass","addNodeElement","tslFn","nodeProxy","float","vec3","saturationNode","_ref","color","adjustment","luminance","rgb","vibranceNode","_ref2","average","r","g","b","div","mx","max","amt","sub","mul","hueNode","_ref3","k","cosAngle","cos","cross","sin","oneMinus","ColorAdjustmentNode","_TempNode","_inherits","_super","_createSuper","method","colorNode","_this","adjustmentNode","arguments","length","undefined","_classCallCheck","call","_createClass","key","value","setup","callParams","outputNode","SATURATION","VIBRANCE","HUE","console","error","concat","type","saturation","vibrance","hue","lumaCoeffs","luma","threshold"],"sources":["/Users/vedant/node_modules/three/examples/jsm/nodes/display/ColorAdjustmentNode.js"],"sourcesContent":["import TempNode from '../core/TempNode.js';\nimport { dot, mix } from '../math/MathNode.js';\nimport { add } from '../math/OperatorNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { addNodeElement, tslFn, nodeProxy, float, vec3 } from '../shadernode/ShaderNode.js';\n\nconst saturationNode = tslFn( ( { color, adjustment } ) => {\n\n\treturn adjustment.mix( luminance( color.rgb ), color.rgb );\n\n} );\n\nconst vibranceNode = tslFn( ( { color, adjustment } ) => {\n\n\tconst average = add( color.r, color.g, color.b ).div( 3.0 );\n\n\tconst mx = color.r.max( color.g.max( color.b ) );\n\tconst amt = mx.sub( average ).mul( adjustment ).mul( - 3.0 );\n\n\treturn mix( color.rgb, mx, amt );\n\n} );\n\nconst hueNode = tslFn( ( { color, adjustment } ) => {\n\n\tconst k = vec3( 0.57735, 0.57735, 0.57735 );\n\n\tconst cosAngle = adjustment.cos();\n\n\treturn vec3( color.rgb.mul( cosAngle ).add( k.cross( color.rgb ).mul( adjustment.sin() ).add( k.mul( dot( k, color.rgb ).mul( cosAngle.oneMinus() ) ) ) ) );\n\n} );\n\nclass ColorAdjustmentNode extends TempNode {\n\n\tconstructor( method, colorNode, adjustmentNode = float( 1 ) ) {\n\n\t\tsuper( 'vec3' );\n\n\t\tthis.method = method;\n\n\t\tthis.colorNode = colorNode;\n\t\tthis.adjustmentNode = adjustmentNode;\n\n\t}\n\n\tsetup() {\n\n\t\tconst { method, colorNode, adjustmentNode } = this;\n\n\t\tconst callParams = { color: colorNode, adjustment: adjustmentNode };\n\n\t\tlet outputNode = null;\n\n\t\tif ( method === ColorAdjustmentNode.SATURATION ) {\n\n\t\t\toutputNode = saturationNode( callParams );\n\n\t\t} else if ( method === ColorAdjustmentNode.VIBRANCE ) {\n\n\t\t\toutputNode = vibranceNode( callParams );\n\n\t\t} else if ( method === ColorAdjustmentNode.HUE ) {\n\n\t\t\toutputNode = hueNode( callParams );\n\n\t\t} else {\n\n\t\t\tconsole.error( `${ this.type }: Method \"${ this.method }\" not supported!` );\n\n\t\t}\n\n\t\treturn outputNode;\n\n\t}\n\n}\n\nColorAdjustmentNode.SATURATION = 'saturation';\nColorAdjustmentNode.VIBRANCE = 'vibrance';\nColorAdjustmentNode.HUE = 'hue';\n\nexport default ColorAdjustmentNode;\n\nexport const saturation = nodeProxy( ColorAdjustmentNode, ColorAdjustmentNode.SATURATION );\nexport const vibrance = nodeProxy( ColorAdjustmentNode, ColorAdjustmentNode.VIBRANCE );\nexport const hue = nodeProxy( ColorAdjustmentNode, ColorAdjustmentNode.HUE );\n\nexport const lumaCoeffs = vec3( 0.2125, 0.7154, 0.0721 );\nexport const luminance = ( color, luma = lumaCoeffs ) => dot( color, luma );\n\nexport const threshold = ( color, threshold ) => mix( vec3( 0.0 ), color, luminance( color ).sub( threshold ).max( 0 ) );\n\naddNodeElement( 'saturation', saturation );\naddNodeElement( 'vibrance', vibrance );\naddNodeElement( 'hue', hue );\naddNodeElement( 'threshold', threshold );\n\naddNodeClass( 'ColorAdjustmentNode', ColorAdjustmentNode );\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}