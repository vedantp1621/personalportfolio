{"ast":null,"code":"import _classCallCheck from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Object3DNode from './Object3DNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { NodeUpdateType } from '../core/constants.js';\n//import { sharedUniformGroup } from '../core/UniformGroupNode.js';\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\n\n//const cameraGroup = sharedUniformGroup( 'camera' );\nvar CameraNode = /*#__PURE__*/function (_Object3DNode) {\n  _inherits(CameraNode, _Object3DNode);\n  var _super = _createSuper(CameraNode);\n  function CameraNode() {\n    var _this;\n    var scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : CameraNode.POSITION;\n    _classCallCheck(this, CameraNode);\n    _this = _super.call(this, scope);\n    _this.updateType = NodeUpdateType.RENDER;\n\n    //this._uniformNode.groupNode = cameraGroup;\n    return _this;\n  }\n  _createClass(CameraNode, [{\n    key: \"getNodeType\",\n    value: function getNodeType(builder) {\n      var scope = this.scope;\n      if (scope === CameraNode.PROJECTION_MATRIX || scope === CameraNode.PROJECTION_MATRIX_INVERSE) {\n        return 'mat4';\n      } else if (scope === CameraNode.NEAR || scope === CameraNode.FAR || scope === CameraNode.LOG_DEPTH) {\n        return 'float';\n      }\n      return _get(_getPrototypeOf(CameraNode.prototype), \"getNodeType\", this).call(this, builder);\n    }\n  }, {\n    key: \"update\",\n    value: function update(frame) {\n      var camera = frame.camera;\n      var uniformNode = this._uniformNode;\n      var scope = this.scope;\n\n      //cameraGroup.needsUpdate = true;\n\n      if (scope === CameraNode.VIEW_MATRIX) {\n        uniformNode.value = camera.matrixWorldInverse;\n      } else if (scope === CameraNode.PROJECTION_MATRIX) {\n        uniformNode.value = camera.projectionMatrix;\n      } else if (scope === CameraNode.PROJECTION_MATRIX_INVERSE) {\n        uniformNode.value = camera.projectionMatrixInverse;\n      } else if (scope === CameraNode.NEAR) {\n        uniformNode.value = camera.near;\n      } else if (scope === CameraNode.FAR) {\n        uniformNode.value = camera.far;\n      } else if (scope === CameraNode.LOG_DEPTH) {\n        uniformNode.value = 2.0 / (Math.log(camera.far + 1.0) / Math.LN2);\n      } else {\n        this.object3d = camera;\n        _get(_getPrototypeOf(CameraNode.prototype), \"update\", this).call(this, frame);\n      }\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder) {\n      var scope = this.scope;\n      if (scope === CameraNode.PROJECTION_MATRIX || scope === CameraNode.PROJECTION_MATRIX_INVERSE) {\n        this._uniformNode.nodeType = 'mat4';\n      } else if (scope === CameraNode.NEAR || scope === CameraNode.FAR || scope === CameraNode.LOG_DEPTH) {\n        this._uniformNode.nodeType = 'float';\n      }\n      return _get(_getPrototypeOf(CameraNode.prototype), \"generate\", this).call(this, builder);\n    }\n  }]);\n  return CameraNode;\n}(Object3DNode);\nCameraNode.PROJECTION_MATRIX = 'projectionMatrix';\nCameraNode.PROJECTION_MATRIX_INVERSE = 'projectionMatrixInverse';\nCameraNode.NEAR = 'near';\nCameraNode.FAR = 'far';\nCameraNode.LOG_DEPTH = 'logDepth';\nexport default CameraNode;\nexport var cameraProjectionMatrix = nodeImmutable(CameraNode, CameraNode.PROJECTION_MATRIX);\nexport var cameraProjectionMatrixInverse = nodeImmutable(CameraNode, CameraNode.PROJECTION_MATRIX_INVERSE);\nexport var cameraNear = nodeImmutable(CameraNode, CameraNode.NEAR);\nexport var cameraFar = nodeImmutable(CameraNode, CameraNode.FAR);\nexport var cameraLogDepth = nodeImmutable(CameraNode, CameraNode.LOG_DEPTH);\nexport var cameraViewMatrix = nodeImmutable(CameraNode, CameraNode.VIEW_MATRIX);\nexport var cameraNormalMatrix = nodeImmutable(CameraNode, CameraNode.NORMAL_MATRIX);\nexport var cameraWorldMatrix = nodeImmutable(CameraNode, CameraNode.WORLD_MATRIX);\nexport var cameraPosition = nodeImmutable(CameraNode, CameraNode.POSITION);\naddNodeClass('CameraNode', CameraNode);","map":{"version":3,"names":["Object3DNode","addNodeClass","NodeUpdateType","nodeImmutable","CameraNode","_Object3DNode","_inherits","_super","_createSuper","_this","scope","arguments","length","undefined","POSITION","_classCallCheck","call","updateType","RENDER","_createClass","key","value","getNodeType","builder","PROJECTION_MATRIX","PROJECTION_MATRIX_INVERSE","NEAR","FAR","LOG_DEPTH","_get","_getPrototypeOf","prototype","update","frame","camera","uniformNode","_uniformNode","VIEW_MATRIX","matrixWorldInverse","projectionMatrix","projectionMatrixInverse","near","far","Math","log","LN2","object3d","generate","nodeType","cameraProjectionMatrix","cameraProjectionMatrixInverse","cameraNear","cameraFar","cameraLogDepth","cameraViewMatrix","cameraNormalMatrix","NORMAL_MATRIX","cameraWorldMatrix","WORLD_MATRIX","cameraPosition"],"sources":["/Users/vedant/node_modules/three/examples/jsm/nodes/accessors/CameraNode.js"],"sourcesContent":["import Object3DNode from './Object3DNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { NodeUpdateType } from '../core/constants.js';\n//import { sharedUniformGroup } from '../core/UniformGroupNode.js';\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\n\n//const cameraGroup = sharedUniformGroup( 'camera' );\n\nclass CameraNode extends Object3DNode {\n\n\tconstructor( scope = CameraNode.POSITION ) {\n\n\t\tsuper( scope );\n\n\t\tthis.updateType = NodeUpdateType.RENDER;\n\n\t\t//this._uniformNode.groupNode = cameraGroup;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\tconst scope = this.scope;\n\n\t\tif ( scope === CameraNode.PROJECTION_MATRIX || scope === CameraNode.PROJECTION_MATRIX_INVERSE ) {\n\n\t\t\treturn 'mat4';\n\n\t\t} else if ( scope === CameraNode.NEAR || scope === CameraNode.FAR || scope === CameraNode.LOG_DEPTH ) {\n\n\t\t\treturn 'float';\n\n\t\t}\n\n\t\treturn super.getNodeType( builder );\n\n\t}\n\n\tupdate( frame ) {\n\n\t\tconst camera = frame.camera;\n\t\tconst uniformNode = this._uniformNode;\n\t\tconst scope = this.scope;\n\n\t\t//cameraGroup.needsUpdate = true;\n\n\t\tif ( scope === CameraNode.VIEW_MATRIX ) {\n\n\t\t\tuniformNode.value = camera.matrixWorldInverse;\n\n\t\t} else if ( scope === CameraNode.PROJECTION_MATRIX ) {\n\n\t\t\tuniformNode.value = camera.projectionMatrix;\n\n\t\t} else if ( scope === CameraNode.PROJECTION_MATRIX_INVERSE ) {\n\n\t\t\tuniformNode.value = camera.projectionMatrixInverse;\n\n\t\t} else if ( scope === CameraNode.NEAR ) {\n\n\t\t\tuniformNode.value = camera.near;\n\n\t\t} else if ( scope === CameraNode.FAR ) {\n\n\t\t\tuniformNode.value = camera.far;\n\n\t\t} else if ( scope === CameraNode.LOG_DEPTH ) {\n\n\t\t\tuniformNode.value = 2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 );\n\n\t\t} else {\n\n\t\t\tthis.object3d = camera;\n\n\t\t\tsuper.update( frame );\n\n\t\t}\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst scope = this.scope;\n\n\t\tif ( scope === CameraNode.PROJECTION_MATRIX || scope === CameraNode.PROJECTION_MATRIX_INVERSE ) {\n\n\t\t\tthis._uniformNode.nodeType = 'mat4';\n\n\t\t} else if ( scope === CameraNode.NEAR || scope === CameraNode.FAR || scope === CameraNode.LOG_DEPTH ) {\n\n\t\t\tthis._uniformNode.nodeType = 'float';\n\n\t\t}\n\n\t\treturn super.generate( builder );\n\n\t}\n\n}\n\nCameraNode.PROJECTION_MATRIX = 'projectionMatrix';\nCameraNode.PROJECTION_MATRIX_INVERSE = 'projectionMatrixInverse';\nCameraNode.NEAR = 'near';\nCameraNode.FAR = 'far';\nCameraNode.LOG_DEPTH = 'logDepth';\n\nexport default CameraNode;\n\nexport const cameraProjectionMatrix = nodeImmutable( CameraNode, CameraNode.PROJECTION_MATRIX );\nexport const cameraProjectionMatrixInverse = nodeImmutable( CameraNode, CameraNode.PROJECTION_MATRIX_INVERSE );\nexport const cameraNear = nodeImmutable( CameraNode, CameraNode.NEAR );\nexport const cameraFar = nodeImmutable( CameraNode, CameraNode.FAR );\nexport const cameraLogDepth = nodeImmutable( CameraNode, CameraNode.LOG_DEPTH );\nexport const cameraViewMatrix = nodeImmutable( CameraNode, CameraNode.VIEW_MATRIX );\nexport const cameraNormalMatrix = nodeImmutable( CameraNode, CameraNode.NORMAL_MATRIX );\nexport const cameraWorldMatrix = nodeImmutable( CameraNode, CameraNode.WORLD_MATRIX );\nexport const cameraPosition = nodeImmutable( CameraNode, CameraNode.POSITION );\n\naddNodeClass( 'CameraNode', CameraNode );\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}