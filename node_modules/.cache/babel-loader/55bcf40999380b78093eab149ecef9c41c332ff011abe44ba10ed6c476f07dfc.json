{"ast":null,"code":"import { addNodeMaterial } from './NodeMaterial.js';\nimport { transformedClearcoatNormalView } from '../accessors/NormalNode.js';\nimport { clearcoat, clearcoatRoughness, sheen, sheenRoughness, iridescence, iridescenceIOR, iridescenceThickness } from '../core/PropertyNode.js';\nimport { materialClearcoat, materialClearcoatRoughness, materialClearcoatNormal, materialSheen, materialSheenRoughness, materialIridescence, materialIridescenceIOR, materialIridescenceThickness } from '../accessors/MaterialNode.js';\nimport { float, vec3 } from '../shadernode/ShaderNode.js';\nimport PhysicalLightingModel from '../functions/PhysicalLightingModel.js';\nimport MeshStandardNodeMaterial from './MeshStandardNodeMaterial.js';\nimport { MeshPhysicalMaterial } from 'three';\nconst defaultValues = new MeshPhysicalMaterial();\nclass MeshPhysicalNodeMaterial extends MeshStandardNodeMaterial {\n  constructor(parameters) {\n    super();\n    this.isMeshPhysicalNodeMaterial = true;\n    this.clearcoatNode = null;\n    this.clearcoatRoughnessNode = null;\n    this.clearcoatNormalNode = null;\n    this.sheenNode = null;\n    this.sheenRoughnessNode = null;\n    this.iridescenceNode = null;\n    this.iridescenceIORNode = null;\n    this.iridescenceThicknessNode = null;\n    this.specularIntensityNode = null;\n    this.specularColorNode = null;\n    this.transmissionNode = null;\n    this.thicknessNode = null;\n    this.attenuationDistanceNode = null;\n    this.attenuationColorNode = null;\n    this.setDefaultValues(defaultValues);\n    this.setValues(parameters);\n  }\n  get useClearcoat() {\n    return this.clearcoat > 0 || this.clearcoatNode !== null;\n  }\n  get useIridescence() {\n    return this.iridescence > 0 || this.iridescenceNode !== null;\n  }\n  get useSheen() {\n    return this.sheen > 0 || this.sheenNode !== null;\n  }\n  setupLightingModel( /*builder*/\n  ) {\n    return new PhysicalLightingModel(this.useClearcoat, this.useSheen, this.useIridescence);\n  }\n  setupVariants(builder) {\n    super.setupVariants(builder);\n\n    // CLEARCOAT\n\n    if (this.useClearcoat) {\n      const clearcoatNode = this.clearcoatNode ? float(this.clearcoatNode) : materialClearcoat;\n      const clearcoatRoughnessNode = this.clearcoatRoughnessNode ? float(this.clearcoatRoughnessNode) : materialClearcoatRoughness;\n      clearcoat.assign(clearcoatNode);\n      clearcoatRoughness.assign(clearcoatRoughnessNode);\n    }\n\n    // SHEEN\n\n    if (this.useSheen) {\n      const sheenNode = this.sheenNode ? vec3(this.sheenNode) : materialSheen;\n      const sheenRoughnessNode = this.sheenRoughnessNode ? float(this.sheenRoughnessNode) : materialSheenRoughness;\n      sheen.assign(sheenNode);\n      sheenRoughness.assign(sheenRoughnessNode);\n    }\n\n    // IRIDESCENCE\n\n    if (this.useIridescence) {\n      const iridescenceNode = this.iridescenceNode ? float(this.iridescenceNode) : materialIridescence;\n      const iridescenceIORNode = this.iridescenceIORNode ? float(this.iridescenceIORNode) : materialIridescenceIOR;\n      const iridescenceThicknessNode = this.iridescenceThicknessNode ? float(this.iridescenceThicknessNode) : materialIridescenceThickness;\n      iridescence.assign(iridescenceNode);\n      iridescenceIOR.assign(iridescenceIORNode);\n      iridescenceThickness.assign(iridescenceThicknessNode);\n    }\n  }\n  setupNormal(builder) {\n    super.setupNormal(builder);\n\n    // CLEARCOAT NORMAL\n\n    const clearcoatNormalNode = this.clearcoatNormalNode ? vec3(this.clearcoatNormalNode) : materialClearcoatNormal;\n    transformedClearcoatNormalView.assign(clearcoatNormalNode);\n  }\n  copy(source) {\n    this.clearcoatNode = source.clearcoatNode;\n    this.clearcoatRoughnessNode = source.clearcoatRoughnessNode;\n    this.clearcoatNormalNode = source.clearcoatNormalNode;\n    this.sheenNode = source.sheenNode;\n    this.sheenRoughnessNode = source.sheenRoughnessNode;\n    this.iridescenceNode = source.iridescenceNode;\n    this.iridescenceIORNode = source.iridescenceIORNode;\n    this.iridescenceThicknessNode = source.iridescenceThicknessNode;\n    this.specularIntensityNode = source.specularIntensityNode;\n    this.specularColorNode = source.specularColorNode;\n    this.transmissionNode = source.transmissionNode;\n    this.thicknessNode = source.thicknessNode;\n    this.attenuationDistanceNode = source.attenuationDistanceNode;\n    this.attenuationColorNode = source.attenuationColorNode;\n    return super.copy(source);\n  }\n}\nexport default MeshPhysicalNodeMaterial;\naddNodeMaterial('MeshPhysicalNodeMaterial', MeshPhysicalNodeMaterial);","map":{"version":3,"names":["addNodeMaterial","transformedClearcoatNormalView","clearcoat","clearcoatRoughness","sheen","sheenRoughness","iridescence","iridescenceIOR","iridescenceThickness","materialClearcoat","materialClearcoatRoughness","materialClearcoatNormal","materialSheen","materialSheenRoughness","materialIridescence","materialIridescenceIOR","materialIridescenceThickness","float","vec3","PhysicalLightingModel","MeshStandardNodeMaterial","MeshPhysicalMaterial","defaultValues","MeshPhysicalNodeMaterial","constructor","parameters","isMeshPhysicalNodeMaterial","clearcoatNode","clearcoatRoughnessNode","clearcoatNormalNode","sheenNode","sheenRoughnessNode","iridescenceNode","iridescenceIORNode","iridescenceThicknessNode","specularIntensityNode","specularColorNode","transmissionNode","thicknessNode","attenuationDistanceNode","attenuationColorNode","setDefaultValues","setValues","useClearcoat","useIridescence","useSheen","setupLightingModel","setupVariants","builder","assign","setupNormal","copy","source"],"sources":["/Users/vedant/node_modules/three/examples/jsm/nodes/materials/MeshPhysicalNodeMaterial.js"],"sourcesContent":["import { addNodeMaterial } from './NodeMaterial.js';\nimport { transformedClearcoatNormalView } from '../accessors/NormalNode.js';\nimport { clearcoat, clearcoatRoughness, sheen, sheenRoughness, iridescence, iridescenceIOR, iridescenceThickness } from '../core/PropertyNode.js';\nimport { materialClearcoat, materialClearcoatRoughness, materialClearcoatNormal, materialSheen, materialSheenRoughness, materialIridescence, materialIridescenceIOR, materialIridescenceThickness } from '../accessors/MaterialNode.js';\nimport { float, vec3 } from '../shadernode/ShaderNode.js';\nimport PhysicalLightingModel from '../functions/PhysicalLightingModel.js';\nimport MeshStandardNodeMaterial from './MeshStandardNodeMaterial.js';\n\nimport { MeshPhysicalMaterial } from 'three';\n\nconst defaultValues = new MeshPhysicalMaterial();\n\nclass MeshPhysicalNodeMaterial extends MeshStandardNodeMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalNodeMaterial = true;\n\n\t\tthis.clearcoatNode = null;\n\t\tthis.clearcoatRoughnessNode = null;\n\t\tthis.clearcoatNormalNode = null;\n\n\t\tthis.sheenNode = null;\n\t\tthis.sheenRoughnessNode = null;\n\n\t\tthis.iridescenceNode = null;\n\t\tthis.iridescenceIORNode = null;\n\t\tthis.iridescenceThicknessNode = null;\n\n\t\tthis.specularIntensityNode = null;\n\t\tthis.specularColorNode = null;\n\n\t\tthis.transmissionNode = null;\n\t\tthis.thicknessNode = null;\n\t\tthis.attenuationDistanceNode = null;\n\t\tthis.attenuationColorNode = null;\n\n\t\tthis.setDefaultValues( defaultValues );\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget useClearcoat() {\n\n\t\treturn this.clearcoat > 0 || this.clearcoatNode !== null;\n\n\t}\n\n\tget useIridescence() {\n\n\t\treturn this.iridescence > 0 || this.iridescenceNode !== null;\n\n\t}\n\n\tget useSheen() {\n\n\t\treturn this.sheen > 0 || this.sheenNode !== null;\n\n\t}\n\n\tsetupLightingModel( /*builder*/ ) {\n\n\t\treturn new PhysicalLightingModel( this.useClearcoat, this.useSheen, this.useIridescence );\n\n\t}\n\n\tsetupVariants( builder ) {\n\n\t\tsuper.setupVariants( builder );\n\n\t\t// CLEARCOAT\n\n\t\tif ( this.useClearcoat ) {\n\n\t\t\tconst clearcoatNode = this.clearcoatNode ? float( this.clearcoatNode ) : materialClearcoat;\n\t\t\tconst clearcoatRoughnessNode = this.clearcoatRoughnessNode ? float( this.clearcoatRoughnessNode ) : materialClearcoatRoughness;\n\n\t\t\tclearcoat.assign( clearcoatNode );\n\t\t\tclearcoatRoughness.assign( clearcoatRoughnessNode );\n\n\t\t}\n\n\t\t// SHEEN\n\n\t\tif ( this.useSheen ) {\n\n\t\t\tconst sheenNode = this.sheenNode ? vec3( this.sheenNode ) : materialSheen;\n\t\t\tconst sheenRoughnessNode = this.sheenRoughnessNode ? float( this.sheenRoughnessNode ) : materialSheenRoughness;\n\n\t\t\tsheen.assign( sheenNode );\n\t\t\tsheenRoughness.assign( sheenRoughnessNode );\n\n\t\t}\n\n\t\t// IRIDESCENCE\n\n\t\tif ( this.useIridescence ) {\n\n\t\t\tconst iridescenceNode = this.iridescenceNode ? float( this.iridescenceNode ) : materialIridescence;\n\t\t\tconst iridescenceIORNode = this.iridescenceIORNode ? float( this.iridescenceIORNode ) : materialIridescenceIOR;\n\t\t\tconst iridescenceThicknessNode = this.iridescenceThicknessNode ? float( this.iridescenceThicknessNode ) : materialIridescenceThickness;\n\n\t\t\tiridescence.assign( iridescenceNode );\n\t\t\tiridescenceIOR.assign( iridescenceIORNode );\n\t\t\tiridescenceThickness.assign( iridescenceThicknessNode );\n\n\t\t}\n\n\t}\n\n\tsetupNormal( builder ) {\n\n\t\tsuper.setupNormal( builder );\n\n\t\t// CLEARCOAT NORMAL\n\n\t\tconst clearcoatNormalNode = this.clearcoatNormalNode ? vec3( this.clearcoatNormalNode ) : materialClearcoatNormal;\n\n\t\ttransformedClearcoatNormalView.assign( clearcoatNormalNode );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.clearcoatNode = source.clearcoatNode;\n\t\tthis.clearcoatRoughnessNode = source.clearcoatRoughnessNode;\n\t\tthis.clearcoatNormalNode = source.clearcoatNormalNode;\n\n\t\tthis.sheenNode = source.sheenNode;\n\t\tthis.sheenRoughnessNode = source.sheenRoughnessNode;\n\n\t\tthis.iridescenceNode = source.iridescenceNode;\n\t\tthis.iridescenceIORNode = source.iridescenceIORNode;\n\t\tthis.iridescenceThicknessNode = source.iridescenceThicknessNode;\n\n\t\tthis.specularIntensityNode = source.specularIntensityNode;\n\t\tthis.specularColorNode = source.specularColorNode;\n\n\t\tthis.transmissionNode = source.transmissionNode;\n\t\tthis.thicknessNode = source.thicknessNode;\n\t\tthis.attenuationDistanceNode = source.attenuationDistanceNode;\n\t\tthis.attenuationColorNode = source.attenuationColorNode;\n\n\t\treturn super.copy( source );\n\n\t}\n\n}\n\nexport default MeshPhysicalNodeMaterial;\n\naddNodeMaterial( 'MeshPhysicalNodeMaterial', MeshPhysicalNodeMaterial );\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}