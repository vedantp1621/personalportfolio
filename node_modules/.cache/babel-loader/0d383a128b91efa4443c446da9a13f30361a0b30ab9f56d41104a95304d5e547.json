{"ast":null,"code":"import { addNodeClass } from '../core/Node.js';\nimport TempNode from '../core/TempNode.js';\nimport { vectorComponents } from '../core/constants.js';\nclass SetNode extends TempNode {\n  constructor(sourceNode, components, targetNode) {\n    super();\n    this.sourceNode = sourceNode;\n    this.components = components;\n    this.targetNode = targetNode;\n  }\n  getNodeType(builder) {\n    return this.sourceNode.getNodeType(builder);\n  }\n  generate(builder) {\n    const {\n      sourceNode,\n      components,\n      targetNode\n    } = this;\n    const sourceType = this.getNodeType(builder);\n    const targetType = builder.getTypeFromLength(components.length);\n    const targetSnippet = targetNode.build(builder, targetType);\n    const sourceSnippet = sourceNode.build(builder, sourceType);\n    const length = builder.getTypeLength(sourceType);\n    const snippetValues = [];\n    for (let i = 0; i < length; i++) {\n      const component = vectorComponents[i];\n      if (component === components[0]) {\n        snippetValues.push(targetSnippet);\n        i += components.length - 1;\n      } else {\n        snippetValues.push(sourceSnippet + '.' + component);\n      }\n    }\n    return `${builder.getType(sourceType)}( ${snippetValues.join(', ')} )`;\n  }\n}\nexport default SetNode;\naddNodeClass('SetNode', SetNode);","map":{"version":3,"names":["addNodeClass","TempNode","vectorComponents","SetNode","constructor","sourceNode","components","targetNode","getNodeType","builder","generate","sourceType","targetType","getTypeFromLength","length","targetSnippet","build","sourceSnippet","getTypeLength","snippetValues","i","component","push","getType","join"],"sources":["/Users/vedant/node_modules/three/examples/jsm/nodes/utils/SetNode.js"],"sourcesContent":["import { addNodeClass } from '../core/Node.js';\nimport TempNode from '../core/TempNode.js';\nimport { vectorComponents } from '../core/constants.js';\n\nclass SetNode extends TempNode {\n\n\tconstructor( sourceNode, components, targetNode ) {\n\n\t\tsuper();\n\n\t\tthis.sourceNode = sourceNode;\n\t\tthis.components = components;\n\t\tthis.targetNode = targetNode;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.sourceNode.getNodeType( builder );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst { sourceNode, components, targetNode } = this;\n\n\t\tconst sourceType = this.getNodeType( builder );\n\t\tconst targetType = builder.getTypeFromLength( components.length );\n\n\t\tconst targetSnippet = targetNode.build( builder, targetType );\n\t\tconst sourceSnippet = sourceNode.build( builder, sourceType );\n\n\t\tconst length = builder.getTypeLength( sourceType );\n\t\tconst snippetValues = [];\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tconst component = vectorComponents[ i ];\n\n\t\t\tif ( component === components[ 0 ] ) {\n\n\t\t\t\tsnippetValues.push( targetSnippet );\n\n\t\t\t\ti += components.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tsnippetValues.push( sourceSnippet + '.' + component );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn `${ builder.getType( sourceType ) }( ${ snippetValues.join( ', ' ) } )`;\n\n\t}\n\n}\n\nexport default SetNode;\n\naddNodeClass( 'SetNode', SetNode );\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,SAASC,gBAAgB,QAAQ,sBAAsB;AAEvD,MAAMC,OAAO,SAASF,QAAQ,CAAC;EAE9BG,WAAWA,CAAEC,UAAU,EAAEC,UAAU,EAAEC,UAAU,EAAG;IAEjD,KAAK,CAAC,CAAC;IAEP,IAAI,CAACF,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,UAAU,GAAGA,UAAU;EAE7B;EAEAC,WAAWA,CAAEC,OAAO,EAAG;IAEtB,OAAO,IAAI,CAACJ,UAAU,CAACG,WAAW,CAAEC,OAAQ,CAAC;EAE9C;EAEAC,QAAQA,CAAED,OAAO,EAAG;IAEnB,MAAM;MAAEJ,UAAU;MAAEC,UAAU;MAAEC;IAAW,CAAC,GAAG,IAAI;IAEnD,MAAMI,UAAU,GAAG,IAAI,CAACH,WAAW,CAAEC,OAAQ,CAAC;IAC9C,MAAMG,UAAU,GAAGH,OAAO,CAACI,iBAAiB,CAAEP,UAAU,CAACQ,MAAO,CAAC;IAEjE,MAAMC,aAAa,GAAGR,UAAU,CAACS,KAAK,CAAEP,OAAO,EAAEG,UAAW,CAAC;IAC7D,MAAMK,aAAa,GAAGZ,UAAU,CAACW,KAAK,CAAEP,OAAO,EAAEE,UAAW,CAAC;IAE7D,MAAMG,MAAM,GAAGL,OAAO,CAACS,aAAa,CAAEP,UAAW,CAAC;IAClD,MAAMQ,aAAa,GAAG,EAAE;IAExB,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,MAAM,EAAEM,CAAC,EAAG,EAAG;MAEnC,MAAMC,SAAS,GAAGnB,gBAAgB,CAAEkB,CAAC,CAAE;MAEvC,IAAKC,SAAS,KAAKf,UAAU,CAAE,CAAC,CAAE,EAAG;QAEpCa,aAAa,CAACG,IAAI,CAAEP,aAAc,CAAC;QAEnCK,CAAC,IAAId,UAAU,CAACQ,MAAM,GAAG,CAAC;MAE3B,CAAC,MAAM;QAENK,aAAa,CAACG,IAAI,CAAEL,aAAa,GAAG,GAAG,GAAGI,SAAU,CAAC;MAEtD;IAED;IAEA,OAAQ,GAAGZ,OAAO,CAACc,OAAO,CAAEZ,UAAW,CAAG,KAAKQ,aAAa,CAACK,IAAI,CAAE,IAAK,CAAG,IAAG;EAE/E;AAED;AAEA,eAAerB,OAAO;AAEtBH,YAAY,CAAE,SAAS,EAAEG,OAAQ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}