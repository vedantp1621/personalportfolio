{"ast":null,"code":"import Node, { addNodeClass } from './Node.js';\nimport StructTypeNode from './StructTypeNode.js';\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\nclass OutputStructNode extends Node {\n  constructor() {\n    super();\n    this.isOutputStructNode = true;\n    for (var _len = arguments.length, members = new Array(_len), _key = 0; _key < _len; _key++) {\n      members[_key] = arguments[_key];\n    }\n    this.members = members;\n  }\n  setup(builder) {\n    super.setup(builder);\n    const members = this.members;\n    const types = [];\n    for (let i = 0; i < members.length; i++) {\n      types.push(members[i].getNodeType(builder));\n    }\n    this.nodeType = builder.getStructTypeFromNode(new StructTypeNode(types)).name;\n  }\n  generate(builder, output) {\n    const nodeVar = builder.getVarFromNode(this);\n    nodeVar.isOutputStructVar = true;\n    const propertyName = builder.getPropertyName(nodeVar);\n    const members = this.members;\n    const structPrefix = propertyName !== '' ? propertyName + '.' : '';\n    for (let i = 0; i < members.length; i++) {\n      const snippet = members[i].build(builder, output);\n      builder.addLineFlowCode(`${structPrefix}m${i} = ${snippet}`);\n    }\n    return propertyName;\n  }\n}\nexport default OutputStructNode;\nexport const outputStruct = nodeProxy(OutputStructNode);\naddNodeClass('OutputStructNode', OutputStructNode);","map":{"version":3,"names":["Node","addNodeClass","StructTypeNode","nodeProxy","OutputStructNode","constructor","isOutputStructNode","_len","arguments","length","members","Array","_key","setup","builder","types","i","push","getNodeType","nodeType","getStructTypeFromNode","name","generate","output","nodeVar","getVarFromNode","isOutputStructVar","propertyName","getPropertyName","structPrefix","snippet","build","addLineFlowCode","outputStruct"],"sources":["/Users/vedant/node_modules/three/examples/jsm/nodes/core/OutputStructNode.js"],"sourcesContent":["import Node, { addNodeClass } from './Node.js';\nimport StructTypeNode from './StructTypeNode.js';\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\n\nclass OutputStructNode extends Node {\n\n\tconstructor( ...members ) {\n\n\t\tsuper();\n\n\t\tthis.isOutputStructNode = true;\n\t\tthis.members = members;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tsuper.setup( builder );\n\n\t\tconst members = this.members;\n\t\tconst types = [];\n\n\t\tfor ( let i = 0; i < members.length; i ++ ) {\n\n\t\t\ttypes.push( members[ i ].getNodeType( builder ) );\n\n\t\t}\n\n\t\tthis.nodeType = builder.getStructTypeFromNode( new StructTypeNode( types ) ).name;\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst nodeVar = builder.getVarFromNode( this );\n\t\tnodeVar.isOutputStructVar = true;\n\n\t\tconst propertyName = builder.getPropertyName( nodeVar );\n\n\t\tconst members = this.members;\n\n\t\tconst structPrefix = propertyName !== '' ? propertyName + '.' : '';\n\n\t\tfor ( let i = 0; i < members.length; i ++ ) {\n\n\t\t\tconst snippet = members[ i ].build( builder, output );\n\n\t\t\tbuilder.addLineFlowCode( `${ structPrefix }m${ i } = ${ snippet }` );\n\n\t\t}\n\n\t\treturn propertyName;\n\n\t}\n\n}\n\nexport default OutputStructNode;\n\nexport const outputStruct = nodeProxy( OutputStructNode );\n\naddNodeClass( 'OutputStructNode', OutputStructNode );\n"],"mappings":"AAAA,OAAOA,IAAI,IAAIC,YAAY,QAAQ,WAAW;AAC9C,OAAOC,cAAc,MAAM,qBAAqB;AAChD,SAASC,SAAS,QAAQ,6BAA6B;AAEvD,MAAMC,gBAAgB,SAASJ,IAAI,CAAC;EAEnCK,WAAWA,CAAA,EAAe;IAEzB,KAAK,CAAC,CAAC;IAEP,IAAI,CAACC,kBAAkB,GAAG,IAAI;IAAC,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAJhBC,OAAO,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAPF,OAAO,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IAKtB,IAAI,CAACF,OAAO,GAAGA,OAAO;EAEvB;EAEAG,KAAKA,CAAEC,OAAO,EAAG;IAEhB,KAAK,CAACD,KAAK,CAAEC,OAAQ,CAAC;IAEtB,MAAMJ,OAAO,GAAG,IAAI,CAACA,OAAO;IAC5B,MAAMK,KAAK,GAAG,EAAE;IAEhB,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,OAAO,CAACD,MAAM,EAAEO,CAAC,EAAG,EAAG;MAE3CD,KAAK,CAACE,IAAI,CAAEP,OAAO,CAAEM,CAAC,CAAE,CAACE,WAAW,CAAEJ,OAAQ,CAAE,CAAC;IAElD;IAEA,IAAI,CAACK,QAAQ,GAAGL,OAAO,CAACM,qBAAqB,CAAE,IAAIlB,cAAc,CAAEa,KAAM,CAAE,CAAC,CAACM,IAAI;EAElF;EAEAC,QAAQA,CAAER,OAAO,EAAES,MAAM,EAAG;IAE3B,MAAMC,OAAO,GAAGV,OAAO,CAACW,cAAc,CAAE,IAAK,CAAC;IAC9CD,OAAO,CAACE,iBAAiB,GAAG,IAAI;IAEhC,MAAMC,YAAY,GAAGb,OAAO,CAACc,eAAe,CAAEJ,OAAQ,CAAC;IAEvD,MAAMd,OAAO,GAAG,IAAI,CAACA,OAAO;IAE5B,MAAMmB,YAAY,GAAGF,YAAY,KAAK,EAAE,GAAGA,YAAY,GAAG,GAAG,GAAG,EAAE;IAElE,KAAM,IAAIX,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,OAAO,CAACD,MAAM,EAAEO,CAAC,EAAG,EAAG;MAE3C,MAAMc,OAAO,GAAGpB,OAAO,CAAEM,CAAC,CAAE,CAACe,KAAK,CAAEjB,OAAO,EAAES,MAAO,CAAC;MAErDT,OAAO,CAACkB,eAAe,CAAG,GAAGH,YAAc,IAAIb,CAAG,MAAMc,OAAS,EAAE,CAAC;IAErE;IAEA,OAAOH,YAAY;EAEpB;AAED;AAEA,eAAevB,gBAAgB;AAE/B,OAAO,MAAM6B,YAAY,GAAG9B,SAAS,CAAEC,gBAAiB,CAAC;AAEzDH,YAAY,CAAE,kBAAkB,EAAEG,gBAAiB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}