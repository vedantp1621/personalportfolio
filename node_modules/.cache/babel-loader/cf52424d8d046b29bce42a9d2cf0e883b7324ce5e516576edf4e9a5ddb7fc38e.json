{"ast":null,"code":"import Node from '../core/Node.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\nclass TextureSizeNode extends Node {\n  constructor(textureNode) {\n    let levelNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    super('uvec2');\n    this.isTextureSizeNode = true;\n    this.textureNode = textureNode;\n    this.levelNode = levelNode;\n  }\n  generate(builder, output) {\n    const textureProperty = this.textureNode.build(builder, 'property');\n    const levelNode = this.levelNode.build(builder, 'int');\n    return builder.format(`${builder.getMethod('textureDimensions')}( ${textureProperty}, ${levelNode} )`, this.getNodeType(builder), output);\n  }\n}\nexport default TextureSizeNode;\nexport const textureSize = nodeProxy(TextureSizeNode);\naddNodeElement('textureSize', textureSize);\naddNodeClass('TextureSizeNode', TextureSizeNode);","map":{"version":3,"names":["Node","addNodeClass","addNodeElement","nodeProxy","TextureSizeNode","constructor","textureNode","levelNode","arguments","length","undefined","isTextureSizeNode","generate","builder","output","textureProperty","build","format","getMethod","getNodeType","textureSize"],"sources":["/Users/vedant/node_modules/three/examples/jsm/nodes/accessors/TextureSizeNode.js"],"sourcesContent":["import Node from '../core/Node.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\n\nclass TextureSizeNode extends Node {\n\n\tconstructor( textureNode, levelNode = null ) {\n\n\t\tsuper( 'uvec2' );\n\n\t\tthis.isTextureSizeNode = true;\n\n\t\tthis.textureNode = textureNode;\n\t\tthis.levelNode = levelNode;\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst textureProperty = this.textureNode.build( builder, 'property' );\n\t\tconst levelNode = this.levelNode.build( builder, 'int' );\n\n\t\treturn builder.format( `${builder.getMethod( 'textureDimensions' )}( ${textureProperty}, ${levelNode} )`, this.getNodeType( builder ), output );\n\n\t}\n\n}\n\nexport default TextureSizeNode;\n\nexport const textureSize = nodeProxy( TextureSizeNode );\n\naddNodeElement( 'textureSize', textureSize );\n\naddNodeClass( 'TextureSizeNode', TextureSizeNode );\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,iBAAiB;AAClC,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,cAAc,EAAEC,SAAS,QAAQ,6BAA6B;AAEvE,MAAMC,eAAe,SAASJ,IAAI,CAAC;EAElCK,WAAWA,CAAEC,WAAW,EAAqB;IAAA,IAAnBC,SAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;IAEzC,KAAK,CAAE,OAAQ,CAAC;IAEhB,IAAI,CAACG,iBAAiB,GAAG,IAAI;IAE7B,IAAI,CAACL,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,SAAS,GAAGA,SAAS;EAE3B;EAEAK,QAAQA,CAAEC,OAAO,EAAEC,MAAM,EAAG;IAE3B,MAAMC,eAAe,GAAG,IAAI,CAACT,WAAW,CAACU,KAAK,CAAEH,OAAO,EAAE,UAAW,CAAC;IACrE,MAAMN,SAAS,GAAG,IAAI,CAACA,SAAS,CAACS,KAAK,CAAEH,OAAO,EAAE,KAAM,CAAC;IAExD,OAAOA,OAAO,CAACI,MAAM,CAAG,GAAEJ,OAAO,CAACK,SAAS,CAAE,mBAAoB,CAAE,KAAIH,eAAgB,KAAIR,SAAU,IAAG,EAAE,IAAI,CAACY,WAAW,CAAEN,OAAQ,CAAC,EAAEC,MAAO,CAAC;EAEhJ;AAED;AAEA,eAAeV,eAAe;AAE9B,OAAO,MAAMgB,WAAW,GAAGjB,SAAS,CAAEC,eAAgB,CAAC;AAEvDF,cAAc,CAAE,aAAa,EAAEkB,WAAY,CAAC;AAE5CnB,YAAY,CAAE,iBAAiB,EAAEG,eAAgB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}