{"ast":null,"code":"import { addNodeClass } from '../core/Node.js';\nimport AttributeNode from '../core/AttributeNode.js';\nimport { nodeObject } from '../shadernode/ShaderNode.js';\nimport { Vector4 } from 'three';\nclass VertexColorNode extends AttributeNode {\n  constructor() {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    super(null, 'vec4');\n    this.isVertexColorNode = true;\n    this.index = index;\n  }\n  getAttributeName( /*builder*/\n  ) {\n    const index = this.index;\n    return 'color' + (index > 0 ? index : '');\n  }\n  generate(builder) {\n    const attributeName = this.getAttributeName(builder);\n    const geometryAttribute = builder.hasGeometryAttribute(attributeName);\n    let result;\n    if (geometryAttribute === true) {\n      result = super.generate(builder);\n    } else {\n      // Vertex color fallback should be white\n      result = builder.generateConst(this.nodeType, new Vector4(1, 1, 1, 1));\n    }\n    return result;\n  }\n  serialize(data) {\n    super.serialize(data);\n    data.index = this.index;\n  }\n  deserialize(data) {\n    super.deserialize(data);\n    this.index = data.index;\n  }\n}\nexport default VertexColorNode;\nexport const vertexColor = function () {\n  for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n    params[_key] = arguments[_key];\n  }\n  return nodeObject(new VertexColorNode(...params));\n};\naddNodeClass('VertexColorNode', VertexColorNode);","map":{"version":3,"names":["addNodeClass","AttributeNode","nodeObject","Vector4","VertexColorNode","constructor","index","arguments","length","undefined","isVertexColorNode","getAttributeName","generate","builder","attributeName","geometryAttribute","hasGeometryAttribute","result","generateConst","nodeType","serialize","data","deserialize","vertexColor","_len","params","Array","_key"],"sources":["/Users/vedant/node_modules/three/examples/jsm/nodes/accessors/VertexColorNode.js"],"sourcesContent":["import { addNodeClass } from '../core/Node.js';\nimport AttributeNode from '../core/AttributeNode.js';\nimport { nodeObject } from '../shadernode/ShaderNode.js';\nimport { Vector4 } from 'three';\n\nclass VertexColorNode extends AttributeNode {\n\n\tconstructor( index = 0 ) {\n\n\t\tsuper( null, 'vec4' );\n\n\t\tthis.isVertexColorNode = true;\n\n\t\tthis.index = index;\n\n\t}\n\n\tgetAttributeName( /*builder*/ ) {\n\n\t\tconst index = this.index;\n\n\t\treturn 'color' + ( index > 0 ? index : '' );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst attributeName = this.getAttributeName( builder );\n\t\tconst geometryAttribute = builder.hasGeometryAttribute( attributeName );\n\n\t\tlet result;\n\n\t\tif ( geometryAttribute === true ) {\n\n\t\t\tresult = super.generate( builder );\n\n\t\t} else {\n\n\t\t\t// Vertex color fallback should be white\n\t\t\tresult = builder.generateConst( this.nodeType, new Vector4( 1, 1, 1, 1 ) );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.index = this.index;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.index = data.index;\n\n\t}\n\n}\n\nexport default VertexColorNode;\n\nexport const vertexColor = ( ...params ) => nodeObject( new VertexColorNode( ...params ) );\n\naddNodeClass( 'VertexColorNode', VertexColorNode );\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,OAAOC,aAAa,MAAM,0BAA0B;AACpD,SAASC,UAAU,QAAQ,6BAA6B;AACxD,SAASC,OAAO,QAAQ,OAAO;AAE/B,MAAMC,eAAe,SAASH,aAAa,CAAC;EAE3CI,WAAWA,CAAA,EAAc;IAAA,IAAZC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;IAErB,KAAK,CAAE,IAAI,EAAE,MAAO,CAAC;IAErB,IAAI,CAACG,iBAAiB,GAAG,IAAI;IAE7B,IAAI,CAACJ,KAAK,GAAGA,KAAK;EAEnB;EAEAK,gBAAgBA,CAAA,CAAE;EAAA,EAAc;IAE/B,MAAML,KAAK,GAAG,IAAI,CAACA,KAAK;IAExB,OAAO,OAAO,IAAKA,KAAK,GAAG,CAAC,GAAGA,KAAK,GAAG,EAAE,CAAE;EAE5C;EAEAM,QAAQA,CAAEC,OAAO,EAAG;IAEnB,MAAMC,aAAa,GAAG,IAAI,CAACH,gBAAgB,CAAEE,OAAQ,CAAC;IACtD,MAAME,iBAAiB,GAAGF,OAAO,CAACG,oBAAoB,CAAEF,aAAc,CAAC;IAEvE,IAAIG,MAAM;IAEV,IAAKF,iBAAiB,KAAK,IAAI,EAAG;MAEjCE,MAAM,GAAG,KAAK,CAACL,QAAQ,CAAEC,OAAQ,CAAC;IAEnC,CAAC,MAAM;MAEN;MACAI,MAAM,GAAGJ,OAAO,CAACK,aAAa,CAAE,IAAI,CAACC,QAAQ,EAAE,IAAIhB,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC;IAE3E;IAEA,OAAOc,MAAM;EAEd;EAEAG,SAASA,CAAEC,IAAI,EAAG;IAEjB,KAAK,CAACD,SAAS,CAAEC,IAAK,CAAC;IAEvBA,IAAI,CAACf,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB;EAEAgB,WAAWA,CAAED,IAAI,EAAG;IAEnB,KAAK,CAACC,WAAW,CAAED,IAAK,CAAC;IAEzB,IAAI,CAACf,KAAK,GAAGe,IAAI,CAACf,KAAK;EAExB;AAED;AAEA,eAAeF,eAAe;AAE9B,OAAO,MAAMmB,WAAW,GAAG,SAAAA,CAAA;EAAA,SAAAC,IAAA,GAAAjB,SAAA,CAAAC,MAAA,EAAKiB,MAAM,OAAAC,KAAA,CAAAF,IAAA,GAAAG,IAAA,MAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA;IAANF,MAAM,CAAAE,IAAA,IAAApB,SAAA,CAAAoB,IAAA;EAAA;EAAA,OAAMzB,UAAU,CAAE,IAAIE,eAAe,CAAE,GAAGqB,MAAO,CAAE,CAAC;AAAA;AAE1FzB,YAAY,CAAE,iBAAiB,EAAEI,eAAgB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}