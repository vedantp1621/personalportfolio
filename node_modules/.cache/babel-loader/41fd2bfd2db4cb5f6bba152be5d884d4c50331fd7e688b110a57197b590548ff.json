{"ast":null,"code":"import _classCallCheck from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport BRDF_Lambert from './BSDF/BRDF_Lambert.js';\nimport BRDF_GGX from './BSDF/BRDF_GGX.js';\nimport DFGApprox from './BSDF/DFGApprox.js';\nimport EnvironmentBRDF from './BSDF/EnvironmentBRDF.js';\nimport F_Schlick from './BSDF/F_Schlick.js';\nimport Schlick_to_F0 from './BSDF/Schlick_to_F0.js';\nimport BRDF_Sheen from './BSDF/BRDF_Sheen.js';\nimport LightingModel from '../core/LightingModel.js';\nimport { diffuseColor, specularColor, roughness, clearcoat, clearcoatRoughness, sheen, sheenRoughness, iridescence, iridescenceIOR, iridescenceThickness } from '../core/PropertyNode.js';\nimport { transformedNormalView, transformedClearcoatNormalView } from '../accessors/NormalNode.js';\nimport { positionViewDirection } from '../accessors/PositionNode.js';\nimport { tslFn, float, vec3, mat3 } from '../shadernode/ShaderNode.js';\nimport { cond } from '../math/CondNode.js';\nimport { mix, smoothstep } from '../math/MathNode.js';\n\n//\n// Iridescence\n//\n\n// XYZ to linear-sRGB color space\nvar XYZ_TO_REC709 = mat3(3.2404542, -0.9692660, 0.0556434, -1.5371385, 1.8760108, -0.2040259, -0.4985314, 0.0415560, 1.0572252);\n\n// Assume air interface for top\n// Note: We don't handle the case fresnel0 == 1\nvar Fresnel0ToIor = function Fresnel0ToIor(fresnel0) {\n  var sqrtF0 = fresnel0.sqrt();\n  return vec3(1.0).add(sqrtF0).div(vec3(1.0).sub(sqrtF0));\n};\n\n// ior is a value between 1.0 and 3.0. 1.0 is air interface\nvar IorToFresnel0 = function IorToFresnel0(transmittedIor, incidentIor) {\n  return transmittedIor.sub(incidentIor).div(transmittedIor.add(incidentIor)).pow2();\n};\n\n// Fresnel equations for dielectric/dielectric interfaces.\n// Ref: https://belcour.github.io/blog/research/2017/05/01/brdf-thin-film.html\n// Evaluation XYZ sensitivity curves in Fourier space\nvar evalSensitivity = function evalSensitivity(OPD, shift) {\n  var phase = OPD.mul(2.0 * Math.PI * 1.0e-9);\n  var val = vec3(5.4856e-13, 4.4201e-13, 5.2481e-13);\n  var pos = vec3(1.6810e+06, 1.7953e+06, 2.2084e+06);\n  var VAR = vec3(4.3278e+09, 9.3046e+09, 6.6121e+09);\n  var x = float(9.7470e-14 * Math.sqrt(2.0 * Math.PI * 4.5282e+09)).mul(phase.mul(2.2399e+06).add(shift.x).cos()).mul(phase.pow2().mul(-4.5282e+09).exp());\n  var xyz = val.mul(VAR.mul(2.0 * Math.PI).sqrt()).mul(pos.mul(phase).add(shift).cos()).mul(phase.pow2().negate().mul(VAR).exp());\n  xyz = vec3(xyz.x.add(x), xyz.y, xyz.z).div(1.0685e-7);\n  var rgb = XYZ_TO_REC709.mul(xyz);\n  return rgb;\n};\nvar evalIridescence = tslFn(function (_ref) {\n  var outsideIOR = _ref.outsideIOR,\n    eta2 = _ref.eta2,\n    cosTheta1 = _ref.cosTheta1,\n    thinFilmThickness = _ref.thinFilmThickness,\n    baseF0 = _ref.baseF0;\n  // Force iridescenceIOR -> outsideIOR when thinFilmThickness -> 0.0\n  var iridescenceIOR = mix(outsideIOR, eta2, smoothstep(0.0, 0.03, thinFilmThickness));\n  // Evaluate the cosTheta on the base layer (Snell law)\n  var sinTheta2Sq = outsideIOR.div(iridescenceIOR).pow2().mul(float(1).sub(cosTheta1.pow2()));\n\n  // Handle TIR:\n  var cosTheta2Sq = float(1).sub(sinTheta2Sq);\n  /*if ( cosTheta2Sq < 0.0 ) {\n  \t\t\treturn vec3( 1.0 );\n  \t}*/\n\n  var cosTheta2 = cosTheta2Sq.sqrt();\n\n  // First interface\n  var R0 = IorToFresnel0(iridescenceIOR, outsideIOR);\n  var R12 = F_Schlick({\n    f0: R0,\n    f90: 1.0,\n    dotVH: cosTheta1\n  });\n  //const R21 = R12;\n  var T121 = R12.oneMinus();\n  var phi12 = iridescenceIOR.lessThan(outsideIOR).cond(Math.PI, 0.0);\n  var phi21 = float(Math.PI).sub(phi12);\n\n  // Second interface\n  var baseIOR = Fresnel0ToIor(baseF0.clamp(0.0, 0.9999)); // guard against 1.0\n  var R1 = IorToFresnel0(baseIOR, iridescenceIOR.vec3());\n  var R23 = F_Schlick({\n    f0: R1,\n    f90: 1.0,\n    dotVH: cosTheta2\n  });\n  var phi23 = vec3(baseIOR.x.lessThan(iridescenceIOR).cond(Math.PI, 0.0), baseIOR.y.lessThan(iridescenceIOR).cond(Math.PI, 0.0), baseIOR.z.lessThan(iridescenceIOR).cond(Math.PI, 0.0));\n\n  // Phase shift\n  var OPD = iridescenceIOR.mul(thinFilmThickness, cosTheta2, 2.0);\n  var phi = vec3(phi21).add(phi23);\n\n  // Compound terms\n  var R123 = R12.mul(R23).clamp(1e-5, 0.9999);\n  var r123 = R123.sqrt();\n  var Rs = T121.pow2().mul(R23).div(vec3(1.0).sub(R123));\n\n  // Reflectance term for m = 0 (DC term amplitude)\n  var C0 = R12.add(Rs);\n  var I = C0;\n\n  // Reflectance term for m > 0 (pairs of diracs)\n  var Cm = Rs.sub(T121);\n  for (var m = 1; m <= 2; ++m) {\n    Cm = Cm.mul(r123);\n    var Sm = evalSensitivity(float(m).mul(OPD), float(m).mul(phi)).mul(2.0);\n    I = I.add(Cm.mul(Sm));\n  }\n\n  // Since out of gamut colors might be produced, negative color values are clamped to 0.\n  return I.max(vec3(0.0));\n}).setLayout({\n  name: 'evalIridescence',\n  type: 'vec3',\n  inputs: [{\n    name: 'outsideIOR',\n    type: 'float'\n  }, {\n    name: 'eta2',\n    type: 'float'\n  }, {\n    name: 'cosTheta1',\n    type: 'float'\n  }, {\n    name: 'thinFilmThickness',\n    type: 'float'\n  }, {\n    name: 'baseF0',\n    type: 'vec3'\n  }]\n});\n\n//\n//\tSheen\n//\n\n// This is a curve-fit approxmation to the \"Charlie sheen\" BRDF integrated over the hemisphere from\n// Estevez and Kulla 2017, \"Production Friendly Microfacet Sheen BRDF\". The analysis can be found\n// in the Sheen section of https://drive.google.com/file/d/1T0D1VSyR4AllqIJTQAraEIzjlb5h4FKH/view?usp=sharing\nvar IBLSheenBRDF = tslFn(function (_ref2) {\n  var normal = _ref2.normal,\n    viewDir = _ref2.viewDir,\n    roughness = _ref2.roughness;\n  var dotNV = normal.dot(viewDir).saturate();\n  var r2 = roughness.pow2();\n  var a = cond(roughness.lessThan(0.25), float(-339.2).mul(r2).add(float(161.4).mul(roughness)).sub(25.9), float(-8.48).mul(r2).add(float(14.3).mul(roughness)).sub(9.95));\n  var b = cond(roughness.lessThan(0.25), float(44.0).mul(r2).sub(float(23.7).mul(roughness)).add(3.26), float(1.97).mul(r2).sub(float(3.27).mul(roughness)).add(0.72));\n  var DG = cond(roughness.lessThan(0.25), 0.0, float(0.1).mul(roughness).sub(0.025)).add(a.mul(dotNV).add(b).exp());\n  return DG.mul(1.0 / Math.PI).saturate();\n});\nvar clearcoatF0 = vec3(0.04);\nvar clearcoatF90 = vec3(1);\n\n//\nvar PhysicalLightingModel = /*#__PURE__*/function (_LightingModel) {\n  _inherits(PhysicalLightingModel, _LightingModel);\n  var _super = _createSuper(PhysicalLightingModel);\n  function PhysicalLightingModel() {\n    var _this;\n    var clearcoat = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var sheen = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var iridescence = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    _classCallCheck(this, PhysicalLightingModel);\n    _this = _super.call(this);\n    _this.clearcoat = clearcoat;\n    _this.sheen = sheen;\n    _this.iridescence = iridescence;\n    _this.clearcoatRadiance = null;\n    _this.clearcoatSpecularDirect = null;\n    _this.clearcoatSpecularIndirect = null;\n    _this.sheenSpecularDirect = null;\n    _this.sheenSpecularIndirect = null;\n    _this.iridescenceFresnel = null;\n    _this.iridescenceF0 = null;\n    return _this;\n  }\n  _createClass(PhysicalLightingModel, [{\n    key: \"start\",\n    value: function start( /*context*/\n    ) {\n      if (this.clearcoat === true) {\n        this.clearcoatRadiance = vec3().temp('clearcoatRadiance');\n        this.clearcoatSpecularDirect = vec3().temp('clearcoatSpecularDirect');\n        this.clearcoatSpecularIndirect = vec3().temp('clearcoatSpecularIndirect');\n      }\n      if (this.sheen === true) {\n        this.sheenSpecularDirect = vec3().temp('sheenSpecularDirect');\n        this.sheenSpecularIndirect = vec3().temp('sheenSpecularIndirect');\n      }\n      if (this.iridescence === true) {\n        var dotNVi = transformedNormalView.dot(positionViewDirection).clamp();\n        this.iridescenceFresnel = evalIridescence({\n          outsideIOR: float(1.0),\n          eta2: iridescenceIOR,\n          cosTheta1: dotNVi,\n          thinFilmThickness: iridescenceThickness,\n          baseF0: specularColor\n        });\n        this.iridescenceF0 = Schlick_to_F0({\n          f: this.iridescenceFresnel,\n          f90: 1.0,\n          dotVH: dotNVi\n        });\n      }\n    }\n\n    // Fdez-AgÃ¼era's \"Multiple-Scattering Microfacet Model for Real-Time Image Based Lighting\"\n    // Approximates multiscattering in order to preserve energy.\n    // http://www.jcgt.org/published/0008/01/03/\n  }, {\n    key: \"computeMultiscattering\",\n    value: function computeMultiscattering(singleScatter, multiScatter) {\n      var specularF90 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : float(1);\n      var dotNV = transformedNormalView.dot(positionViewDirection).clamp(); // @ TODO: Move to core dotNV\n\n      var fab = DFGApprox({\n        roughness: roughness,\n        dotNV: dotNV\n      });\n      var Fr = this.iridescenceF0 ? iridescence.mix(specularColor, this.iridescenceF0) : specularColor;\n      var FssEss = Fr.mul(fab.x).add(specularF90.mul(fab.y));\n      var Ess = fab.x.add(fab.y);\n      var Ems = Ess.oneMinus();\n      var Favg = specularColor.add(specularColor.oneMinus().mul(0.047619)); // 1/21\n      var Fms = FssEss.mul(Favg).div(Ems.mul(Favg).oneMinus());\n      singleScatter.addAssign(FssEss);\n      multiScatter.addAssign(Fms.mul(Ems));\n    }\n  }, {\n    key: \"direct\",\n    value: function direct(_ref3) {\n      var lightDirection = _ref3.lightDirection,\n        lightColor = _ref3.lightColor,\n        reflectedLight = _ref3.reflectedLight;\n      var dotNL = transformedNormalView.dot(lightDirection).clamp();\n      var irradiance = dotNL.mul(lightColor);\n      if (this.sheen === true) {\n        this.sheenSpecularDirect.addAssign(irradiance.mul(BRDF_Sheen({\n          lightDirection: lightDirection\n        })));\n      }\n      if (this.clearcoat === true) {\n        var dotNLcc = transformedClearcoatNormalView.dot(lightDirection).clamp();\n        var ccIrradiance = dotNLcc.mul(lightColor);\n        this.clearcoatSpecularDirect.addAssign(ccIrradiance.mul(BRDF_GGX({\n          lightDirection: lightDirection,\n          f0: clearcoatF0,\n          f90: clearcoatF90,\n          roughness: clearcoatRoughness,\n          normalView: transformedClearcoatNormalView\n        })));\n      }\n      reflectedLight.directDiffuse.addAssign(irradiance.mul(BRDF_Lambert({\n        diffuseColor: diffuseColor.rgb\n      })));\n      reflectedLight.directSpecular.addAssign(irradiance.mul(BRDF_GGX({\n        lightDirection: lightDirection,\n        f0: specularColor,\n        f90: 1,\n        roughness: roughness,\n        iridescence: this.iridescence,\n        iridescenceFresnel: this.iridescenceFresnel\n      })));\n    }\n  }, {\n    key: \"indirectDiffuse\",\n    value: function indirectDiffuse(_ref4) {\n      var irradiance = _ref4.irradiance,\n        reflectedLight = _ref4.reflectedLight;\n      reflectedLight.indirectDiffuse.addAssign(irradiance.mul(BRDF_Lambert({\n        diffuseColor: diffuseColor\n      })));\n    }\n  }, {\n    key: \"indirectSpecular\",\n    value: function indirectSpecular(_ref5) {\n      var radiance = _ref5.radiance,\n        iblIrradiance = _ref5.iblIrradiance,\n        reflectedLight = _ref5.reflectedLight;\n      if (this.sheen === true) {\n        this.sheenSpecularIndirect.addAssign(iblIrradiance.mul(sheen, IBLSheenBRDF({\n          normal: transformedNormalView,\n          viewDir: positionViewDirection,\n          roughness: sheenRoughness\n        })));\n      }\n      if (this.clearcoat === true) {\n        var dotNVcc = transformedClearcoatNormalView.dot(positionViewDirection).clamp();\n        var clearcoatEnv = EnvironmentBRDF({\n          dotNV: dotNVcc,\n          specularColor: clearcoatF0,\n          specularF90: clearcoatF90,\n          roughness: clearcoatRoughness\n        });\n        this.clearcoatSpecularIndirect.addAssign(this.clearcoatRadiance.mul(clearcoatEnv));\n      }\n\n      // Both indirect specular and indirect diffuse light accumulate here\n\n      var singleScattering = vec3().temp('singleScattering');\n      var multiScattering = vec3().temp('multiScattering');\n      var cosineWeightedIrradiance = iblIrradiance.mul(1 / Math.PI);\n      this.computeMultiscattering(singleScattering, multiScattering);\n      var totalScattering = singleScattering.add(multiScattering);\n      var diffuse = diffuseColor.mul(totalScattering.r.max(totalScattering.g).max(totalScattering.b).oneMinus());\n      reflectedLight.indirectSpecular.addAssign(radiance.mul(singleScattering));\n      reflectedLight.indirectSpecular.addAssign(multiScattering.mul(cosineWeightedIrradiance));\n      reflectedLight.indirectDiffuse.addAssign(diffuse.mul(cosineWeightedIrradiance));\n    }\n  }, {\n    key: \"ambientOcclusion\",\n    value: function ambientOcclusion(_ref6) {\n      var _ambientOcclusion = _ref6.ambientOcclusion,\n        reflectedLight = _ref6.reflectedLight;\n      var dotNV = transformedNormalView.dot(positionViewDirection).clamp(); // @ TODO: Move to core dotNV\n\n      var aoNV = dotNV.add(_ambientOcclusion);\n      var aoExp = roughness.mul(-16.0).oneMinus().negate().exp2();\n      var aoNode = _ambientOcclusion.sub(aoNV.pow(aoExp).oneMinus()).clamp();\n      if (this.clearcoat === true) {\n        this.clearcoatSpecularIndirect.mulAssign(_ambientOcclusion);\n      }\n      if (this.sheen === true) {\n        this.sheenSpecularIndirect.mulAssign(_ambientOcclusion);\n      }\n      reflectedLight.indirectDiffuse.mulAssign(_ambientOcclusion);\n      reflectedLight.indirectSpecular.mulAssign(aoNode);\n    }\n  }, {\n    key: \"finish\",\n    value: function finish(context) {\n      var outgoingLight = context.outgoingLight;\n      if (this.clearcoat === true) {\n        var dotNVcc = transformedClearcoatNormalView.dot(positionViewDirection).clamp();\n        var Fcc = F_Schlick({\n          dotVH: dotNVcc,\n          f0: clearcoatF0,\n          f90: clearcoatF90\n        });\n        var clearcoatLight = outgoingLight.mul(clearcoat.mul(Fcc).oneMinus()).add(this.clearcoatSpecularDirect.add(this.clearcoatSpecularIndirect).mul(clearcoat));\n        outgoingLight.assign(clearcoatLight);\n      }\n      if (this.sheen === true) {\n        var sheenEnergyComp = sheen.r.max(sheen.g).max(sheen.b).mul(0.157).oneMinus();\n        var sheenLight = outgoingLight.mul(sheenEnergyComp).add(this.sheenSpecularDirect, this.sheenSpecularIndirect);\n        outgoingLight.assign(sheenLight);\n      }\n    }\n  }]);\n  return PhysicalLightingModel;\n}(LightingModel);\nexport default PhysicalLightingModel;","map":{"version":3,"names":["BRDF_Lambert","BRDF_GGX","DFGApprox","EnvironmentBRDF","F_Schlick","Schlick_to_F0","BRDF_Sheen","LightingModel","diffuseColor","specularColor","roughness","clearcoat","clearcoatRoughness","sheen","sheenRoughness","iridescence","iridescenceIOR","iridescenceThickness","transformedNormalView","transformedClearcoatNormalView","positionViewDirection","tslFn","float","vec3","mat3","cond","mix","smoothstep","XYZ_TO_REC709","Fresnel0ToIor","fresnel0","sqrtF0","sqrt","add","div","sub","IorToFresnel0","transmittedIor","incidentIor","pow2","evalSensitivity","OPD","shift","phase","mul","Math","PI","val","pos","VAR","x","cos","exp","xyz","negate","y","z","rgb","evalIridescence","_ref","outsideIOR","eta2","cosTheta1","thinFilmThickness","baseF0","sinTheta2Sq","cosTheta2Sq","cosTheta2","R0","R12","f0","f90","dotVH","T121","oneMinus","phi12","lessThan","phi21","baseIOR","clamp","R1","R23","phi23","phi","R123","r123","Rs","C0","I","Cm","m","Sm","max","setLayout","name","type","inputs","IBLSheenBRDF","_ref2","normal","viewDir","dotNV","dot","saturate","r2","a","b","DG","clearcoatF0","clearcoatF90","PhysicalLightingModel","_LightingModel","_inherits","_super","_createSuper","_this","arguments","length","undefined","_classCallCheck","call","clearcoatRadiance","clearcoatSpecularDirect","clearcoatSpecularIndirect","sheenSpecularDirect","sheenSpecularIndirect","iridescenceFresnel","iridescenceF0","_createClass","key","value","start","temp","dotNVi","f","computeMultiscattering","singleScatter","multiScatter","specularF90","fab","Fr","FssEss","Ess","Ems","Favg","Fms","addAssign","direct","_ref3","lightDirection","lightColor","reflectedLight","dotNL","irradiance","dotNLcc","ccIrradiance","normalView","directDiffuse","directSpecular","indirectDiffuse","_ref4","indirectSpecular","_ref5","radiance","iblIrradiance","dotNVcc","clearcoatEnv","singleScattering","multiScattering","cosineWeightedIrradiance","totalScattering","diffuse","r","g","ambientOcclusion","_ref6","aoNV","aoExp","exp2","aoNode","pow","mulAssign","finish","context","outgoingLight","Fcc","clearcoatLight","assign","sheenEnergyComp","sheenLight"],"sources":["/Users/vedant/node_modules/three/examples/jsm/nodes/functions/PhysicalLightingModel.js"],"sourcesContent":["import BRDF_Lambert from './BSDF/BRDF_Lambert.js';\nimport BRDF_GGX from './BSDF/BRDF_GGX.js';\nimport DFGApprox from './BSDF/DFGApprox.js';\nimport EnvironmentBRDF from './BSDF/EnvironmentBRDF.js';\nimport F_Schlick from './BSDF/F_Schlick.js';\nimport Schlick_to_F0 from './BSDF/Schlick_to_F0.js';\nimport BRDF_Sheen from './BSDF/BRDF_Sheen.js';\nimport LightingModel from '../core/LightingModel.js';\nimport { diffuseColor, specularColor, roughness, clearcoat, clearcoatRoughness, sheen, sheenRoughness, iridescence, iridescenceIOR, iridescenceThickness } from '../core/PropertyNode.js';\nimport { transformedNormalView, transformedClearcoatNormalView } from '../accessors/NormalNode.js';\nimport { positionViewDirection } from '../accessors/PositionNode.js';\nimport { tslFn, float, vec3, mat3 } from '../shadernode/ShaderNode.js';\nimport { cond } from '../math/CondNode.js';\nimport { mix, smoothstep } from '../math/MathNode.js';\n\n//\n// Iridescence\n//\n\n// XYZ to linear-sRGB color space\nconst XYZ_TO_REC709 = mat3(\n\t3.2404542, - 0.9692660, 0.0556434,\n\t- 1.5371385, 1.8760108, - 0.2040259,\n\t- 0.4985314, 0.0415560, 1.0572252\n);\n\n// Assume air interface for top\n// Note: We don't handle the case fresnel0 == 1\nconst Fresnel0ToIor = ( fresnel0 ) => {\n\n\tconst sqrtF0 = fresnel0.sqrt();\n\treturn vec3( 1.0 ).add( sqrtF0 ).div( vec3( 1.0 ).sub( sqrtF0 ) );\n\n};\n\n// ior is a value between 1.0 and 3.0. 1.0 is air interface\nconst IorToFresnel0 = ( transmittedIor, incidentIor ) => {\n\n\treturn transmittedIor.sub( incidentIor ).div( transmittedIor.add( incidentIor ) ).pow2();\n\n};\n\n// Fresnel equations for dielectric/dielectric interfaces.\n// Ref: https://belcour.github.io/blog/research/2017/05/01/brdf-thin-film.html\n// Evaluation XYZ sensitivity curves in Fourier space\nconst evalSensitivity = ( OPD, shift ) => {\n\n\tconst phase = OPD.mul( 2.0 * Math.PI * 1.0e-9 );\n\tconst val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\tconst pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\tconst VAR = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\n\tconst x = float( 9.7470e-14 * Math.sqrt( 2.0 * Math.PI * 4.5282e+09 ) ).mul( phase.mul( 2.2399e+06 ).add( shift.x ).cos() ).mul( phase.pow2().mul( - 4.5282e+09 ).exp() );\n\n\tlet xyz = val.mul( VAR.mul( 2.0 * Math.PI ).sqrt() ).mul( pos.mul( phase ).add( shift ).cos() ).mul( phase.pow2().negate().mul( VAR ).exp() );\n\txyz = vec3( xyz.x.add( x ), xyz.y, xyz.z ).div( 1.0685e-7 );\n\n\tconst rgb = XYZ_TO_REC709.mul( xyz );\n\n\treturn rgb;\n\n};\n\nconst evalIridescence = tslFn( ( { outsideIOR, eta2, cosTheta1, thinFilmThickness, baseF0 } ) => {\n\n\t// Force iridescenceIOR -> outsideIOR when thinFilmThickness -> 0.0\n\tconst iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t// Evaluate the cosTheta on the base layer (Snell law)\n\tconst sinTheta2Sq = outsideIOR.div( iridescenceIOR ).pow2().mul( float( 1 ).sub( cosTheta1.pow2() ) );\n\n\t// Handle TIR:\n\tconst cosTheta2Sq = float( 1 ).sub( sinTheta2Sq );\n\t/*if ( cosTheta2Sq < 0.0 ) {\n\n\t\t\treturn vec3( 1.0 );\n\n\t}*/\n\n\tconst cosTheta2 = cosTheta2Sq.sqrt();\n\n\t// First interface\n\tconst R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\tconst R12 = F_Schlick( { f0: R0, f90: 1.0, dotVH: cosTheta1 } );\n\t//const R21 = R12;\n\tconst T121 = R12.oneMinus();\n\tconst phi12 = iridescenceIOR.lessThan( outsideIOR ).cond( Math.PI, 0.0 );\n\tconst phi21 = float( Math.PI ).sub( phi12 );\n\n\t// Second interface\n\tconst baseIOR = Fresnel0ToIor( baseF0.clamp( 0.0, 0.9999 ) ); // guard against 1.0\n\tconst R1 = IorToFresnel0( baseIOR, iridescenceIOR.vec3() );\n\tconst R23 = F_Schlick( { f0: R1, f90: 1.0, dotVH: cosTheta2 } );\n\tconst phi23 = vec3(\n\t\tbaseIOR.x.lessThan( iridescenceIOR ).cond( Math.PI, 0.0 ),\n\t\tbaseIOR.y.lessThan( iridescenceIOR ).cond( Math.PI, 0.0 ),\n\t\tbaseIOR.z.lessThan( iridescenceIOR ).cond( Math.PI, 0.0 )\n\t);\n\n\t// Phase shift\n\tconst OPD = iridescenceIOR.mul( thinFilmThickness, cosTheta2, 2.0 );\n\tconst phi = vec3( phi21 ).add( phi23 );\n\n\t// Compound terms\n\tconst R123 = R12.mul( R23 ).clamp( 1e-5, 0.9999 );\n\tconst r123 = R123.sqrt();\n\tconst Rs = T121.pow2().mul( R23 ).div( vec3( 1.0 ).sub( R123 ) );\n\n\t// Reflectance term for m = 0 (DC term amplitude)\n\tconst C0 = R12.add( Rs );\n\tlet I = C0;\n\n\t// Reflectance term for m > 0 (pairs of diracs)\n\tlet Cm = Rs.sub( T121 );\n\tfor ( let m = 1; m <= 2; ++ m ) {\n\n\t\tCm = Cm.mul( r123 );\n\t\tconst Sm = evalSensitivity( float( m ).mul( OPD ), float( m ).mul( phi ) ).mul( 2.0 );\n\t\tI = I.add( Cm.mul( Sm ) );\n\n\t}\n\n\t// Since out of gamut colors might be produced, negative color values are clamped to 0.\n\treturn I.max( vec3( 0.0 ) );\n\n} ).setLayout( {\n\tname: 'evalIridescence',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'outsideIOR', type: 'float' },\n\t\t{ name: 'eta2', type: 'float' },\n\t\t{ name: 'cosTheta1', type: 'float' },\n\t\t{ name: 'thinFilmThickness', type: 'float' },\n\t\t{ name: 'baseF0', type: 'vec3' }\n\t]\n} );\n\n//\n//\tSheen\n//\n\n// This is a curve-fit approxmation to the \"Charlie sheen\" BRDF integrated over the hemisphere from\n// Estevez and Kulla 2017, \"Production Friendly Microfacet Sheen BRDF\". The analysis can be found\n// in the Sheen section of https://drive.google.com/file/d/1T0D1VSyR4AllqIJTQAraEIzjlb5h4FKH/view?usp=sharing\nconst IBLSheenBRDF = tslFn( ( { normal, viewDir, roughness } ) => {\n\n\tconst dotNV = normal.dot( viewDir ).saturate();\n\n\tconst r2 = roughness.pow2();\n\n\tconst a = cond(\n\t\troughness.lessThan( 0.25 ),\n\t\tfloat( - 339.2 ).mul( r2 ).add( float( 161.4 ).mul( roughness ) ).sub( 25.9 ),\n\t\tfloat( - 8.48 ).mul( r2 ).add( float( 14.3 ).mul( roughness ) ).sub( 9.95 )\n\t);\n\n\tconst b = cond(\n\t\troughness.lessThan( 0.25 ),\n\t\tfloat( 44.0 ).mul( r2 ).sub( float( 23.7 ).mul( roughness ) ).add( 3.26 ),\n\t\tfloat( 1.97 ).mul( r2 ).sub( float( 3.27 ).mul( roughness ) ).add( 0.72 )\n\t);\n\n\tconst DG = cond( roughness.lessThan( 0.25 ), 0.0, float( 0.1 ).mul( roughness ).sub( 0.025 ) ).add( a.mul( dotNV ).add( b ).exp() );\n\n\treturn DG.mul( 1.0 / Math.PI ).saturate();\n\n} );\n\nconst clearcoatF0 = vec3( 0.04 );\nconst clearcoatF90 = vec3( 1 );\n\n//\n\nclass PhysicalLightingModel extends LightingModel {\n\n\tconstructor( clearcoat = false, sheen = false, iridescence = false ) {\n\n\t\tsuper();\n\n\t\tthis.clearcoat = clearcoat;\n\t\tthis.sheen = sheen;\n\t\tthis.iridescence = iridescence;\n\n\t\tthis.clearcoatRadiance = null;\n\t\tthis.clearcoatSpecularDirect = null;\n\t\tthis.clearcoatSpecularIndirect = null;\n\t\tthis.sheenSpecularDirect = null;\n\t\tthis.sheenSpecularIndirect = null;\n\t\tthis.iridescenceFresnel = null;\n\t\tthis.iridescenceF0 = null;\n\n\t}\n\n\tstart( /*context*/ ) {\n\n\t\tif ( this.clearcoat === true ) {\n\n\t\t\tthis.clearcoatRadiance = vec3().temp( 'clearcoatRadiance' );\n\t\t\tthis.clearcoatSpecularDirect = vec3().temp( 'clearcoatSpecularDirect' );\n\t\t\tthis.clearcoatSpecularIndirect = vec3().temp( 'clearcoatSpecularIndirect' );\n\n\t\t}\n\n\t\tif ( this.sheen === true ) {\n\n\t\t\tthis.sheenSpecularDirect = vec3().temp( 'sheenSpecularDirect' );\n\t\t\tthis.sheenSpecularIndirect = vec3().temp( 'sheenSpecularIndirect' );\n\n\t\t}\n\n\t\tif ( this.iridescence === true ) {\n\n\t\t\tconst dotNVi = transformedNormalView.dot( positionViewDirection ).clamp();\n\n\t\t\tthis.iridescenceFresnel = evalIridescence( {\n\t\t\t\toutsideIOR: float( 1.0 ),\n\t\t\t\teta2: iridescenceIOR,\n\t\t\t\tcosTheta1: dotNVi,\n\t\t\t\tthinFilmThickness: iridescenceThickness,\n\t\t\t\tbaseF0: specularColor\n\t\t\t} );\n\n\t\t\tthis.iridescenceF0 = Schlick_to_F0( { f: this.iridescenceFresnel, f90: 1.0, dotVH: dotNVi } );\n\n\t\t}\n\n\t}\n\n\t// Fdez-AgÃ¼era's \"Multiple-Scattering Microfacet Model for Real-Time Image Based Lighting\"\n\t// Approximates multiscattering in order to preserve energy.\n\t// http://www.jcgt.org/published/0008/01/03/\n\n\tcomputeMultiscattering( singleScatter, multiScatter, specularF90 = float( 1 ) ) {\n\n\t\tconst dotNV = transformedNormalView.dot( positionViewDirection ).clamp(); // @ TODO: Move to core dotNV\n\n\t\tconst fab = DFGApprox( { roughness, dotNV } );\n\n\t\tconst Fr = this.iridescenceF0 ? iridescence.mix( specularColor, this.iridescenceF0 ) : specularColor;\n\n\t\tconst FssEss = Fr.mul( fab.x ).add( specularF90.mul( fab.y ) );\n\n\t\tconst Ess = fab.x.add( fab.y );\n\t\tconst Ems = Ess.oneMinus();\n\n\t\tconst Favg = specularColor.add( specularColor.oneMinus().mul( 0.047619 ) ); // 1/21\n\t\tconst Fms = FssEss.mul( Favg ).div( Ems.mul( Favg ).oneMinus() );\n\n\t\tsingleScatter.addAssign( FssEss );\n\t\tmultiScatter.addAssign( Fms.mul( Ems ) );\n\n\t}\n\n\tdirect( { lightDirection, lightColor, reflectedLight } ) {\n\n\t\tconst dotNL = transformedNormalView.dot( lightDirection ).clamp();\n\t\tconst irradiance = dotNL.mul( lightColor );\n\n\t\tif ( this.sheen === true ) {\n\n\t\t\tthis.sheenSpecularDirect.addAssign( irradiance.mul( BRDF_Sheen( { lightDirection } ) ) );\n\n\t\t}\n\n\t\tif ( this.clearcoat === true ) {\n\n\t\t\tconst dotNLcc = transformedClearcoatNormalView.dot( lightDirection ).clamp();\n\t\t\tconst ccIrradiance = dotNLcc.mul( lightColor );\n\n\t\t\tthis.clearcoatSpecularDirect.addAssign( ccIrradiance.mul( BRDF_GGX( { lightDirection, f0: clearcoatF0, f90: clearcoatF90, roughness: clearcoatRoughness, normalView: transformedClearcoatNormalView } ) ) );\n\n\t\t}\n\n\t\treflectedLight.directDiffuse.addAssign( irradiance.mul( BRDF_Lambert( { diffuseColor: diffuseColor.rgb } ) ) );\n\n\t\treflectedLight.directSpecular.addAssign( irradiance.mul( BRDF_GGX( { lightDirection, f0: specularColor, f90: 1, roughness, iridescence: this.iridescence, iridescenceFresnel: this.iridescenceFresnel } ) ) );\n\n\t}\n\n\tindirectDiffuse( { irradiance, reflectedLight } ) {\n\n\t\treflectedLight.indirectDiffuse.addAssign( irradiance.mul( BRDF_Lambert( { diffuseColor } ) ) );\n\n\t}\n\n\tindirectSpecular( { radiance, iblIrradiance, reflectedLight } ) {\n\n\t\tif ( this.sheen === true ) {\n\n\t\t\tthis.sheenSpecularIndirect.addAssign( iblIrradiance.mul(\n\t\t\t\tsheen,\n\t\t\t\tIBLSheenBRDF( {\n\t\t\t\t\tnormal: transformedNormalView,\n\t\t\t\t\tviewDir: positionViewDirection,\n\t\t\t\t\troughness: sheenRoughness\n\t\t\t\t} )\n\t\t\t) );\n\n\t\t}\n\n\t\tif ( this.clearcoat === true ) {\n\n\t\t\tconst dotNVcc = transformedClearcoatNormalView.dot( positionViewDirection ).clamp();\n\n\t\t\tconst clearcoatEnv = EnvironmentBRDF( {\n\t\t\t\tdotNV: dotNVcc,\n\t\t\t\tspecularColor: clearcoatF0,\n\t\t\t\tspecularF90: clearcoatF90,\n\t\t\t\troughness: clearcoatRoughness\n\t\t\t} );\n\n\t\t\tthis.clearcoatSpecularIndirect.addAssign( this.clearcoatRadiance.mul( clearcoatEnv ) );\n\n\t\t}\n\n\t\t// Both indirect specular and indirect diffuse light accumulate here\n\n\t\tconst singleScattering = vec3().temp( 'singleScattering' );\n\t\tconst multiScattering = vec3().temp( 'multiScattering' );\n\t\tconst cosineWeightedIrradiance = iblIrradiance.mul( 1 / Math.PI );\n\n\t\tthis.computeMultiscattering( singleScattering, multiScattering );\n\n\t\tconst totalScattering = singleScattering.add( multiScattering );\n\n\t\tconst diffuse = diffuseColor.mul( totalScattering.r.max( totalScattering.g ).max( totalScattering.b ).oneMinus() );\n\n\t\treflectedLight.indirectSpecular.addAssign( radiance.mul( singleScattering ) );\n\t\treflectedLight.indirectSpecular.addAssign( multiScattering.mul( cosineWeightedIrradiance ) );\n\n\t\treflectedLight.indirectDiffuse.addAssign( diffuse.mul( cosineWeightedIrradiance ) );\n\n\t}\n\n\tambientOcclusion( { ambientOcclusion, reflectedLight } ) {\n\n\t\tconst dotNV = transformedNormalView.dot( positionViewDirection ).clamp(); // @ TODO: Move to core dotNV\n\n\t\tconst aoNV = dotNV.add( ambientOcclusion );\n\t\tconst aoExp = roughness.mul( - 16.0 ).oneMinus().negate().exp2();\n\n\t\tconst aoNode = ambientOcclusion.sub( aoNV.pow( aoExp ).oneMinus() ).clamp();\n\n\t\tif ( this.clearcoat === true ) {\n\n\t\t\tthis.clearcoatSpecularIndirect.mulAssign( ambientOcclusion );\n\n\t\t}\n\n\t\tif ( this.sheen === true ) {\n\n\t\t\tthis.sheenSpecularIndirect.mulAssign( ambientOcclusion );\n\n\t\t}\n\n\t\treflectedLight.indirectDiffuse.mulAssign( ambientOcclusion );\n\t\treflectedLight.indirectSpecular.mulAssign( aoNode );\n\n\t}\n\n\tfinish( context ) {\n\n\t\tconst { outgoingLight } = context;\n\n\t\tif ( this.clearcoat === true ) {\n\n\t\t\tconst dotNVcc = transformedClearcoatNormalView.dot( positionViewDirection ).clamp();\n\n\t\t\tconst Fcc = F_Schlick( {\n\t\t\t\tdotVH: dotNVcc,\n\t\t\t\tf0: clearcoatF0,\n\t\t\t\tf90: clearcoatF90\n\t\t\t} );\n\n\t\t\tconst clearcoatLight = outgoingLight.mul( clearcoat.mul( Fcc ).oneMinus() ).add( this.clearcoatSpecularDirect.add( this.clearcoatSpecularIndirect ).mul( clearcoat ) );\n\n\t\t\toutgoingLight.assign( clearcoatLight );\n\n\t\t}\n\n\t\tif ( this.sheen === true ) {\n\n\t\t\tconst sheenEnergyComp = sheen.r.max( sheen.g ).max( sheen.b ).mul( 0.157 ).oneMinus();\n\t\t\tconst sheenLight = outgoingLight.mul( sheenEnergyComp ).add( this.sheenSpecularDirect, this.sheenSpecularIndirect );\n\n\t\t\toutgoingLight.assign( sheenLight );\n\n\t\t}\n\n\t}\n\n}\n\nexport default PhysicalLightingModel;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}