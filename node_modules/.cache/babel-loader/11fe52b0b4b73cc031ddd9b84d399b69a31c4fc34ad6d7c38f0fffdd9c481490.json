{"ast":null,"code":"// Three.js Transpiler\n// https://raw.githubusercontent.com/AcademySoftwareFoundation/MaterialX/main/libraries/stdlib/genglsl/lib/mx_noise.glsl\n\nimport { int, uint, float, vec3, bool, uvec3, vec2, vec4, If, tslFn } from '../../shadernode/ShaderNode.js';\nimport { cond } from '../../math/CondNode.js';\nimport { sub, mul } from '../../math/OperatorNode.js';\nimport { floor, abs, max, dot, min, sqrt } from '../../math/MathNode.js';\nimport { overloadingFn } from '../../utils/FunctionOverloadingNode.js';\nimport { loop } from '../../utils/LoopNode.js';\nconst mx_select = tslFn(_ref => {\n  let [b_immutable, t_immutable, f_immutable] = _ref;\n  const f = float(f_immutable).toVar();\n  const t = float(t_immutable).toVar();\n  const b = bool(b_immutable).toVar();\n  return cond(b, t, f);\n});\nconst mx_negate_if = tslFn(_ref2 => {\n  let [val_immutable, b_immutable] = _ref2;\n  const b = bool(b_immutable).toVar();\n  const val = float(val_immutable).toVar();\n  return cond(b, val.negate(), val);\n});\nconst mx_floor = tslFn(_ref3 => {\n  let [x_immutable] = _ref3;\n  const x = float(x_immutable).toVar();\n  return int(floor(x));\n});\nconst mx_floorfrac = tslFn(_ref4 => {\n  let [x_immutable, i] = _ref4;\n  const x = float(x_immutable).toVar();\n  i.assign(mx_floor(x));\n  return x.sub(float(i));\n});\nconst mx_bilerp_0 = tslFn(_ref5 => {\n  let [v0_immutable, v1_immutable, v2_immutable, v3_immutable, s_immutable, t_immutable] = _ref5;\n  const t = float(t_immutable).toVar();\n  const s = float(s_immutable).toVar();\n  const v3 = float(v3_immutable).toVar();\n  const v2 = float(v2_immutable).toVar();\n  const v1 = float(v1_immutable).toVar();\n  const v0 = float(v0_immutable).toVar();\n  const s1 = float(sub(1.0, s)).toVar();\n  return sub(1.0, t).mul(v0.mul(s1).add(v1.mul(s))).add(t.mul(v2.mul(s1).add(v3.mul(s))));\n});\nconst mx_bilerp_1 = tslFn(_ref6 => {\n  let [v0_immutable, v1_immutable, v2_immutable, v3_immutable, s_immutable, t_immutable] = _ref6;\n  const t = float(t_immutable).toVar();\n  const s = float(s_immutable).toVar();\n  const v3 = vec3(v3_immutable).toVar();\n  const v2 = vec3(v2_immutable).toVar();\n  const v1 = vec3(v1_immutable).toVar();\n  const v0 = vec3(v0_immutable).toVar();\n  const s1 = float(sub(1.0, s)).toVar();\n  return sub(1.0, t).mul(v0.mul(s1).add(v1.mul(s))).add(t.mul(v2.mul(s1).add(v3.mul(s))));\n});\nconst mx_bilerp = overloadingFn([mx_bilerp_0, mx_bilerp_1]);\nconst mx_trilerp_0 = tslFn(_ref7 => {\n  let [v0_immutable, v1_immutable, v2_immutable, v3_immutable, v4_immutable, v5_immutable, v6_immutable, v7_immutable, s_immutable, t_immutable, r_immutable] = _ref7;\n  const r = float(r_immutable).toVar();\n  const t = float(t_immutable).toVar();\n  const s = float(s_immutable).toVar();\n  const v7 = float(v7_immutable).toVar();\n  const v6 = float(v6_immutable).toVar();\n  const v5 = float(v5_immutable).toVar();\n  const v4 = float(v4_immutable).toVar();\n  const v3 = float(v3_immutable).toVar();\n  const v2 = float(v2_immutable).toVar();\n  const v1 = float(v1_immutable).toVar();\n  const v0 = float(v0_immutable).toVar();\n  const s1 = float(sub(1.0, s)).toVar();\n  const t1 = float(sub(1.0, t)).toVar();\n  const r1 = float(sub(1.0, r)).toVar();\n  return r1.mul(t1.mul(v0.mul(s1).add(v1.mul(s))).add(t.mul(v2.mul(s1).add(v3.mul(s))))).add(r.mul(t1.mul(v4.mul(s1).add(v5.mul(s))).add(t.mul(v6.mul(s1).add(v7.mul(s))))));\n});\nconst mx_trilerp_1 = tslFn(_ref8 => {\n  let [v0_immutable, v1_immutable, v2_immutable, v3_immutable, v4_immutable, v5_immutable, v6_immutable, v7_immutable, s_immutable, t_immutable, r_immutable] = _ref8;\n  const r = float(r_immutable).toVar();\n  const t = float(t_immutable).toVar();\n  const s = float(s_immutable).toVar();\n  const v7 = vec3(v7_immutable).toVar();\n  const v6 = vec3(v6_immutable).toVar();\n  const v5 = vec3(v5_immutable).toVar();\n  const v4 = vec3(v4_immutable).toVar();\n  const v3 = vec3(v3_immutable).toVar();\n  const v2 = vec3(v2_immutable).toVar();\n  const v1 = vec3(v1_immutable).toVar();\n  const v0 = vec3(v0_immutable).toVar();\n  const s1 = float(sub(1.0, s)).toVar();\n  const t1 = float(sub(1.0, t)).toVar();\n  const r1 = float(sub(1.0, r)).toVar();\n  return r1.mul(t1.mul(v0.mul(s1).add(v1.mul(s))).add(t.mul(v2.mul(s1).add(v3.mul(s))))).add(r.mul(t1.mul(v4.mul(s1).add(v5.mul(s))).add(t.mul(v6.mul(s1).add(v7.mul(s))))));\n});\nconst mx_trilerp = overloadingFn([mx_trilerp_0, mx_trilerp_1]);\nconst mx_gradient_float_0 = tslFn(_ref9 => {\n  let [hash_immutable, x_immutable, y_immutable] = _ref9;\n  const y = float(y_immutable).toVar();\n  const x = float(x_immutable).toVar();\n  const hash = uint(hash_immutable).toVar();\n  const h = uint(hash.bitAnd(uint(7))).toVar();\n  const u = float(mx_select(h.lessThan(uint(4)), x, y)).toVar();\n  const v = float(mul(2.0, mx_select(h.lessThan(uint(4)), y, x))).toVar();\n  return mx_negate_if(u, bool(h.bitAnd(uint(1)))).add(mx_negate_if(v, bool(h.bitAnd(uint(2)))));\n});\nconst mx_gradient_float_1 = tslFn(_ref10 => {\n  let [hash_immutable, x_immutable, y_immutable, z_immutable] = _ref10;\n  const z = float(z_immutable).toVar();\n  const y = float(y_immutable).toVar();\n  const x = float(x_immutable).toVar();\n  const hash = uint(hash_immutable).toVar();\n  const h = uint(hash.bitAnd(uint(15))).toVar();\n  const u = float(mx_select(h.lessThan(uint(8)), x, y)).toVar();\n  const v = float(mx_select(h.lessThan(uint(4)), y, mx_select(h.equal(uint(12)).or(h.equal(uint(14))), x, z))).toVar();\n  return mx_negate_if(u, bool(h.bitAnd(uint(1)))).add(mx_negate_if(v, bool(h.bitAnd(uint(2)))));\n});\nconst mx_gradient_float = overloadingFn([mx_gradient_float_0, mx_gradient_float_1]);\nconst mx_gradient_vec3_0 = tslFn(_ref11 => {\n  let [hash_immutable, x_immutable, y_immutable] = _ref11;\n  const y = float(y_immutable).toVar();\n  const x = float(x_immutable).toVar();\n  const hash = uvec3(hash_immutable).toVar();\n  return vec3(mx_gradient_float(hash.x, x, y), mx_gradient_float(hash.y, x, y), mx_gradient_float(hash.z, x, y));\n});\nconst mx_gradient_vec3_1 = tslFn(_ref12 => {\n  let [hash_immutable, x_immutable, y_immutable, z_immutable] = _ref12;\n  const z = float(z_immutable).toVar();\n  const y = float(y_immutable).toVar();\n  const x = float(x_immutable).toVar();\n  const hash = uvec3(hash_immutable).toVar();\n  return vec3(mx_gradient_float(hash.x, x, y, z), mx_gradient_float(hash.y, x, y, z), mx_gradient_float(hash.z, x, y, z));\n});\nconst mx_gradient_vec3 = overloadingFn([mx_gradient_vec3_0, mx_gradient_vec3_1]);\nconst mx_gradient_scale2d_0 = tslFn(_ref13 => {\n  let [v_immutable] = _ref13;\n  const v = float(v_immutable).toVar();\n  return mul(0.6616, v);\n});\nconst mx_gradient_scale3d_0 = tslFn(_ref14 => {\n  let [v_immutable] = _ref14;\n  const v = float(v_immutable).toVar();\n  return mul(0.9820, v);\n});\nconst mx_gradient_scale2d_1 = tslFn(_ref15 => {\n  let [v_immutable] = _ref15;\n  const v = vec3(v_immutable).toVar();\n  return mul(0.6616, v);\n});\nconst mx_gradient_scale2d = overloadingFn([mx_gradient_scale2d_0, mx_gradient_scale2d_1]);\nconst mx_gradient_scale3d_1 = tslFn(_ref16 => {\n  let [v_immutable] = _ref16;\n  const v = vec3(v_immutable).toVar();\n  return mul(0.9820, v);\n});\nconst mx_gradient_scale3d = overloadingFn([mx_gradient_scale3d_0, mx_gradient_scale3d_1]);\nconst mx_rotl32 = tslFn(_ref17 => {\n  let [x_immutable, k_immutable] = _ref17;\n  const k = int(k_immutable).toVar();\n  const x = uint(x_immutable).toVar();\n  return x.shiftLeft(k).bitOr(x.shiftRight(int(32).sub(k)));\n});\nconst mx_bjmix = tslFn(_ref18 => {\n  let [a, b, c] = _ref18;\n  a.subAssign(c);\n  a.bitXorAssign(mx_rotl32(c, int(4)));\n  c.addAssign(b);\n  b.subAssign(a);\n  b.bitXorAssign(mx_rotl32(a, int(6)));\n  a.addAssign(c);\n  c.subAssign(b);\n  c.bitXorAssign(mx_rotl32(b, int(8)));\n  b.addAssign(a);\n  a.subAssign(c);\n  a.bitXorAssign(mx_rotl32(c, int(16)));\n  c.addAssign(b);\n  b.subAssign(a);\n  b.bitXorAssign(mx_rotl32(a, int(19)));\n  a.addAssign(c);\n  c.subAssign(b);\n  c.bitXorAssign(mx_rotl32(b, int(4)));\n  b.addAssign(a);\n});\nconst mx_bjfinal = tslFn(_ref19 => {\n  let [a_immutable, b_immutable, c_immutable] = _ref19;\n  const c = uint(c_immutable).toVar();\n  const b = uint(b_immutable).toVar();\n  const a = uint(a_immutable).toVar();\n  c.bitXorAssign(b);\n  c.subAssign(mx_rotl32(b, int(14)));\n  a.bitXorAssign(c);\n  a.subAssign(mx_rotl32(c, int(11)));\n  b.bitXorAssign(a);\n  b.subAssign(mx_rotl32(a, int(25)));\n  c.bitXorAssign(b);\n  c.subAssign(mx_rotl32(b, int(16)));\n  a.bitXorAssign(c);\n  a.subAssign(mx_rotl32(c, int(4)));\n  b.bitXorAssign(a);\n  b.subAssign(mx_rotl32(a, int(14)));\n  c.bitXorAssign(b);\n  c.subAssign(mx_rotl32(b, int(24)));\n  return c;\n});\nconst mx_bits_to_01 = tslFn(_ref20 => {\n  let [bits_immutable] = _ref20;\n  const bits = uint(bits_immutable).toVar();\n  return float(bits).div(float(uint(int(0xffffffff))));\n});\nconst mx_fade = tslFn(_ref21 => {\n  let [t_immutable] = _ref21;\n  const t = float(t_immutable).toVar();\n  return t.mul(t.mul(t.mul(t.mul(t.mul(6.0).sub(15.0)).add(10.0))));\n});\nconst mx_hash_int_0 = tslFn(_ref22 => {\n  let [x_immutable] = _ref22;\n  const x = int(x_immutable).toVar();\n  const len = uint(uint(1)).toVar();\n  const seed = uint(uint(int(0xdeadbeef)).add(len.shiftLeft(uint(2)).add(uint(13)))).toVar();\n  return mx_bjfinal(seed.add(uint(x)), seed, seed);\n});\nconst mx_hash_int_1 = tslFn(_ref23 => {\n  let [x_immutable, y_immutable] = _ref23;\n  const y = int(y_immutable).toVar();\n  const x = int(x_immutable).toVar();\n  const len = uint(uint(2)).toVar();\n  const a = uint().toVar(),\n    b = uint().toVar(),\n    c = uint().toVar();\n  a.assign(b.assign(c.assign(uint(int(0xdeadbeef)).add(len.shiftLeft(uint(2)).add(uint(13))))));\n  a.addAssign(uint(x));\n  b.addAssign(uint(y));\n  return mx_bjfinal(a, b, c);\n});\nconst mx_hash_int_2 = tslFn(_ref24 => {\n  let [x_immutable, y_immutable, z_immutable] = _ref24;\n  const z = int(z_immutable).toVar();\n  const y = int(y_immutable).toVar();\n  const x = int(x_immutable).toVar();\n  const len = uint(uint(3)).toVar();\n  const a = uint().toVar(),\n    b = uint().toVar(),\n    c = uint().toVar();\n  a.assign(b.assign(c.assign(uint(int(0xdeadbeef)).add(len.shiftLeft(uint(2)).add(uint(13))))));\n  a.addAssign(uint(x));\n  b.addAssign(uint(y));\n  c.addAssign(uint(z));\n  return mx_bjfinal(a, b, c);\n});\nconst mx_hash_int_3 = tslFn(_ref25 => {\n  let [x_immutable, y_immutable, z_immutable, xx_immutable] = _ref25;\n  const xx = int(xx_immutable).toVar();\n  const z = int(z_immutable).toVar();\n  const y = int(y_immutable).toVar();\n  const x = int(x_immutable).toVar();\n  const len = uint(uint(4)).toVar();\n  const a = uint().toVar(),\n    b = uint().toVar(),\n    c = uint().toVar();\n  a.assign(b.assign(c.assign(uint(int(0xdeadbeef)).add(len.shiftLeft(uint(2)).add(uint(13))))));\n  a.addAssign(uint(x));\n  b.addAssign(uint(y));\n  c.addAssign(uint(z));\n  mx_bjmix(a, b, c);\n  a.addAssign(uint(xx));\n  return mx_bjfinal(a, b, c);\n});\nconst mx_hash_int_4 = tslFn(_ref26 => {\n  let [x_immutable, y_immutable, z_immutable, xx_immutable, yy_immutable] = _ref26;\n  const yy = int(yy_immutable).toVar();\n  const xx = int(xx_immutable).toVar();\n  const z = int(z_immutable).toVar();\n  const y = int(y_immutable).toVar();\n  const x = int(x_immutable).toVar();\n  const len = uint(uint(5)).toVar();\n  const a = uint().toVar(),\n    b = uint().toVar(),\n    c = uint().toVar();\n  a.assign(b.assign(c.assign(uint(int(0xdeadbeef)).add(len.shiftLeft(uint(2)).add(uint(13))))));\n  a.addAssign(uint(x));\n  b.addAssign(uint(y));\n  c.addAssign(uint(z));\n  mx_bjmix(a, b, c);\n  a.addAssign(uint(xx));\n  b.addAssign(uint(yy));\n  return mx_bjfinal(a, b, c);\n});\nconst mx_hash_int = overloadingFn([mx_hash_int_0, mx_hash_int_1, mx_hash_int_2, mx_hash_int_3, mx_hash_int_4]);\nconst mx_hash_vec3_0 = tslFn(_ref27 => {\n  let [x_immutable, y_immutable] = _ref27;\n  const y = int(y_immutable).toVar();\n  const x = int(x_immutable).toVar();\n  const h = uint(mx_hash_int(x, y)).toVar();\n  const result = uvec3().toVar();\n  result.x.assign(h.bitAnd(int(0xFF)));\n  result.y.assign(h.shiftRight(int(8)).bitAnd(int(0xFF)));\n  result.z.assign(h.shiftRight(int(16)).bitAnd(int(0xFF)));\n  return result;\n});\nconst mx_hash_vec3_1 = tslFn(_ref28 => {\n  let [x_immutable, y_immutable, z_immutable] = _ref28;\n  const z = int(z_immutable).toVar();\n  const y = int(y_immutable).toVar();\n  const x = int(x_immutable).toVar();\n  const h = uint(mx_hash_int(x, y, z)).toVar();\n  const result = uvec3().toVar();\n  result.x.assign(h.bitAnd(int(0xFF)));\n  result.y.assign(h.shiftRight(int(8)).bitAnd(int(0xFF)));\n  result.z.assign(h.shiftRight(int(16)).bitAnd(int(0xFF)));\n  return result;\n});\nconst mx_hash_vec3 = overloadingFn([mx_hash_vec3_0, mx_hash_vec3_1]);\nconst mx_perlin_noise_float_0 = tslFn(_ref29 => {\n  let [p_immutable] = _ref29;\n  const p = vec2(p_immutable).toVar();\n  const X = int().toVar(),\n    Y = int().toVar();\n  const fx = float(mx_floorfrac(p.x, X)).toVar();\n  const fy = float(mx_floorfrac(p.y, Y)).toVar();\n  const u = float(mx_fade(fx)).toVar();\n  const v = float(mx_fade(fy)).toVar();\n  const result = float(mx_bilerp(mx_gradient_float(mx_hash_int(X, Y), fx, fy), mx_gradient_float(mx_hash_int(X.add(int(1)), Y), fx.sub(1.0), fy), mx_gradient_float(mx_hash_int(X, Y.add(int(1))), fx, fy.sub(1.0)), mx_gradient_float(mx_hash_int(X.add(int(1)), Y.add(int(1))), fx.sub(1.0), fy.sub(1.0)), u, v)).toVar();\n  return mx_gradient_scale2d(result);\n});\nconst mx_perlin_noise_float_1 = tslFn(_ref30 => {\n  let [p_immutable] = _ref30;\n  const p = vec3(p_immutable).toVar();\n  const X = int().toVar(),\n    Y = int().toVar(),\n    Z = int().toVar();\n  const fx = float(mx_floorfrac(p.x, X)).toVar();\n  const fy = float(mx_floorfrac(p.y, Y)).toVar();\n  const fz = float(mx_floorfrac(p.z, Z)).toVar();\n  const u = float(mx_fade(fx)).toVar();\n  const v = float(mx_fade(fy)).toVar();\n  const w = float(mx_fade(fz)).toVar();\n  const result = float(mx_trilerp(mx_gradient_float(mx_hash_int(X, Y, Z), fx, fy, fz), mx_gradient_float(mx_hash_int(X.add(int(1)), Y, Z), fx.sub(1.0), fy, fz), mx_gradient_float(mx_hash_int(X, Y.add(int(1)), Z), fx, fy.sub(1.0), fz), mx_gradient_float(mx_hash_int(X.add(int(1)), Y.add(int(1)), Z), fx.sub(1.0), fy.sub(1.0), fz), mx_gradient_float(mx_hash_int(X, Y, Z.add(int(1))), fx, fy, fz.sub(1.0)), mx_gradient_float(mx_hash_int(X.add(int(1)), Y, Z.add(int(1))), fx.sub(1.0), fy, fz.sub(1.0)), mx_gradient_float(mx_hash_int(X, Y.add(int(1)), Z.add(int(1))), fx, fy.sub(1.0), fz.sub(1.0)), mx_gradient_float(mx_hash_int(X.add(int(1)), Y.add(int(1)), Z.add(int(1))), fx.sub(1.0), fy.sub(1.0), fz.sub(1.0)), u, v, w)).toVar();\n  return mx_gradient_scale3d(result);\n});\nconst mx_perlin_noise_float = overloadingFn([mx_perlin_noise_float_0, mx_perlin_noise_float_1]);\nconst mx_perlin_noise_vec3_0 = tslFn(_ref31 => {\n  let [p_immutable] = _ref31;\n  const p = vec2(p_immutable).toVar();\n  const X = int().toVar(),\n    Y = int().toVar();\n  const fx = float(mx_floorfrac(p.x, X)).toVar();\n  const fy = float(mx_floorfrac(p.y, Y)).toVar();\n  const u = float(mx_fade(fx)).toVar();\n  const v = float(mx_fade(fy)).toVar();\n  const result = vec3(mx_bilerp(mx_gradient_vec3(mx_hash_vec3(X, Y), fx, fy), mx_gradient_vec3(mx_hash_vec3(X.add(int(1)), Y), fx.sub(1.0), fy), mx_gradient_vec3(mx_hash_vec3(X, Y.add(int(1))), fx, fy.sub(1.0)), mx_gradient_vec3(mx_hash_vec3(X.add(int(1)), Y.add(int(1))), fx.sub(1.0), fy.sub(1.0)), u, v)).toVar();\n  return mx_gradient_scale2d(result);\n});\nconst mx_perlin_noise_vec3_1 = tslFn(_ref32 => {\n  let [p_immutable] = _ref32;\n  const p = vec3(p_immutable).toVar();\n  const X = int().toVar(),\n    Y = int().toVar(),\n    Z = int().toVar();\n  const fx = float(mx_floorfrac(p.x, X)).toVar();\n  const fy = float(mx_floorfrac(p.y, Y)).toVar();\n  const fz = float(mx_floorfrac(p.z, Z)).toVar();\n  const u = float(mx_fade(fx)).toVar();\n  const v = float(mx_fade(fy)).toVar();\n  const w = float(mx_fade(fz)).toVar();\n  const result = vec3(mx_trilerp(mx_gradient_vec3(mx_hash_vec3(X, Y, Z), fx, fy, fz), mx_gradient_vec3(mx_hash_vec3(X.add(int(1)), Y, Z), fx.sub(1.0), fy, fz), mx_gradient_vec3(mx_hash_vec3(X, Y.add(int(1)), Z), fx, fy.sub(1.0), fz), mx_gradient_vec3(mx_hash_vec3(X.add(int(1)), Y.add(int(1)), Z), fx.sub(1.0), fy.sub(1.0), fz), mx_gradient_vec3(mx_hash_vec3(X, Y, Z.add(int(1))), fx, fy, fz.sub(1.0)), mx_gradient_vec3(mx_hash_vec3(X.add(int(1)), Y, Z.add(int(1))), fx.sub(1.0), fy, fz.sub(1.0)), mx_gradient_vec3(mx_hash_vec3(X, Y.add(int(1)), Z.add(int(1))), fx, fy.sub(1.0), fz.sub(1.0)), mx_gradient_vec3(mx_hash_vec3(X.add(int(1)), Y.add(int(1)), Z.add(int(1))), fx.sub(1.0), fy.sub(1.0), fz.sub(1.0)), u, v, w)).toVar();\n  return mx_gradient_scale3d(result);\n});\nconst mx_perlin_noise_vec3 = overloadingFn([mx_perlin_noise_vec3_0, mx_perlin_noise_vec3_1]);\nconst mx_cell_noise_float_0 = tslFn(_ref33 => {\n  let [p_immutable] = _ref33;\n  const p = float(p_immutable).toVar();\n  const ix = int(mx_floor(p)).toVar();\n  return mx_bits_to_01(mx_hash_int(ix));\n});\nconst mx_cell_noise_float_1 = tslFn(_ref34 => {\n  let [p_immutable] = _ref34;\n  const p = vec2(p_immutable).toVar();\n  const ix = int(mx_floor(p.x)).toVar();\n  const iy = int(mx_floor(p.y)).toVar();\n  return mx_bits_to_01(mx_hash_int(ix, iy));\n});\nconst mx_cell_noise_float_2 = tslFn(_ref35 => {\n  let [p_immutable] = _ref35;\n  const p = vec3(p_immutable).toVar();\n  const ix = int(mx_floor(p.x)).toVar();\n  const iy = int(mx_floor(p.y)).toVar();\n  const iz = int(mx_floor(p.z)).toVar();\n  return mx_bits_to_01(mx_hash_int(ix, iy, iz));\n});\nconst mx_cell_noise_float_3 = tslFn(_ref36 => {\n  let [p_immutable] = _ref36;\n  const p = vec4(p_immutable).toVar();\n  const ix = int(mx_floor(p.x)).toVar();\n  const iy = int(mx_floor(p.y)).toVar();\n  const iz = int(mx_floor(p.z)).toVar();\n  const iw = int(mx_floor(p.w)).toVar();\n  return mx_bits_to_01(mx_hash_int(ix, iy, iz, iw));\n});\nconst mx_cell_noise_float = overloadingFn([mx_cell_noise_float_0, mx_cell_noise_float_1, mx_cell_noise_float_2, mx_cell_noise_float_3]);\nconst mx_cell_noise_vec3_0 = tslFn(_ref37 => {\n  let [p_immutable] = _ref37;\n  const p = float(p_immutable).toVar();\n  const ix = int(mx_floor(p)).toVar();\n  return vec3(mx_bits_to_01(mx_hash_int(ix, int(0))), mx_bits_to_01(mx_hash_int(ix, int(1))), mx_bits_to_01(mx_hash_int(ix, int(2))));\n});\nconst mx_cell_noise_vec3_1 = tslFn(_ref38 => {\n  let [p_immutable] = _ref38;\n  const p = vec2(p_immutable).toVar();\n  const ix = int(mx_floor(p.x)).toVar();\n  const iy = int(mx_floor(p.y)).toVar();\n  return vec3(mx_bits_to_01(mx_hash_int(ix, iy, int(0))), mx_bits_to_01(mx_hash_int(ix, iy, int(1))), mx_bits_to_01(mx_hash_int(ix, iy, int(2))));\n});\nconst mx_cell_noise_vec3_2 = tslFn(_ref39 => {\n  let [p_immutable] = _ref39;\n  const p = vec3(p_immutable).toVar();\n  const ix = int(mx_floor(p.x)).toVar();\n  const iy = int(mx_floor(p.y)).toVar();\n  const iz = int(mx_floor(p.z)).toVar();\n  return vec3(mx_bits_to_01(mx_hash_int(ix, iy, iz, int(0))), mx_bits_to_01(mx_hash_int(ix, iy, iz, int(1))), mx_bits_to_01(mx_hash_int(ix, iy, iz, int(2))));\n});\nconst mx_cell_noise_vec3_3 = tslFn(_ref40 => {\n  let [p_immutable] = _ref40;\n  const p = vec4(p_immutable).toVar();\n  const ix = int(mx_floor(p.x)).toVar();\n  const iy = int(mx_floor(p.y)).toVar();\n  const iz = int(mx_floor(p.z)).toVar();\n  const iw = int(mx_floor(p.w)).toVar();\n  return vec3(mx_bits_to_01(mx_hash_int(ix, iy, iz, iw, int(0))), mx_bits_to_01(mx_hash_int(ix, iy, iz, iw, int(1))), mx_bits_to_01(mx_hash_int(ix, iy, iz, iw, int(2))));\n});\nconst mx_cell_noise_vec3 = overloadingFn([mx_cell_noise_vec3_0, mx_cell_noise_vec3_1, mx_cell_noise_vec3_2, mx_cell_noise_vec3_3]);\nconst mx_fractal_noise_float = tslFn(_ref41 => {\n  let [p_immutable, octaves_immutable, lacunarity_immutable, diminish_immutable] = _ref41;\n  const diminish = float(diminish_immutable).toVar();\n  const lacunarity = float(lacunarity_immutable).toVar();\n  const octaves = int(octaves_immutable).toVar();\n  const p = vec3(p_immutable).toVar();\n  const result = float(0.0).toVar();\n  const amplitude = float(1.0).toVar();\n  loop({\n    start: int(0),\n    end: octaves\n  }, _ref42 => {\n    let {\n      i\n    } = _ref42;\n    result.addAssign(amplitude.mul(mx_perlin_noise_float(p)));\n    amplitude.mulAssign(diminish);\n    p.mulAssign(lacunarity);\n  });\n  return result;\n});\nconst mx_fractal_noise_vec3 = tslFn(_ref43 => {\n  let [p_immutable, octaves_immutable, lacunarity_immutable, diminish_immutable] = _ref43;\n  const diminish = float(diminish_immutable).toVar();\n  const lacunarity = float(lacunarity_immutable).toVar();\n  const octaves = int(octaves_immutable).toVar();\n  const p = vec3(p_immutable).toVar();\n  const result = vec3(0.0).toVar();\n  const amplitude = float(1.0).toVar();\n  loop({\n    start: int(0),\n    end: octaves\n  }, _ref44 => {\n    let {\n      i\n    } = _ref44;\n    result.addAssign(amplitude.mul(mx_perlin_noise_vec3(p)));\n    amplitude.mulAssign(diminish);\n    p.mulAssign(lacunarity);\n  });\n  return result;\n});\nconst mx_fractal_noise_vec2 = tslFn(_ref45 => {\n  let [p_immutable, octaves_immutable, lacunarity_immutable, diminish_immutable] = _ref45;\n  const diminish = float(diminish_immutable).toVar();\n  const lacunarity = float(lacunarity_immutable).toVar();\n  const octaves = int(octaves_immutable).toVar();\n  const p = vec3(p_immutable).toVar();\n  return vec2(mx_fractal_noise_float(p, octaves, lacunarity, diminish), mx_fractal_noise_float(p.add(vec3(int(19), int(193), int(17))), octaves, lacunarity, diminish));\n});\nconst mx_fractal_noise_vec4 = tslFn(_ref46 => {\n  let [p_immutable, octaves_immutable, lacunarity_immutable, diminish_immutable] = _ref46;\n  const diminish = float(diminish_immutable).toVar();\n  const lacunarity = float(lacunarity_immutable).toVar();\n  const octaves = int(octaves_immutable).toVar();\n  const p = vec3(p_immutable).toVar();\n  const c = vec3(mx_fractal_noise_vec3(p, octaves, lacunarity, diminish)).toVar();\n  const f = float(mx_fractal_noise_float(p.add(vec3(int(19), int(193), int(17))), octaves, lacunarity, diminish)).toVar();\n  return vec4(c, f);\n});\nconst mx_worley_distance_0 = tslFn(_ref47 => {\n  let [p_immutable, x_immutable, y_immutable, xoff_immutable, yoff_immutable, jitter_immutable, metric_immutable] = _ref47;\n  const metric = int(metric_immutable).toVar();\n  const jitter = float(jitter_immutable).toVar();\n  const yoff = int(yoff_immutable).toVar();\n  const xoff = int(xoff_immutable).toVar();\n  const y = int(y_immutable).toVar();\n  const x = int(x_immutable).toVar();\n  const p = vec2(p_immutable).toVar();\n  const tmp = vec3(mx_cell_noise_vec3(vec2(x.add(xoff), y.add(yoff)))).toVar();\n  const off = vec2(tmp.x, tmp.y).toVar();\n  off.subAssign(0.5);\n  off.mulAssign(jitter);\n  off.addAssign(0.5);\n  const cellpos = vec2(vec2(float(x), float(y)).add(off)).toVar();\n  const diff = vec2(cellpos.sub(p)).toVar();\n  If(metric.equal(int(2)), () => {\n    return abs(diff.x).add(abs(diff.y));\n  });\n  If(metric.equal(int(3)), () => {\n    return max(abs(diff.x), abs(diff.y));\n  });\n  return dot(diff, diff);\n});\nconst mx_worley_distance_1 = tslFn(_ref48 => {\n  let [p_immutable, x_immutable, y_immutable, z_immutable, xoff_immutable, yoff_immutable, zoff_immutable, jitter_immutable, metric_immutable] = _ref48;\n  const metric = int(metric_immutable).toVar();\n  const jitter = float(jitter_immutable).toVar();\n  const zoff = int(zoff_immutable).toVar();\n  const yoff = int(yoff_immutable).toVar();\n  const xoff = int(xoff_immutable).toVar();\n  const z = int(z_immutable).toVar();\n  const y = int(y_immutable).toVar();\n  const x = int(x_immutable).toVar();\n  const p = vec3(p_immutable).toVar();\n  const off = vec3(mx_cell_noise_vec3(vec3(x.add(xoff), y.add(yoff), z.add(zoff)))).toVar();\n  off.subAssign(0.5);\n  off.mulAssign(jitter);\n  off.addAssign(0.5);\n  const cellpos = vec3(vec3(float(x), float(y), float(z)).add(off)).toVar();\n  const diff = vec3(cellpos.sub(p)).toVar();\n  If(metric.equal(int(2)), () => {\n    return abs(diff.x).add(abs(diff.y).add(abs(diff.z)));\n  });\n  If(metric.equal(int(3)), () => {\n    return max(max(abs(diff.x), abs(diff.y)), abs(diff.z));\n  });\n  return dot(diff, diff);\n});\nconst mx_worley_distance = overloadingFn([mx_worley_distance_0, mx_worley_distance_1]);\nconst mx_worley_noise_float_0 = tslFn(_ref49 => {\n  let [p_immutable, jitter_immutable, metric_immutable] = _ref49;\n  const metric = int(metric_immutable).toVar();\n  const jitter = float(jitter_immutable).toVar();\n  const p = vec2(p_immutable).toVar();\n  const X = int().toVar(),\n    Y = int().toVar();\n  const localpos = vec2(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y)).toVar();\n  const sqdist = float(1e6).toVar();\n  loop({\n    start: -1,\n    end: int(1),\n    name: 'x',\n    condition: '<='\n  }, _ref50 => {\n    let {\n      x\n    } = _ref50;\n    loop({\n      start: -1,\n      end: int(1),\n      name: 'y',\n      condition: '<='\n    }, _ref51 => {\n      let {\n        y\n      } = _ref51;\n      const dist = float(mx_worley_distance(localpos, x, y, X, Y, jitter, metric)).toVar();\n      sqdist.assign(min(sqdist, dist));\n    });\n  });\n  If(metric.equal(int(0)), () => {\n    sqdist.assign(sqrt(sqdist));\n  });\n  return sqdist;\n});\nconst mx_worley_noise_vec2_0 = tslFn(_ref52 => {\n  let [p_immutable, jitter_immutable, metric_immutable] = _ref52;\n  const metric = int(metric_immutable).toVar();\n  const jitter = float(jitter_immutable).toVar();\n  const p = vec2(p_immutable).toVar();\n  const X = int().toVar(),\n    Y = int().toVar();\n  const localpos = vec2(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y)).toVar();\n  const sqdist = vec2(1e6, 1e6).toVar();\n  loop({\n    start: -1,\n    end: int(1),\n    name: 'x',\n    condition: '<='\n  }, _ref53 => {\n    let {\n      x\n    } = _ref53;\n    loop({\n      start: -1,\n      end: int(1),\n      name: 'y',\n      condition: '<='\n    }, _ref54 => {\n      let {\n        y\n      } = _ref54;\n      const dist = float(mx_worley_distance(localpos, x, y, X, Y, jitter, metric)).toVar();\n      If(dist.lessThan(sqdist.x), () => {\n        sqdist.y.assign(sqdist.x);\n        sqdist.x.assign(dist);\n      }).elseif(dist.lessThan(sqdist.y), () => {\n        sqdist.y.assign(dist);\n      });\n    });\n  });\n  If(metric.equal(int(0)), () => {\n    sqdist.assign(sqrt(sqdist));\n  });\n  return sqdist;\n});\nconst mx_worley_noise_vec3_0 = tslFn(_ref55 => {\n  let [p_immutable, jitter_immutable, metric_immutable] = _ref55;\n  const metric = int(metric_immutable).toVar();\n  const jitter = float(jitter_immutable).toVar();\n  const p = vec2(p_immutable).toVar();\n  const X = int().toVar(),\n    Y = int().toVar();\n  const localpos = vec2(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y)).toVar();\n  const sqdist = vec3(1e6, 1e6, 1e6).toVar();\n  loop({\n    start: -1,\n    end: int(1),\n    name: 'x',\n    condition: '<='\n  }, _ref56 => {\n    let {\n      x\n    } = _ref56;\n    loop({\n      start: -1,\n      end: int(1),\n      name: 'y',\n      condition: '<='\n    }, _ref57 => {\n      let {\n        y\n      } = _ref57;\n      const dist = float(mx_worley_distance(localpos, x, y, X, Y, jitter, metric)).toVar();\n      If(dist.lessThan(sqdist.x), () => {\n        sqdist.z.assign(sqdist.y);\n        sqdist.y.assign(sqdist.x);\n        sqdist.x.assign(dist);\n      }).elseif(dist.lessThan(sqdist.y), () => {\n        sqdist.z.assign(sqdist.y);\n        sqdist.y.assign(dist);\n      }).elseif(dist.lessThan(sqdist.z), () => {\n        sqdist.z.assign(dist);\n      });\n    });\n  });\n  If(metric.equal(int(0)), () => {\n    sqdist.assign(sqrt(sqdist));\n  });\n  return sqdist;\n});\nconst mx_worley_noise_float_1 = tslFn(_ref58 => {\n  let [p_immutable, jitter_immutable, metric_immutable] = _ref58;\n  const metric = int(metric_immutable).toVar();\n  const jitter = float(jitter_immutable).toVar();\n  const p = vec3(p_immutable).toVar();\n  const X = int().toVar(),\n    Y = int().toVar(),\n    Z = int().toVar();\n  const localpos = vec3(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y), mx_floorfrac(p.z, Z)).toVar();\n  const sqdist = float(1e6).toVar();\n  loop({\n    start: -1,\n    end: int(1),\n    name: 'x',\n    condition: '<='\n  }, _ref59 => {\n    let {\n      x\n    } = _ref59;\n    loop({\n      start: -1,\n      end: int(1),\n      name: 'y',\n      condition: '<='\n    }, _ref60 => {\n      let {\n        y\n      } = _ref60;\n      loop({\n        start: -1,\n        end: int(1),\n        name: 'z',\n        condition: '<='\n      }, _ref61 => {\n        let {\n          z\n        } = _ref61;\n        const dist = float(mx_worley_distance(localpos, x, y, z, X, Y, Z, jitter, metric)).toVar();\n        sqdist.assign(min(sqdist, dist));\n      });\n    });\n  });\n  If(metric.equal(int(0)), () => {\n    sqdist.assign(sqrt(sqdist));\n  });\n  return sqdist;\n});\nconst mx_worley_noise_float = overloadingFn([mx_worley_noise_float_0, mx_worley_noise_float_1]);\nconst mx_worley_noise_vec2_1 = tslFn(_ref62 => {\n  let [p_immutable, jitter_immutable, metric_immutable] = _ref62;\n  const metric = int(metric_immutable).toVar();\n  const jitter = float(jitter_immutable).toVar();\n  const p = vec3(p_immutable).toVar();\n  const X = int().toVar(),\n    Y = int().toVar(),\n    Z = int().toVar();\n  const localpos = vec3(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y), mx_floorfrac(p.z, Z)).toVar();\n  const sqdist = vec2(1e6, 1e6).toVar();\n  loop({\n    start: -1,\n    end: int(1),\n    name: 'x',\n    condition: '<='\n  }, _ref63 => {\n    let {\n      x\n    } = _ref63;\n    loop({\n      start: -1,\n      end: int(1),\n      name: 'y',\n      condition: '<='\n    }, _ref64 => {\n      let {\n        y\n      } = _ref64;\n      loop({\n        start: -1,\n        end: int(1),\n        name: 'z',\n        condition: '<='\n      }, _ref65 => {\n        let {\n          z\n        } = _ref65;\n        const dist = float(mx_worley_distance(localpos, x, y, z, X, Y, Z, jitter, metric)).toVar();\n        If(dist.lessThan(sqdist.x), () => {\n          sqdist.y.assign(sqdist.x);\n          sqdist.x.assign(dist);\n        }).elseif(dist.lessThan(sqdist.y), () => {\n          sqdist.y.assign(dist);\n        });\n      });\n    });\n  });\n  If(metric.equal(int(0)), () => {\n    sqdist.assign(sqrt(sqdist));\n  });\n  return sqdist;\n});\nconst mx_worley_noise_vec2 = overloadingFn([mx_worley_noise_vec2_0, mx_worley_noise_vec2_1]);\nconst mx_worley_noise_vec3_1 = tslFn(_ref66 => {\n  let [p_immutable, jitter_immutable, metric_immutable] = _ref66;\n  const metric = int(metric_immutable).toVar();\n  const jitter = float(jitter_immutable).toVar();\n  const p = vec3(p_immutable).toVar();\n  const X = int().toVar(),\n    Y = int().toVar(),\n    Z = int().toVar();\n  const localpos = vec3(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y), mx_floorfrac(p.z, Z)).toVar();\n  const sqdist = vec3(1e6, 1e6, 1e6).toVar();\n  loop({\n    start: -1,\n    end: int(1),\n    name: 'x',\n    condition: '<='\n  }, _ref67 => {\n    let {\n      x\n    } = _ref67;\n    loop({\n      start: -1,\n      end: int(1),\n      name: 'y',\n      condition: '<='\n    }, _ref68 => {\n      let {\n        y\n      } = _ref68;\n      loop({\n        start: -1,\n        end: int(1),\n        name: 'z',\n        condition: '<='\n      }, _ref69 => {\n        let {\n          z\n        } = _ref69;\n        const dist = float(mx_worley_distance(localpos, x, y, z, X, Y, Z, jitter, metric)).toVar();\n        If(dist.lessThan(sqdist.x), () => {\n          sqdist.z.assign(sqdist.y);\n          sqdist.y.assign(sqdist.x);\n          sqdist.x.assign(dist);\n        }).elseif(dist.lessThan(sqdist.y), () => {\n          sqdist.z.assign(sqdist.y);\n          sqdist.y.assign(dist);\n        }).elseif(dist.lessThan(sqdist.z), () => {\n          sqdist.z.assign(dist);\n        });\n      });\n    });\n  });\n  If(metric.equal(int(0)), () => {\n    sqdist.assign(sqrt(sqdist));\n  });\n  return sqdist;\n});\nconst mx_worley_noise_vec3 = overloadingFn([mx_worley_noise_vec3_0, mx_worley_noise_vec3_1]);\n\n// layouts\n\nmx_select.setLayout({\n  name: 'mx_select',\n  type: 'float',\n  inputs: [{\n    name: 'b',\n    type: 'bool'\n  }, {\n    name: 't',\n    type: 'float'\n  }, {\n    name: 'f',\n    type: 'float'\n  }]\n});\nmx_negate_if.setLayout({\n  name: 'mx_negate_if',\n  type: 'float',\n  inputs: [{\n    name: 'val',\n    type: 'float'\n  }, {\n    name: 'b',\n    type: 'bool'\n  }]\n});\nmx_floor.setLayout({\n  name: 'mx_floor',\n  type: 'int',\n  inputs: [{\n    name: 'x',\n    type: 'float'\n  }]\n});\nmx_bilerp_0.setLayout({\n  name: 'mx_bilerp_0',\n  type: 'float',\n  inputs: [{\n    name: 'v0',\n    type: 'float'\n  }, {\n    name: 'v1',\n    type: 'float'\n  }, {\n    name: 'v2',\n    type: 'float'\n  }, {\n    name: 'v3',\n    type: 'float'\n  }, {\n    name: 's',\n    type: 'float'\n  }, {\n    name: 't',\n    type: 'float'\n  }]\n});\nmx_bilerp_1.setLayout({\n  name: 'mx_bilerp_1',\n  type: 'vec3',\n  inputs: [{\n    name: 'v0',\n    type: 'vec3'\n  }, {\n    name: 'v1',\n    type: 'vec3'\n  }, {\n    name: 'v2',\n    type: 'vec3'\n  }, {\n    name: 'v3',\n    type: 'vec3'\n  }, {\n    name: 's',\n    type: 'float'\n  }, {\n    name: 't',\n    type: 'float'\n  }]\n});\nmx_trilerp_0.setLayout({\n  name: 'mx_trilerp_0',\n  type: 'float',\n  inputs: [{\n    name: 'v0',\n    type: 'float'\n  }, {\n    name: 'v1',\n    type: 'float'\n  }, {\n    name: 'v2',\n    type: 'float'\n  }, {\n    name: 'v3',\n    type: 'float'\n  }, {\n    name: 'v4',\n    type: 'float'\n  }, {\n    name: 'v5',\n    type: 'float'\n  }, {\n    name: 'v6',\n    type: 'float'\n  }, {\n    name: 'v7',\n    type: 'float'\n  }, {\n    name: 's',\n    type: 'float'\n  }, {\n    name: 't',\n    type: 'float'\n  }, {\n    name: 'r',\n    type: 'float'\n  }]\n});\nmx_trilerp_1.setLayout({\n  name: 'mx_trilerp_1',\n  type: 'vec3',\n  inputs: [{\n    name: 'v0',\n    type: 'vec3'\n  }, {\n    name: 'v1',\n    type: 'vec3'\n  }, {\n    name: 'v2',\n    type: 'vec3'\n  }, {\n    name: 'v3',\n    type: 'vec3'\n  }, {\n    name: 'v4',\n    type: 'vec3'\n  }, {\n    name: 'v5',\n    type: 'vec3'\n  }, {\n    name: 'v6',\n    type: 'vec3'\n  }, {\n    name: 'v7',\n    type: 'vec3'\n  }, {\n    name: 's',\n    type: 'float'\n  }, {\n    name: 't',\n    type: 'float'\n  }, {\n    name: 'r',\n    type: 'float'\n  }]\n});\nmx_gradient_float_0.setLayout({\n  name: 'mx_gradient_float_0',\n  type: 'float',\n  inputs: [{\n    name: 'hash',\n    type: 'uint'\n  }, {\n    name: 'x',\n    type: 'float'\n  }, {\n    name: 'y',\n    type: 'float'\n  }]\n});\nmx_gradient_float_1.setLayout({\n  name: 'mx_gradient_float_1',\n  type: 'float',\n  inputs: [{\n    name: 'hash',\n    type: 'uint'\n  }, {\n    name: 'x',\n    type: 'float'\n  }, {\n    name: 'y',\n    type: 'float'\n  }, {\n    name: 'z',\n    type: 'float'\n  }]\n});\nmx_gradient_vec3_0.setLayout({\n  name: 'mx_gradient_vec3_0',\n  type: 'vec3',\n  inputs: [{\n    name: 'hash',\n    type: 'uvec3'\n  }, {\n    name: 'x',\n    type: 'float'\n  }, {\n    name: 'y',\n    type: 'float'\n  }]\n});\nmx_gradient_vec3_1.setLayout({\n  name: 'mx_gradient_vec3_1',\n  type: 'vec3',\n  inputs: [{\n    name: 'hash',\n    type: 'uvec3'\n  }, {\n    name: 'x',\n    type: 'float'\n  }, {\n    name: 'y',\n    type: 'float'\n  }, {\n    name: 'z',\n    type: 'float'\n  }]\n});\nmx_gradient_scale2d_0.setLayout({\n  name: 'mx_gradient_scale2d_0',\n  type: 'float',\n  inputs: [{\n    name: 'v',\n    type: 'float'\n  }]\n});\nmx_gradient_scale3d_0.setLayout({\n  name: 'mx_gradient_scale3d_0',\n  type: 'float',\n  inputs: [{\n    name: 'v',\n    type: 'float'\n  }]\n});\nmx_gradient_scale2d_1.setLayout({\n  name: 'mx_gradient_scale2d_1',\n  type: 'vec3',\n  inputs: [{\n    name: 'v',\n    type: 'vec3'\n  }]\n});\nmx_gradient_scale3d_1.setLayout({\n  name: 'mx_gradient_scale3d_1',\n  type: 'vec3',\n  inputs: [{\n    name: 'v',\n    type: 'vec3'\n  }]\n});\nmx_rotl32.setLayout({\n  name: 'mx_rotl32',\n  type: 'uint',\n  inputs: [{\n    name: 'x',\n    type: 'uint'\n  }, {\n    name: 'k',\n    type: 'int'\n  }]\n});\nmx_bjfinal.setLayout({\n  name: 'mx_bjfinal',\n  type: 'uint',\n  inputs: [{\n    name: 'a',\n    type: 'uint'\n  }, {\n    name: 'b',\n    type: 'uint'\n  }, {\n    name: 'c',\n    type: 'uint'\n  }]\n});\nmx_bits_to_01.setLayout({\n  name: 'mx_bits_to_01',\n  type: 'float',\n  inputs: [{\n    name: 'bits',\n    type: 'uint'\n  }]\n});\nmx_fade.setLayout({\n  name: 'mx_fade',\n  type: 'float',\n  inputs: [{\n    name: 't',\n    type: 'float'\n  }]\n});\nmx_hash_int_0.setLayout({\n  name: 'mx_hash_int_0',\n  type: 'uint',\n  inputs: [{\n    name: 'x',\n    type: 'int'\n  }]\n});\nmx_hash_int_1.setLayout({\n  name: 'mx_hash_int_1',\n  type: 'uint',\n  inputs: [{\n    name: 'x',\n    type: 'int'\n  }, {\n    name: 'y',\n    type: 'int'\n  }]\n});\nmx_hash_int_2.setLayout({\n  name: 'mx_hash_int_2',\n  type: 'uint',\n  inputs: [{\n    name: 'x',\n    type: 'int'\n  }, {\n    name: 'y',\n    type: 'int'\n  }, {\n    name: 'z',\n    type: 'int'\n  }]\n});\nmx_hash_int_3.setLayout({\n  name: 'mx_hash_int_3',\n  type: 'uint',\n  inputs: [{\n    name: 'x',\n    type: 'int'\n  }, {\n    name: 'y',\n    type: 'int'\n  }, {\n    name: 'z',\n    type: 'int'\n  }, {\n    name: 'xx',\n    type: 'int'\n  }]\n});\nmx_hash_int_4.setLayout({\n  name: 'mx_hash_int_4',\n  type: 'uint',\n  inputs: [{\n    name: 'x',\n    type: 'int'\n  }, {\n    name: 'y',\n    type: 'int'\n  }, {\n    name: 'z',\n    type: 'int'\n  }, {\n    name: 'xx',\n    type: 'int'\n  }, {\n    name: 'yy',\n    type: 'int'\n  }]\n});\nmx_hash_vec3_0.setLayout({\n  name: 'mx_hash_vec3_0',\n  type: 'uvec3',\n  inputs: [{\n    name: 'x',\n    type: 'int'\n  }, {\n    name: 'y',\n    type: 'int'\n  }]\n});\nmx_hash_vec3_1.setLayout({\n  name: 'mx_hash_vec3_1',\n  type: 'uvec3',\n  inputs: [{\n    name: 'x',\n    type: 'int'\n  }, {\n    name: 'y',\n    type: 'int'\n  }, {\n    name: 'z',\n    type: 'int'\n  }]\n});\nmx_perlin_noise_float_0.setLayout({\n  name: 'mx_perlin_noise_float_0',\n  type: 'float',\n  inputs: [{\n    name: 'p',\n    type: 'vec2'\n  }]\n});\nmx_perlin_noise_float_1.setLayout({\n  name: 'mx_perlin_noise_float_1',\n  type: 'float',\n  inputs: [{\n    name: 'p',\n    type: 'vec3'\n  }]\n});\nmx_perlin_noise_vec3_0.setLayout({\n  name: 'mx_perlin_noise_vec3_0',\n  type: 'vec3',\n  inputs: [{\n    name: 'p',\n    type: 'vec2'\n  }]\n});\nmx_perlin_noise_vec3_1.setLayout({\n  name: 'mx_perlin_noise_vec3_1',\n  type: 'vec3',\n  inputs: [{\n    name: 'p',\n    type: 'vec3'\n  }]\n});\nmx_cell_noise_float_0.setLayout({\n  name: 'mx_cell_noise_float_0',\n  type: 'float',\n  inputs: [{\n    name: 'p',\n    type: 'float'\n  }]\n});\nmx_cell_noise_float_1.setLayout({\n  name: 'mx_cell_noise_float_1',\n  type: 'float',\n  inputs: [{\n    name: 'p',\n    type: 'vec2'\n  }]\n});\nmx_cell_noise_float_2.setLayout({\n  name: 'mx_cell_noise_float_2',\n  type: 'float',\n  inputs: [{\n    name: 'p',\n    type: 'vec3'\n  }]\n});\nmx_cell_noise_float_3.setLayout({\n  name: 'mx_cell_noise_float_3',\n  type: 'float',\n  inputs: [{\n    name: 'p',\n    type: 'vec4'\n  }]\n});\nmx_cell_noise_vec3_0.setLayout({\n  name: 'mx_cell_noise_vec3_0',\n  type: 'vec3',\n  inputs: [{\n    name: 'p',\n    type: 'float'\n  }]\n});\nmx_cell_noise_vec3_1.setLayout({\n  name: 'mx_cell_noise_vec3_1',\n  type: 'vec3',\n  inputs: [{\n    name: 'p',\n    type: 'vec2'\n  }]\n});\nmx_cell_noise_vec3_2.setLayout({\n  name: 'mx_cell_noise_vec3_2',\n  type: 'vec3',\n  inputs: [{\n    name: 'p',\n    type: 'vec3'\n  }]\n});\nmx_cell_noise_vec3_3.setLayout({\n  name: 'mx_cell_noise_vec3_3',\n  type: 'vec3',\n  inputs: [{\n    name: 'p',\n    type: 'vec4'\n  }]\n});\nmx_fractal_noise_float.setLayout({\n  name: 'mx_fractal_noise_float',\n  type: 'float',\n  inputs: [{\n    name: 'p',\n    type: 'vec3'\n  }, {\n    name: 'octaves',\n    type: 'int'\n  }, {\n    name: 'lacunarity',\n    type: 'float'\n  }, {\n    name: 'diminish',\n    type: 'float'\n  }]\n});\nmx_fractal_noise_vec3.setLayout({\n  name: 'mx_fractal_noise_vec3',\n  type: 'vec3',\n  inputs: [{\n    name: 'p',\n    type: 'vec3'\n  }, {\n    name: 'octaves',\n    type: 'int'\n  }, {\n    name: 'lacunarity',\n    type: 'float'\n  }, {\n    name: 'diminish',\n    type: 'float'\n  }]\n});\nmx_fractal_noise_vec2.setLayout({\n  name: 'mx_fractal_noise_vec2',\n  type: 'vec2',\n  inputs: [{\n    name: 'p',\n    type: 'vec3'\n  }, {\n    name: 'octaves',\n    type: 'int'\n  }, {\n    name: 'lacunarity',\n    type: 'float'\n  }, {\n    name: 'diminish',\n    type: 'float'\n  }]\n});\nmx_fractal_noise_vec4.setLayout({\n  name: 'mx_fractal_noise_vec4',\n  type: 'vec4',\n  inputs: [{\n    name: 'p',\n    type: 'vec3'\n  }, {\n    name: 'octaves',\n    type: 'int'\n  }, {\n    name: 'lacunarity',\n    type: 'float'\n  }, {\n    name: 'diminish',\n    type: 'float'\n  }]\n});\nmx_worley_distance_0.setLayout({\n  name: 'mx_worley_distance_0',\n  type: 'float',\n  inputs: [{\n    name: 'p',\n    type: 'vec2'\n  }, {\n    name: 'x',\n    type: 'int'\n  }, {\n    name: 'y',\n    type: 'int'\n  }, {\n    name: 'xoff',\n    type: 'int'\n  }, {\n    name: 'yoff',\n    type: 'int'\n  }, {\n    name: 'jitter',\n    type: 'float'\n  }, {\n    name: 'metric',\n    type: 'int'\n  }]\n});\nmx_worley_distance_1.setLayout({\n  name: 'mx_worley_distance_1',\n  type: 'float',\n  inputs: [{\n    name: 'p',\n    type: 'vec3'\n  }, {\n    name: 'x',\n    type: 'int'\n  }, {\n    name: 'y',\n    type: 'int'\n  }, {\n    name: 'z',\n    type: 'int'\n  }, {\n    name: 'xoff',\n    type: 'int'\n  }, {\n    name: 'yoff',\n    type: 'int'\n  }, {\n    name: 'zoff',\n    type: 'int'\n  }, {\n    name: 'jitter',\n    type: 'float'\n  }, {\n    name: 'metric',\n    type: 'int'\n  }]\n});\nmx_worley_noise_float_0.setLayout({\n  name: 'mx_worley_noise_float_0',\n  type: 'float',\n  inputs: [{\n    name: 'p',\n    type: 'vec2'\n  }, {\n    name: 'jitter',\n    type: 'float'\n  }, {\n    name: 'metric',\n    type: 'int'\n  }]\n});\nmx_worley_noise_vec2_0.setLayout({\n  name: 'mx_worley_noise_vec2_0',\n  type: 'vec2',\n  inputs: [{\n    name: 'p',\n    type: 'vec2'\n  }, {\n    name: 'jitter',\n    type: 'float'\n  }, {\n    name: 'metric',\n    type: 'int'\n  }]\n});\nmx_worley_noise_vec3_0.setLayout({\n  name: 'mx_worley_noise_vec3_0',\n  type: 'vec3',\n  inputs: [{\n    name: 'p',\n    type: 'vec2'\n  }, {\n    name: 'jitter',\n    type: 'float'\n  }, {\n    name: 'metric',\n    type: 'int'\n  }]\n});\nmx_worley_noise_float_1.setLayout({\n  name: 'mx_worley_noise_float_1',\n  type: 'float',\n  inputs: [{\n    name: 'p',\n    type: 'vec3'\n  }, {\n    name: 'jitter',\n    type: 'float'\n  }, {\n    name: 'metric',\n    type: 'int'\n  }]\n});\nmx_worley_noise_vec2_1.setLayout({\n  name: 'mx_worley_noise_vec2_1',\n  type: 'vec2',\n  inputs: [{\n    name: 'p',\n    type: 'vec3'\n  }, {\n    name: 'jitter',\n    type: 'float'\n  }, {\n    name: 'metric',\n    type: 'int'\n  }]\n});\nmx_worley_noise_vec3_1.setLayout({\n  name: 'mx_worley_noise_vec3_1',\n  type: 'vec3',\n  inputs: [{\n    name: 'p',\n    type: 'vec3'\n  }, {\n    name: 'jitter',\n    type: 'float'\n  }, {\n    name: 'metric',\n    type: 'int'\n  }]\n});\nexport { mx_select, mx_negate_if, mx_floor, mx_floorfrac, mx_bilerp, mx_trilerp, mx_gradient_float, mx_gradient_vec3, mx_gradient_scale2d, mx_gradient_scale3d, mx_rotl32, mx_bjmix, mx_bjfinal, mx_bits_to_01, mx_fade, mx_hash_int, mx_hash_vec3, mx_perlin_noise_float, mx_perlin_noise_vec3, mx_cell_noise_float, mx_cell_noise_vec3, mx_fractal_noise_float, mx_fractal_noise_vec3, mx_fractal_noise_vec2, mx_fractal_noise_vec4, mx_worley_distance, mx_worley_noise_float, mx_worley_noise_vec2, mx_worley_noise_vec3 };","map":{"version":3,"names":["int","uint","float","vec3","bool","uvec3","vec2","vec4","If","tslFn","cond","sub","mul","floor","abs","max","dot","min","sqrt","overloadingFn","loop","mx_select","_ref","b_immutable","t_immutable","f_immutable","f","toVar","t","b","mx_negate_if","_ref2","val_immutable","val","negate","mx_floor","_ref3","x_immutable","x","mx_floorfrac","_ref4","i","assign","mx_bilerp_0","_ref5","v0_immutable","v1_immutable","v2_immutable","v3_immutable","s_immutable","s","v3","v2","v1","v0","s1","add","mx_bilerp_1","_ref6","mx_bilerp","mx_trilerp_0","_ref7","v4_immutable","v5_immutable","v6_immutable","v7_immutable","r_immutable","r","v7","v6","v5","v4","t1","r1","mx_trilerp_1","_ref8","mx_trilerp","mx_gradient_float_0","_ref9","hash_immutable","y_immutable","y","hash","h","bitAnd","u","lessThan","v","mx_gradient_float_1","_ref10","z_immutable","z","equal","or","mx_gradient_float","mx_gradient_vec3_0","_ref11","mx_gradient_vec3_1","_ref12","mx_gradient_vec3","mx_gradient_scale2d_0","_ref13","v_immutable","mx_gradient_scale3d_0","_ref14","mx_gradient_scale2d_1","_ref15","mx_gradient_scale2d","mx_gradient_scale3d_1","_ref16","mx_gradient_scale3d","mx_rotl32","_ref17","k_immutable","k","shiftLeft","bitOr","shiftRight","mx_bjmix","_ref18","a","c","subAssign","bitXorAssign","addAssign","mx_bjfinal","_ref19","a_immutable","c_immutable","mx_bits_to_01","_ref20","bits_immutable","bits","div","mx_fade","_ref21","mx_hash_int_0","_ref22","len","seed","mx_hash_int_1","_ref23","mx_hash_int_2","_ref24","mx_hash_int_3","_ref25","xx_immutable","xx","mx_hash_int_4","_ref26","yy_immutable","yy","mx_hash_int","mx_hash_vec3_0","_ref27","result","mx_hash_vec3_1","_ref28","mx_hash_vec3","mx_perlin_noise_float_0","_ref29","p_immutable","p","X","Y","fx","fy","mx_perlin_noise_float_1","_ref30","Z","fz","w","mx_perlin_noise_float","mx_perlin_noise_vec3_0","_ref31","mx_perlin_noise_vec3_1","_ref32","mx_perlin_noise_vec3","mx_cell_noise_float_0","_ref33","ix","mx_cell_noise_float_1","_ref34","iy","mx_cell_noise_float_2","_ref35","iz","mx_cell_noise_float_3","_ref36","iw","mx_cell_noise_float","mx_cell_noise_vec3_0","_ref37","mx_cell_noise_vec3_1","_ref38","mx_cell_noise_vec3_2","_ref39","mx_cell_noise_vec3_3","_ref40","mx_cell_noise_vec3","mx_fractal_noise_float","_ref41","octaves_immutable","lacunarity_immutable","diminish_immutable","diminish","lacunarity","octaves","amplitude","start","end","_ref42","mulAssign","mx_fractal_noise_vec3","_ref43","_ref44","mx_fractal_noise_vec2","_ref45","mx_fractal_noise_vec4","_ref46","mx_worley_distance_0","_ref47","xoff_immutable","yoff_immutable","jitter_immutable","metric_immutable","metric","jitter","yoff","xoff","tmp","off","cellpos","diff","mx_worley_distance_1","_ref48","zoff_immutable","zoff","mx_worley_distance","mx_worley_noise_float_0","_ref49","localpos","sqdist","name","condition","_ref50","_ref51","dist","mx_worley_noise_vec2_0","_ref52","_ref53","_ref54","elseif","mx_worley_noise_vec3_0","_ref55","_ref56","_ref57","mx_worley_noise_float_1","_ref58","_ref59","_ref60","_ref61","mx_worley_noise_float","mx_worley_noise_vec2_1","_ref62","_ref63","_ref64","_ref65","mx_worley_noise_vec2","mx_worley_noise_vec3_1","_ref66","_ref67","_ref68","_ref69","mx_worley_noise_vec3","setLayout","type","inputs"],"sources":["/Users/vedant/node_modules/three/examples/jsm/nodes/materialx/lib/mx_noise.js"],"sourcesContent":["// Three.js Transpiler\n// https://raw.githubusercontent.com/AcademySoftwareFoundation/MaterialX/main/libraries/stdlib/genglsl/lib/mx_noise.glsl\n\nimport { int, uint, float, vec3, bool, uvec3, vec2, vec4, If, tslFn } from '../../shadernode/ShaderNode.js';\nimport { cond } from '../../math/CondNode.js';\nimport { sub, mul } from '../../math/OperatorNode.js';\nimport { floor, abs, max, dot, min, sqrt } from '../../math/MathNode.js';\nimport { overloadingFn } from '../../utils/FunctionOverloadingNode.js';\nimport { loop } from '../../utils/LoopNode.js';\n\nconst mx_select = tslFn( ( [ b_immutable, t_immutable, f_immutable ] ) => {\n\n\tconst f = float( f_immutable ).toVar();\n\tconst t = float( t_immutable ).toVar();\n\tconst b = bool( b_immutable ).toVar();\n\n\treturn cond( b, t, f );\n\n} );\n\nconst mx_negate_if = tslFn( ( [ val_immutable, b_immutable ] ) => {\n\n\tconst b = bool( b_immutable ).toVar();\n\tconst val = float( val_immutable ).toVar();\n\n\treturn cond( b, val.negate(), val );\n\n} );\n\nconst mx_floor = tslFn( ( [ x_immutable ] ) => {\n\n\tconst x = float( x_immutable ).toVar();\n\n\treturn int( floor( x ) );\n\n} );\n\nconst mx_floorfrac = tslFn( ( [ x_immutable, i ] ) => {\n\n\tconst x = float( x_immutable ).toVar();\n\ti.assign( mx_floor( x ) );\n\n\treturn x.sub( float( i ) );\n\n} );\n\nconst mx_bilerp_0 = tslFn( ( [ v0_immutable, v1_immutable, v2_immutable, v3_immutable, s_immutable, t_immutable ] ) => {\n\n\tconst t = float( t_immutable ).toVar();\n\tconst s = float( s_immutable ).toVar();\n\tconst v3 = float( v3_immutable ).toVar();\n\tconst v2 = float( v2_immutable ).toVar();\n\tconst v1 = float( v1_immutable ).toVar();\n\tconst v0 = float( v0_immutable ).toVar();\n\tconst s1 = float( sub( 1.0, s ) ).toVar();\n\n\treturn sub( 1.0, t ).mul( v0.mul( s1 ).add( v1.mul( s ) ) ).add( t.mul( v2.mul( s1 ).add( v3.mul( s ) ) ) );\n\n} );\n\nconst mx_bilerp_1 = tslFn( ( [ v0_immutable, v1_immutable, v2_immutable, v3_immutable, s_immutable, t_immutable ] ) => {\n\n\tconst t = float( t_immutable ).toVar();\n\tconst s = float( s_immutable ).toVar();\n\tconst v3 = vec3( v3_immutable ).toVar();\n\tconst v2 = vec3( v2_immutable ).toVar();\n\tconst v1 = vec3( v1_immutable ).toVar();\n\tconst v0 = vec3( v0_immutable ).toVar();\n\tconst s1 = float( sub( 1.0, s ) ).toVar();\n\n\treturn sub( 1.0, t ).mul( v0.mul( s1 ).add( v1.mul( s ) ) ).add( t.mul( v2.mul( s1 ).add( v3.mul( s ) ) ) );\n\n} );\n\nconst mx_bilerp = overloadingFn( [ mx_bilerp_0, mx_bilerp_1 ] );\n\nconst mx_trilerp_0 = tslFn( ( [ v0_immutable, v1_immutable, v2_immutable, v3_immutable, v4_immutable, v5_immutable, v6_immutable, v7_immutable, s_immutable, t_immutable, r_immutable ] ) => {\n\n\tconst r = float( r_immutable ).toVar();\n\tconst t = float( t_immutable ).toVar();\n\tconst s = float( s_immutable ).toVar();\n\tconst v7 = float( v7_immutable ).toVar();\n\tconst v6 = float( v6_immutable ).toVar();\n\tconst v5 = float( v5_immutable ).toVar();\n\tconst v4 = float( v4_immutable ).toVar();\n\tconst v3 = float( v3_immutable ).toVar();\n\tconst v2 = float( v2_immutable ).toVar();\n\tconst v1 = float( v1_immutable ).toVar();\n\tconst v0 = float( v0_immutable ).toVar();\n\tconst s1 = float( sub( 1.0, s ) ).toVar();\n\tconst t1 = float( sub( 1.0, t ) ).toVar();\n\tconst r1 = float( sub( 1.0, r ) ).toVar();\n\n\treturn r1.mul( t1.mul( v0.mul( s1 ).add( v1.mul( s ) ) ).add( t.mul( v2.mul( s1 ).add( v3.mul( s ) ) ) ) ).add( r.mul( t1.mul( v4.mul( s1 ).add( v5.mul( s ) ) ).add( t.mul( v6.mul( s1 ).add( v7.mul( s ) ) ) ) ) );\n\n} );\n\nconst mx_trilerp_1 = tslFn( ( [ v0_immutable, v1_immutable, v2_immutable, v3_immutable, v4_immutable, v5_immutable, v6_immutable, v7_immutable, s_immutable, t_immutable, r_immutable ] ) => {\n\n\tconst r = float( r_immutable ).toVar();\n\tconst t = float( t_immutable ).toVar();\n\tconst s = float( s_immutable ).toVar();\n\tconst v7 = vec3( v7_immutable ).toVar();\n\tconst v6 = vec3( v6_immutable ).toVar();\n\tconst v5 = vec3( v5_immutable ).toVar();\n\tconst v4 = vec3( v4_immutable ).toVar();\n\tconst v3 = vec3( v3_immutable ).toVar();\n\tconst v2 = vec3( v2_immutable ).toVar();\n\tconst v1 = vec3( v1_immutable ).toVar();\n\tconst v0 = vec3( v0_immutable ).toVar();\n\tconst s1 = float( sub( 1.0, s ) ).toVar();\n\tconst t1 = float( sub( 1.0, t ) ).toVar();\n\tconst r1 = float( sub( 1.0, r ) ).toVar();\n\n\treturn r1.mul( t1.mul( v0.mul( s1 ).add( v1.mul( s ) ) ).add( t.mul( v2.mul( s1 ).add( v3.mul( s ) ) ) ) ).add( r.mul( t1.mul( v4.mul( s1 ).add( v5.mul( s ) ) ).add( t.mul( v6.mul( s1 ).add( v7.mul( s ) ) ) ) ) );\n\n} );\n\nconst mx_trilerp = overloadingFn( [ mx_trilerp_0, mx_trilerp_1 ] );\n\nconst mx_gradient_float_0 = tslFn( ( [ hash_immutable, x_immutable, y_immutable ] ) => {\n\n\tconst y = float( y_immutable ).toVar();\n\tconst x = float( x_immutable ).toVar();\n\tconst hash = uint( hash_immutable ).toVar();\n\tconst h = uint( hash.bitAnd( uint( 7 ) ) ).toVar();\n\tconst u = float( mx_select( h.lessThan( uint( 4 ) ), x, y ) ).toVar();\n\tconst v = float( mul( 2.0, mx_select( h.lessThan( uint( 4 ) ), y, x ) ) ).toVar();\n\n\treturn mx_negate_if( u, bool( h.bitAnd( uint( 1 ) ) ) ).add( mx_negate_if( v, bool( h.bitAnd( uint( 2 ) ) ) ) );\n\n} );\n\nconst mx_gradient_float_1 = tslFn( ( [ hash_immutable, x_immutable, y_immutable, z_immutable ] ) => {\n\n\tconst z = float( z_immutable ).toVar();\n\tconst y = float( y_immutable ).toVar();\n\tconst x = float( x_immutable ).toVar();\n\tconst hash = uint( hash_immutable ).toVar();\n\tconst h = uint( hash.bitAnd( uint( 15 ) ) ).toVar();\n\tconst u = float( mx_select( h.lessThan( uint( 8 ) ), x, y ) ).toVar();\n\tconst v = float( mx_select( h.lessThan( uint( 4 ) ), y, mx_select( h.equal( uint( 12 ) ).or( h.equal( uint( 14 ) ) ), x, z ) ) ).toVar();\n\n\treturn mx_negate_if( u, bool( h.bitAnd( uint( 1 ) ) ) ).add( mx_negate_if( v, bool( h.bitAnd( uint( 2 ) ) ) ) );\n\n} );\n\nconst mx_gradient_float = overloadingFn( [ mx_gradient_float_0, mx_gradient_float_1 ] );\n\nconst mx_gradient_vec3_0 = tslFn( ( [ hash_immutable, x_immutable, y_immutable ] ) => {\n\n\tconst y = float( y_immutable ).toVar();\n\tconst x = float( x_immutable ).toVar();\n\tconst hash = uvec3( hash_immutable ).toVar();\n\n\treturn vec3( mx_gradient_float( hash.x, x, y ), mx_gradient_float( hash.y, x, y ), mx_gradient_float( hash.z, x, y ) );\n\n} );\n\nconst mx_gradient_vec3_1 = tslFn( ( [ hash_immutable, x_immutable, y_immutable, z_immutable ] ) => {\n\n\tconst z = float( z_immutable ).toVar();\n\tconst y = float( y_immutable ).toVar();\n\tconst x = float( x_immutable ).toVar();\n\tconst hash = uvec3( hash_immutable ).toVar();\n\n\treturn vec3( mx_gradient_float( hash.x, x, y, z ), mx_gradient_float( hash.y, x, y, z ), mx_gradient_float( hash.z, x, y, z ) );\n\n} );\n\nconst mx_gradient_vec3 = overloadingFn( [ mx_gradient_vec3_0, mx_gradient_vec3_1 ] );\n\nconst mx_gradient_scale2d_0 = tslFn( ( [ v_immutable ] ) => {\n\n\tconst v = float( v_immutable ).toVar();\n\n\treturn mul( 0.6616, v );\n\n} );\n\nconst mx_gradient_scale3d_0 = tslFn( ( [ v_immutable ] ) => {\n\n\tconst v = float( v_immutable ).toVar();\n\n\treturn mul( 0.9820, v );\n\n} );\n\nconst mx_gradient_scale2d_1 = tslFn( ( [ v_immutable ] ) => {\n\n\tconst v = vec3( v_immutable ).toVar();\n\n\treturn mul( 0.6616, v );\n\n} );\n\nconst mx_gradient_scale2d = overloadingFn( [ mx_gradient_scale2d_0, mx_gradient_scale2d_1 ] );\n\nconst mx_gradient_scale3d_1 = tslFn( ( [ v_immutable ] ) => {\n\n\tconst v = vec3( v_immutable ).toVar();\n\n\treturn mul( 0.9820, v );\n\n} );\n\nconst mx_gradient_scale3d = overloadingFn( [ mx_gradient_scale3d_0, mx_gradient_scale3d_1 ] );\n\nconst mx_rotl32 = tslFn( ( [ x_immutable, k_immutable ] ) => {\n\n\tconst k = int( k_immutable ).toVar();\n\tconst x = uint( x_immutable ).toVar();\n\n\treturn x.shiftLeft( k ).bitOr( x.shiftRight( int( 32 ).sub( k ) ) );\n\n} );\n\nconst mx_bjmix = tslFn( ( [ a, b, c ] ) => {\n\n\ta.subAssign( c );\n\ta.bitXorAssign( mx_rotl32( c, int( 4 ) ) );\n\tc.addAssign( b );\n\tb.subAssign( a );\n\tb.bitXorAssign( mx_rotl32( a, int( 6 ) ) );\n\ta.addAssign( c );\n\tc.subAssign( b );\n\tc.bitXorAssign( mx_rotl32( b, int( 8 ) ) );\n\tb.addAssign( a );\n\ta.subAssign( c );\n\ta.bitXorAssign( mx_rotl32( c, int( 16 ) ) );\n\tc.addAssign( b );\n\tb.subAssign( a );\n\tb.bitXorAssign( mx_rotl32( a, int( 19 ) ) );\n\ta.addAssign( c );\n\tc.subAssign( b );\n\tc.bitXorAssign( mx_rotl32( b, int( 4 ) ) );\n\tb.addAssign( a );\n\n} );\n\nconst mx_bjfinal = tslFn( ( [ a_immutable, b_immutable, c_immutable ] ) => {\n\n\tconst c = uint( c_immutable ).toVar();\n\tconst b = uint( b_immutable ).toVar();\n\tconst a = uint( a_immutable ).toVar();\n\tc.bitXorAssign( b );\n\tc.subAssign( mx_rotl32( b, int( 14 ) ) );\n\ta.bitXorAssign( c );\n\ta.subAssign( mx_rotl32( c, int( 11 ) ) );\n\tb.bitXorAssign( a );\n\tb.subAssign( mx_rotl32( a, int( 25 ) ) );\n\tc.bitXorAssign( b );\n\tc.subAssign( mx_rotl32( b, int( 16 ) ) );\n\ta.bitXorAssign( c );\n\ta.subAssign( mx_rotl32( c, int( 4 ) ) );\n\tb.bitXorAssign( a );\n\tb.subAssign( mx_rotl32( a, int( 14 ) ) );\n\tc.bitXorAssign( b );\n\tc.subAssign( mx_rotl32( b, int( 24 ) ) );\n\n\treturn c;\n\n} );\n\nconst mx_bits_to_01 = tslFn( ( [ bits_immutable ] ) => {\n\n\tconst bits = uint( bits_immutable ).toVar();\n\n\treturn float( bits ).div( float( uint( int( 0xffffffff ) ) ) );\n\n} );\n\nconst mx_fade = tslFn( ( [ t_immutable ] ) => {\n\n\tconst t = float( t_immutable ).toVar();\n\n\treturn t.mul( t.mul( t.mul( t.mul( t.mul( 6.0 ).sub( 15.0 ) ).add( 10.0 ) ) ) );\n\n} );\n\nconst mx_hash_int_0 = tslFn( ( [ x_immutable ] ) => {\n\n\tconst x = int( x_immutable ).toVar();\n\tconst len = uint( uint( 1 ) ).toVar();\n\tconst seed = uint( uint( int( 0xdeadbeef ) ).add( len.shiftLeft( uint( 2 ) ).add( uint( 13 ) ) ) ).toVar();\n\n\treturn mx_bjfinal( seed.add( uint( x ) ), seed, seed );\n\n} );\n\nconst mx_hash_int_1 = tslFn( ( [ x_immutable, y_immutable ] ) => {\n\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst len = uint( uint( 2 ) ).toVar();\n\tconst a = uint().toVar(), b = uint().toVar(), c = uint().toVar();\n\ta.assign( b.assign( c.assign( uint( int( 0xdeadbeef ) ).add( len.shiftLeft( uint( 2 ) ).add( uint( 13 ) ) ) ) ) );\n\ta.addAssign( uint( x ) );\n\tb.addAssign( uint( y ) );\n\n\treturn mx_bjfinal( a, b, c );\n\n} );\n\nconst mx_hash_int_2 = tslFn( ( [ x_immutable, y_immutable, z_immutable ] ) => {\n\n\tconst z = int( z_immutable ).toVar();\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst len = uint( uint( 3 ) ).toVar();\n\tconst a = uint().toVar(), b = uint().toVar(), c = uint().toVar();\n\ta.assign( b.assign( c.assign( uint( int( 0xdeadbeef ) ).add( len.shiftLeft( uint( 2 ) ).add( uint( 13 ) ) ) ) ) );\n\ta.addAssign( uint( x ) );\n\tb.addAssign( uint( y ) );\n\tc.addAssign( uint( z ) );\n\n\treturn mx_bjfinal( a, b, c );\n\n} );\n\nconst mx_hash_int_3 = tslFn( ( [ x_immutable, y_immutable, z_immutable, xx_immutable ] ) => {\n\n\tconst xx = int( xx_immutable ).toVar();\n\tconst z = int( z_immutable ).toVar();\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst len = uint( uint( 4 ) ).toVar();\n\tconst a = uint().toVar(), b = uint().toVar(), c = uint().toVar();\n\ta.assign( b.assign( c.assign( uint( int( 0xdeadbeef ) ).add( len.shiftLeft( uint( 2 ) ).add( uint( 13 ) ) ) ) ) );\n\ta.addAssign( uint( x ) );\n\tb.addAssign( uint( y ) );\n\tc.addAssign( uint( z ) );\n\tmx_bjmix( a, b, c );\n\ta.addAssign( uint( xx ) );\n\n\treturn mx_bjfinal( a, b, c );\n\n} );\n\nconst mx_hash_int_4 = tslFn( ( [ x_immutable, y_immutable, z_immutable, xx_immutable, yy_immutable ] ) => {\n\n\tconst yy = int( yy_immutable ).toVar();\n\tconst xx = int( xx_immutable ).toVar();\n\tconst z = int( z_immutable ).toVar();\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst len = uint( uint( 5 ) ).toVar();\n\tconst a = uint().toVar(), b = uint().toVar(), c = uint().toVar();\n\ta.assign( b.assign( c.assign( uint( int( 0xdeadbeef ) ).add( len.shiftLeft( uint( 2 ) ).add( uint( 13 ) ) ) ) ) );\n\ta.addAssign( uint( x ) );\n\tb.addAssign( uint( y ) );\n\tc.addAssign( uint( z ) );\n\tmx_bjmix( a, b, c );\n\ta.addAssign( uint( xx ) );\n\tb.addAssign( uint( yy ) );\n\n\treturn mx_bjfinal( a, b, c );\n\n} );\n\nconst mx_hash_int = overloadingFn( [ mx_hash_int_0, mx_hash_int_1, mx_hash_int_2, mx_hash_int_3, mx_hash_int_4 ] );\n\nconst mx_hash_vec3_0 = tslFn( ( [ x_immutable, y_immutable ] ) => {\n\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst h = uint( mx_hash_int( x, y ) ).toVar();\n\tconst result = uvec3().toVar();\n\tresult.x.assign( h.bitAnd( int( 0xFF ) ) );\n\tresult.y.assign( h.shiftRight( int( 8 ) ).bitAnd( int( 0xFF ) ) );\n\tresult.z.assign( h.shiftRight( int( 16 ) ).bitAnd( int( 0xFF ) ) );\n\n\treturn result;\n\n} );\n\nconst mx_hash_vec3_1 = tslFn( ( [ x_immutable, y_immutable, z_immutable ] ) => {\n\n\tconst z = int( z_immutable ).toVar();\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst h = uint( mx_hash_int( x, y, z ) ).toVar();\n\tconst result = uvec3().toVar();\n\tresult.x.assign( h.bitAnd( int( 0xFF ) ) );\n\tresult.y.assign( h.shiftRight( int( 8 ) ).bitAnd( int( 0xFF ) ) );\n\tresult.z.assign( h.shiftRight( int( 16 ) ).bitAnd( int( 0xFF ) ) );\n\n\treturn result;\n\n} );\n\nconst mx_hash_vec3 = overloadingFn( [ mx_hash_vec3_0, mx_hash_vec3_1 ] );\n\nconst mx_perlin_noise_float_0 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec2( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar();\n\tconst fx = float( mx_floorfrac( p.x, X ) ).toVar();\n\tconst fy = float( mx_floorfrac( p.y, Y ) ).toVar();\n\tconst u = float( mx_fade( fx ) ).toVar();\n\tconst v = float( mx_fade( fy ) ).toVar();\n\tconst result = float( mx_bilerp( mx_gradient_float( mx_hash_int( X, Y ), fx, fy ), mx_gradient_float( mx_hash_int( X.add( int( 1 ) ), Y ), fx.sub( 1.0 ), fy ), mx_gradient_float( mx_hash_int( X, Y.add( int( 1 ) ) ), fx, fy.sub( 1.0 ) ), mx_gradient_float( mx_hash_int( X.add( int( 1 ) ), Y.add( int( 1 ) ) ), fx.sub( 1.0 ), fy.sub( 1.0 ) ), u, v ) ).toVar();\n\n\treturn mx_gradient_scale2d( result );\n\n} );\n\nconst mx_perlin_noise_float_1 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec3( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar(), Z = int().toVar();\n\tconst fx = float( mx_floorfrac( p.x, X ) ).toVar();\n\tconst fy = float( mx_floorfrac( p.y, Y ) ).toVar();\n\tconst fz = float( mx_floorfrac( p.z, Z ) ).toVar();\n\tconst u = float( mx_fade( fx ) ).toVar();\n\tconst v = float( mx_fade( fy ) ).toVar();\n\tconst w = float( mx_fade( fz ) ).toVar();\n\tconst result = float( mx_trilerp( mx_gradient_float( mx_hash_int( X, Y, Z ), fx, fy, fz ), mx_gradient_float( mx_hash_int( X.add( int( 1 ) ), Y, Z ), fx.sub( 1.0 ), fy, fz ), mx_gradient_float( mx_hash_int( X, Y.add( int( 1 ) ), Z ), fx, fy.sub( 1.0 ), fz ), mx_gradient_float( mx_hash_int( X.add( int( 1 ) ), Y.add( int( 1 ) ), Z ), fx.sub( 1.0 ), fy.sub( 1.0 ), fz ), mx_gradient_float( mx_hash_int( X, Y, Z.add( int( 1 ) ) ), fx, fy, fz.sub( 1.0 ) ), mx_gradient_float( mx_hash_int( X.add( int( 1 ) ), Y, Z.add( int( 1 ) ) ), fx.sub( 1.0 ), fy, fz.sub( 1.0 ) ), mx_gradient_float( mx_hash_int( X, Y.add( int( 1 ) ), Z.add( int( 1 ) ) ), fx, fy.sub( 1.0 ), fz.sub( 1.0 ) ), mx_gradient_float( mx_hash_int( X.add( int( 1 ) ), Y.add( int( 1 ) ), Z.add( int( 1 ) ) ), fx.sub( 1.0 ), fy.sub( 1.0 ), fz.sub( 1.0 ) ), u, v, w ) ).toVar();\n\n\treturn mx_gradient_scale3d( result );\n\n} );\n\nconst mx_perlin_noise_float = overloadingFn( [ mx_perlin_noise_float_0, mx_perlin_noise_float_1 ] );\n\nconst mx_perlin_noise_vec3_0 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec2( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar();\n\tconst fx = float( mx_floorfrac( p.x, X ) ).toVar();\n\tconst fy = float( mx_floorfrac( p.y, Y ) ).toVar();\n\tconst u = float( mx_fade( fx ) ).toVar();\n\tconst v = float( mx_fade( fy ) ).toVar();\n\tconst result = vec3( mx_bilerp( mx_gradient_vec3( mx_hash_vec3( X, Y ), fx, fy ), mx_gradient_vec3( mx_hash_vec3( X.add( int( 1 ) ), Y ), fx.sub( 1.0 ), fy ), mx_gradient_vec3( mx_hash_vec3( X, Y.add( int( 1 ) ) ), fx, fy.sub( 1.0 ) ), mx_gradient_vec3( mx_hash_vec3( X.add( int( 1 ) ), Y.add( int( 1 ) ) ), fx.sub( 1.0 ), fy.sub( 1.0 ) ), u, v ) ).toVar();\n\n\treturn mx_gradient_scale2d( result );\n\n} );\n\nconst mx_perlin_noise_vec3_1 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec3( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar(), Z = int().toVar();\n\tconst fx = float( mx_floorfrac( p.x, X ) ).toVar();\n\tconst fy = float( mx_floorfrac( p.y, Y ) ).toVar();\n\tconst fz = float( mx_floorfrac( p.z, Z ) ).toVar();\n\tconst u = float( mx_fade( fx ) ).toVar();\n\tconst v = float( mx_fade( fy ) ).toVar();\n\tconst w = float( mx_fade( fz ) ).toVar();\n\tconst result = vec3( mx_trilerp( mx_gradient_vec3( mx_hash_vec3( X, Y, Z ), fx, fy, fz ), mx_gradient_vec3( mx_hash_vec3( X.add( int( 1 ) ), Y, Z ), fx.sub( 1.0 ), fy, fz ), mx_gradient_vec3( mx_hash_vec3( X, Y.add( int( 1 ) ), Z ), fx, fy.sub( 1.0 ), fz ), mx_gradient_vec3( mx_hash_vec3( X.add( int( 1 ) ), Y.add( int( 1 ) ), Z ), fx.sub( 1.0 ), fy.sub( 1.0 ), fz ), mx_gradient_vec3( mx_hash_vec3( X, Y, Z.add( int( 1 ) ) ), fx, fy, fz.sub( 1.0 ) ), mx_gradient_vec3( mx_hash_vec3( X.add( int( 1 ) ), Y, Z.add( int( 1 ) ) ), fx.sub( 1.0 ), fy, fz.sub( 1.0 ) ), mx_gradient_vec3( mx_hash_vec3( X, Y.add( int( 1 ) ), Z.add( int( 1 ) ) ), fx, fy.sub( 1.0 ), fz.sub( 1.0 ) ), mx_gradient_vec3( mx_hash_vec3( X.add( int( 1 ) ), Y.add( int( 1 ) ), Z.add( int( 1 ) ) ), fx.sub( 1.0 ), fy.sub( 1.0 ), fz.sub( 1.0 ) ), u, v, w ) ).toVar();\n\n\treturn mx_gradient_scale3d( result );\n\n} );\n\nconst mx_perlin_noise_vec3 = overloadingFn( [ mx_perlin_noise_vec3_0, mx_perlin_noise_vec3_1 ] );\n\nconst mx_cell_noise_float_0 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = float( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p ) ).toVar();\n\n\treturn mx_bits_to_01( mx_hash_int( ix ) );\n\n} );\n\nconst mx_cell_noise_float_1 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec2( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p.x ) ).toVar();\n\tconst iy = int( mx_floor( p.y ) ).toVar();\n\n\treturn mx_bits_to_01( mx_hash_int( ix, iy ) );\n\n} );\n\nconst mx_cell_noise_float_2 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec3( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p.x ) ).toVar();\n\tconst iy = int( mx_floor( p.y ) ).toVar();\n\tconst iz = int( mx_floor( p.z ) ).toVar();\n\n\treturn mx_bits_to_01( mx_hash_int( ix, iy, iz ) );\n\n} );\n\nconst mx_cell_noise_float_3 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec4( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p.x ) ).toVar();\n\tconst iy = int( mx_floor( p.y ) ).toVar();\n\tconst iz = int( mx_floor( p.z ) ).toVar();\n\tconst iw = int( mx_floor( p.w ) ).toVar();\n\n\treturn mx_bits_to_01( mx_hash_int( ix, iy, iz, iw ) );\n\n} );\n\nconst mx_cell_noise_float = overloadingFn( [ mx_cell_noise_float_0, mx_cell_noise_float_1, mx_cell_noise_float_2, mx_cell_noise_float_3 ] );\n\nconst mx_cell_noise_vec3_0 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = float( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p ) ).toVar();\n\n\treturn vec3( mx_bits_to_01( mx_hash_int( ix, int( 0 ) ) ), mx_bits_to_01( mx_hash_int( ix, int( 1 ) ) ), mx_bits_to_01( mx_hash_int( ix, int( 2 ) ) ) );\n\n} );\n\nconst mx_cell_noise_vec3_1 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec2( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p.x ) ).toVar();\n\tconst iy = int( mx_floor( p.y ) ).toVar();\n\n\treturn vec3( mx_bits_to_01( mx_hash_int( ix, iy, int( 0 ) ) ), mx_bits_to_01( mx_hash_int( ix, iy, int( 1 ) ) ), mx_bits_to_01( mx_hash_int( ix, iy, int( 2 ) ) ) );\n\n} );\n\nconst mx_cell_noise_vec3_2 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec3( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p.x ) ).toVar();\n\tconst iy = int( mx_floor( p.y ) ).toVar();\n\tconst iz = int( mx_floor( p.z ) ).toVar();\n\n\treturn vec3( mx_bits_to_01( mx_hash_int( ix, iy, iz, int( 0 ) ) ), mx_bits_to_01( mx_hash_int( ix, iy, iz, int( 1 ) ) ), mx_bits_to_01( mx_hash_int( ix, iy, iz, int( 2 ) ) ) );\n\n} );\n\nconst mx_cell_noise_vec3_3 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec4( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p.x ) ).toVar();\n\tconst iy = int( mx_floor( p.y ) ).toVar();\n\tconst iz = int( mx_floor( p.z ) ).toVar();\n\tconst iw = int( mx_floor( p.w ) ).toVar();\n\n\treturn vec3( mx_bits_to_01( mx_hash_int( ix, iy, iz, iw, int( 0 ) ) ), mx_bits_to_01( mx_hash_int( ix, iy, iz, iw, int( 1 ) ) ), mx_bits_to_01( mx_hash_int( ix, iy, iz, iw, int( 2 ) ) ) );\n\n} );\n\nconst mx_cell_noise_vec3 = overloadingFn( [ mx_cell_noise_vec3_0, mx_cell_noise_vec3_1, mx_cell_noise_vec3_2, mx_cell_noise_vec3_3 ] );\n\nconst mx_fractal_noise_float = tslFn( ( [ p_immutable, octaves_immutable, lacunarity_immutable, diminish_immutable ] ) => {\n\n\tconst diminish = float( diminish_immutable ).toVar();\n\tconst lacunarity = float( lacunarity_immutable ).toVar();\n\tconst octaves = int( octaves_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\tconst result = float( 0.0 ).toVar();\n\tconst amplitude = float( 1.0 ).toVar();\n\n\tloop( { start: int( 0 ), end: octaves }, ( { i } ) => {\n\n\t\tresult.addAssign( amplitude.mul( mx_perlin_noise_float( p ) ) );\n\t\tamplitude.mulAssign( diminish );\n\t\tp.mulAssign( lacunarity );\n\n\t} );\n\n\treturn result;\n\n} );\n\nconst mx_fractal_noise_vec3 = tslFn( ( [ p_immutable, octaves_immutable, lacunarity_immutable, diminish_immutable ] ) => {\n\n\tconst diminish = float( diminish_immutable ).toVar();\n\tconst lacunarity = float( lacunarity_immutable ).toVar();\n\tconst octaves = int( octaves_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\tconst result = vec3( 0.0 ).toVar();\n\tconst amplitude = float( 1.0 ).toVar();\n\n\tloop( { start: int( 0 ), end: octaves }, ( { i } ) => {\n\n\t\tresult.addAssign( amplitude.mul( mx_perlin_noise_vec3( p ) ) );\n\t\tamplitude.mulAssign( diminish );\n\t\tp.mulAssign( lacunarity );\n\n\t} );\n\n\treturn result;\n\n} );\n\nconst mx_fractal_noise_vec2 = tslFn( ( [ p_immutable, octaves_immutable, lacunarity_immutable, diminish_immutable ] ) => {\n\n\tconst diminish = float( diminish_immutable ).toVar();\n\tconst lacunarity = float( lacunarity_immutable ).toVar();\n\tconst octaves = int( octaves_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\n\treturn vec2( mx_fractal_noise_float( p, octaves, lacunarity, diminish ), mx_fractal_noise_float( p.add( vec3( int( 19 ), int( 193 ), int( 17 ) ) ), octaves, lacunarity, diminish ) );\n\n} );\n\nconst mx_fractal_noise_vec4 = tslFn( ( [ p_immutable, octaves_immutable, lacunarity_immutable, diminish_immutable ] ) => {\n\n\tconst diminish = float( diminish_immutable ).toVar();\n\tconst lacunarity = float( lacunarity_immutable ).toVar();\n\tconst octaves = int( octaves_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\tconst c = vec3( mx_fractal_noise_vec3( p, octaves, lacunarity, diminish ) ).toVar();\n\tconst f = float( mx_fractal_noise_float( p.add( vec3( int( 19 ), int( 193 ), int( 17 ) ) ), octaves, lacunarity, diminish ) ).toVar();\n\n\treturn vec4( c, f );\n\n} );\n\nconst mx_worley_distance_0 = tslFn( ( [ p_immutable, x_immutable, y_immutable, xoff_immutable, yoff_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst yoff = int( yoff_immutable ).toVar();\n\tconst xoff = int( xoff_immutable ).toVar();\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst p = vec2( p_immutable ).toVar();\n\tconst tmp = vec3( mx_cell_noise_vec3( vec2( x.add( xoff ), y.add( yoff ) ) ) ).toVar();\n\tconst off = vec2( tmp.x, tmp.y ).toVar();\n\toff.subAssign( 0.5 );\n\toff.mulAssign( jitter );\n\toff.addAssign( 0.5 );\n\tconst cellpos = vec2( vec2( float( x ), float( y ) ).add( off ) ).toVar();\n\tconst diff = vec2( cellpos.sub( p ) ).toVar();\n\n\tIf( metric.equal( int( 2 ) ), () => {\n\n\t\treturn abs( diff.x ).add( abs( diff.y ) );\n\n\t} );\n\n\tIf( metric.equal( int( 3 ) ), () => {\n\n\t\treturn max( abs( diff.x ), abs( diff.y ) );\n\n\t} );\n\n\treturn dot( diff, diff );\n\n} );\n\nconst mx_worley_distance_1 = tslFn( ( [ p_immutable, x_immutable, y_immutable, z_immutable, xoff_immutable, yoff_immutable, zoff_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst zoff = int( zoff_immutable ).toVar();\n\tconst yoff = int( yoff_immutable ).toVar();\n\tconst xoff = int( xoff_immutable ).toVar();\n\tconst z = int( z_immutable ).toVar();\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\tconst off = vec3( mx_cell_noise_vec3( vec3( x.add( xoff ), y.add( yoff ), z.add( zoff ) ) ) ).toVar();\n\toff.subAssign( 0.5 );\n\toff.mulAssign( jitter );\n\toff.addAssign( 0.5 );\n\tconst cellpos = vec3( vec3( float( x ), float( y ), float( z ) ).add( off ) ).toVar();\n\tconst diff = vec3( cellpos.sub( p ) ).toVar();\n\n\tIf( metric.equal( int( 2 ) ), () => {\n\n\t\treturn abs( diff.x ).add( abs( diff.y ).add( abs( diff.z ) ) );\n\n\t} );\n\n\tIf( metric.equal( int( 3 ) ), () => {\n\n\t\treturn max( max( abs( diff.x ), abs( diff.y ) ), abs( diff.z ) );\n\n\t} );\n\n\treturn dot( diff, diff );\n\n} );\n\nconst mx_worley_distance = overloadingFn( [ mx_worley_distance_0, mx_worley_distance_1 ] );\n\nconst mx_worley_noise_float_0 = tslFn( ( [ p_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst p = vec2( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar();\n\tconst localpos = vec2( mx_floorfrac( p.x, X ), mx_floorfrac( p.y, Y ) ).toVar();\n\tconst sqdist = float( 1e6 ).toVar();\n\n\tloop( { start: - 1, end: int( 1 ), name: 'x', condition: '<=' }, ( { x } ) => {\n\n\t\tloop( { start: - 1, end: int( 1 ), name: 'y', condition: '<=' }, ( { y } ) => {\n\n\t\t\tconst dist = float( mx_worley_distance( localpos, x, y, X, Y, jitter, metric ) ).toVar();\n\t\t\tsqdist.assign( min( sqdist, dist ) );\n\n\t\t} );\n\n\t} );\n\n\tIf( metric.equal( int( 0 ) ), () => {\n\n\t\tsqdist.assign( sqrt( sqdist ) );\n\n\t} );\n\n\treturn sqdist;\n\n} );\n\nconst mx_worley_noise_vec2_0 = tslFn( ( [ p_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst p = vec2( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar();\n\tconst localpos = vec2( mx_floorfrac( p.x, X ), mx_floorfrac( p.y, Y ) ).toVar();\n\tconst sqdist = vec2( 1e6, 1e6 ).toVar();\n\n\tloop( { start: - 1, end: int( 1 ), name: 'x', condition: '<=' }, ( { x } ) => {\n\n\t\tloop( { start: - 1, end: int( 1 ), name: 'y', condition: '<=' }, ( { y } ) => {\n\n\t\t\tconst dist = float( mx_worley_distance( localpos, x, y, X, Y, jitter, metric ) ).toVar();\n\n\t\t\tIf( dist.lessThan( sqdist.x ), () => {\n\n\t\t\t\tsqdist.y.assign( sqdist.x );\n\t\t\t\tsqdist.x.assign( dist );\n\n\t\t\t} ).elseif( dist.lessThan( sqdist.y ), () => {\n\n\t\t\t\tsqdist.y.assign( dist );\n\n\t\t\t} );\n\n\t\t} );\n\n\t} );\n\n\tIf( metric.equal( int( 0 ) ), () => {\n\n\t\tsqdist.assign( sqrt( sqdist ) );\n\n\t} );\n\n\treturn sqdist;\n\n} );\n\nconst mx_worley_noise_vec3_0 = tslFn( ( [ p_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst p = vec2( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar();\n\tconst localpos = vec2( mx_floorfrac( p.x, X ), mx_floorfrac( p.y, Y ) ).toVar();\n\tconst sqdist = vec3( 1e6, 1e6, 1e6 ).toVar();\n\n\tloop( { start: - 1, end: int( 1 ), name: 'x', condition: '<=' }, ( { x } ) => {\n\n\t\tloop( { start: - 1, end: int( 1 ), name: 'y', condition: '<=' }, ( { y } ) => {\n\n\t\t\tconst dist = float( mx_worley_distance( localpos, x, y, X, Y, jitter, metric ) ).toVar();\n\n\t\t\tIf( dist.lessThan( sqdist.x ), () => {\n\n\t\t\t\tsqdist.z.assign( sqdist.y );\n\t\t\t\tsqdist.y.assign( sqdist.x );\n\t\t\t\tsqdist.x.assign( dist );\n\n\t\t\t} ).elseif( dist.lessThan( sqdist.y ), () => {\n\n\t\t\t\tsqdist.z.assign( sqdist.y );\n\t\t\t\tsqdist.y.assign( dist );\n\n\t\t\t} ).elseif( dist.lessThan( sqdist.z ), () => {\n\n\t\t\t\tsqdist.z.assign( dist );\n\n\t\t\t} );\n\n\t\t} );\n\n\t} );\n\n\tIf( metric.equal( int( 0 ) ), () => {\n\n\t\tsqdist.assign( sqrt( sqdist ) );\n\n\t} );\n\n\treturn sqdist;\n\n} );\n\nconst mx_worley_noise_float_1 = tslFn( ( [ p_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar(), Z = int().toVar();\n\tconst localpos = vec3( mx_floorfrac( p.x, X ), mx_floorfrac( p.y, Y ), mx_floorfrac( p.z, Z ) ).toVar();\n\tconst sqdist = float( 1e6 ).toVar();\n\n\tloop( { start: - 1, end: int( 1 ), name: 'x', condition: '<=' }, ( { x } ) => {\n\n\t\tloop( { start: - 1, end: int( 1 ), name: 'y', condition: '<=' }, ( { y } ) => {\n\n\t\t\tloop( { start: - 1, end: int( 1 ), name: 'z', condition: '<=' }, ( { z } ) => {\n\n\t\t\t\tconst dist = float( mx_worley_distance( localpos, x, y, z, X, Y, Z, jitter, metric ) ).toVar();\n\t\t\t\tsqdist.assign( min( sqdist, dist ) );\n\n\t\t\t} );\n\n\t\t} );\n\n\t} );\n\n\tIf( metric.equal( int( 0 ) ), () => {\n\n\t\tsqdist.assign( sqrt( sqdist ) );\n\n\t} );\n\n\treturn sqdist;\n\n} );\n\nconst mx_worley_noise_float = overloadingFn( [ mx_worley_noise_float_0, mx_worley_noise_float_1 ] );\n\nconst mx_worley_noise_vec2_1 = tslFn( ( [ p_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar(), Z = int().toVar();\n\tconst localpos = vec3( mx_floorfrac( p.x, X ), mx_floorfrac( p.y, Y ), mx_floorfrac( p.z, Z ) ).toVar();\n\tconst sqdist = vec2( 1e6, 1e6 ).toVar();\n\n\tloop( { start: - 1, end: int( 1 ), name: 'x', condition: '<=' }, ( { x } ) => {\n\n\t\tloop( { start: - 1, end: int( 1 ), name: 'y', condition: '<=' }, ( { y } ) => {\n\n\t\t\tloop( { start: - 1, end: int( 1 ), name: 'z', condition: '<=' }, ( { z } ) => {\n\n\t\t\t\tconst dist = float( mx_worley_distance( localpos, x, y, z, X, Y, Z, jitter, metric ) ).toVar();\n\n\t\t\t\tIf( dist.lessThan( sqdist.x ), () => {\n\n\t\t\t\t\tsqdist.y.assign( sqdist.x );\n\t\t\t\t\tsqdist.x.assign( dist );\n\n\t\t\t\t} ).elseif( dist.lessThan( sqdist.y ), () => {\n\n\t\t\t\t\tsqdist.y.assign( dist );\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t} );\n\n\t} );\n\n\tIf( metric.equal( int( 0 ) ), () => {\n\n\t\tsqdist.assign( sqrt( sqdist ) );\n\n\t} );\n\n\treturn sqdist;\n\n} );\n\nconst mx_worley_noise_vec2 = overloadingFn( [ mx_worley_noise_vec2_0, mx_worley_noise_vec2_1 ] );\n\nconst mx_worley_noise_vec3_1 = tslFn( ( [ p_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar(), Z = int().toVar();\n\tconst localpos = vec3( mx_floorfrac( p.x, X ), mx_floorfrac( p.y, Y ), mx_floorfrac( p.z, Z ) ).toVar();\n\tconst sqdist = vec3( 1e6, 1e6, 1e6 ).toVar();\n\n\tloop( { start: - 1, end: int( 1 ), name: 'x', condition: '<=' }, ( { x } ) => {\n\n\t\tloop( { start: - 1, end: int( 1 ), name: 'y', condition: '<=' }, ( { y } ) => {\n\n\t\t\tloop( { start: - 1, end: int( 1 ), name: 'z', condition: '<=' }, ( { z } ) => {\n\n\t\t\t\tconst dist = float( mx_worley_distance( localpos, x, y, z, X, Y, Z, jitter, metric ) ).toVar();\n\n\t\t\t\tIf( dist.lessThan( sqdist.x ), () => {\n\n\t\t\t\t\tsqdist.z.assign( sqdist.y );\n\t\t\t\t\tsqdist.y.assign( sqdist.x );\n\t\t\t\t\tsqdist.x.assign( dist );\n\n\t\t\t\t} ).elseif( dist.lessThan( sqdist.y ), () => {\n\n\t\t\t\t\tsqdist.z.assign( sqdist.y );\n\t\t\t\t\tsqdist.y.assign( dist );\n\n\t\t\t\t} ).elseif( dist.lessThan( sqdist.z ), () => {\n\n\t\t\t\t\tsqdist.z.assign( dist );\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t} );\n\n\t} );\n\n\tIf( metric.equal( int( 0 ) ), () => {\n\n\t\tsqdist.assign( sqrt( sqdist ) );\n\n\t} );\n\n\treturn sqdist;\n\n} );\n\nconst mx_worley_noise_vec3 = overloadingFn( [ mx_worley_noise_vec3_0, mx_worley_noise_vec3_1 ] );\n\n// layouts\n\nmx_select.setLayout( {\n\tname: 'mx_select',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'b', type: 'bool' },\n\t\t{ name: 't', type: 'float' },\n\t\t{ name: 'f', type: 'float' }\n\t]\n} );\n\nmx_negate_if.setLayout( {\n\tname: 'mx_negate_if',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'val', type: 'float' },\n\t\t{ name: 'b', type: 'bool' }\n\t]\n} );\n\nmx_floor.setLayout( {\n\tname: 'mx_floor',\n\ttype: 'int',\n\tinputs: [\n\t\t{ name: 'x', type: 'float' }\n\t]\n} );\n\nmx_bilerp_0.setLayout( {\n\tname: 'mx_bilerp_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'v0', type: 'float' },\n\t\t{ name: 'v1', type: 'float' },\n\t\t{ name: 'v2', type: 'float' },\n\t\t{ name: 'v3', type: 'float' },\n\t\t{ name: 's', type: 'float' },\n\t\t{ name: 't', type: 'float' }\n\t]\n} );\n\nmx_bilerp_1.setLayout( {\n\tname: 'mx_bilerp_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'v0', type: 'vec3' },\n\t\t{ name: 'v1', type: 'vec3' },\n\t\t{ name: 'v2', type: 'vec3' },\n\t\t{ name: 'v3', type: 'vec3' },\n\t\t{ name: 's', type: 'float' },\n\t\t{ name: 't', type: 'float' }\n\t]\n} );\n\nmx_trilerp_0.setLayout( {\n\tname: 'mx_trilerp_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'v0', type: 'float' },\n\t\t{ name: 'v1', type: 'float' },\n\t\t{ name: 'v2', type: 'float' },\n\t\t{ name: 'v3', type: 'float' },\n\t\t{ name: 'v4', type: 'float' },\n\t\t{ name: 'v5', type: 'float' },\n\t\t{ name: 'v6', type: 'float' },\n\t\t{ name: 'v7', type: 'float' },\n\t\t{ name: 's', type: 'float' },\n\t\t{ name: 't', type: 'float' },\n\t\t{ name: 'r', type: 'float' }\n\t]\n} );\n\nmx_trilerp_1.setLayout( {\n\tname: 'mx_trilerp_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'v0', type: 'vec3' },\n\t\t{ name: 'v1', type: 'vec3' },\n\t\t{ name: 'v2', type: 'vec3' },\n\t\t{ name: 'v3', type: 'vec3' },\n\t\t{ name: 'v4', type: 'vec3' },\n\t\t{ name: 'v5', type: 'vec3' },\n\t\t{ name: 'v6', type: 'vec3' },\n\t\t{ name: 'v7', type: 'vec3' },\n\t\t{ name: 's', type: 'float' },\n\t\t{ name: 't', type: 'float' },\n\t\t{ name: 'r', type: 'float' }\n\t]\n} );\n\nmx_gradient_float_0.setLayout( {\n\tname: 'mx_gradient_float_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'hash', type: 'uint' },\n\t\t{ name: 'x', type: 'float' },\n\t\t{ name: 'y', type: 'float' }\n\t]\n} );\n\nmx_gradient_float_1.setLayout( {\n\tname: 'mx_gradient_float_1',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'hash', type: 'uint' },\n\t\t{ name: 'x', type: 'float' },\n\t\t{ name: 'y', type: 'float' },\n\t\t{ name: 'z', type: 'float' }\n\t]\n} );\n\nmx_gradient_vec3_0.setLayout( {\n\tname: 'mx_gradient_vec3_0',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'hash', type: 'uvec3' },\n\t\t{ name: 'x', type: 'float' },\n\t\t{ name: 'y', type: 'float' }\n\t]\n} );\n\nmx_gradient_vec3_1.setLayout( {\n\tname: 'mx_gradient_vec3_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'hash', type: 'uvec3' },\n\t\t{ name: 'x', type: 'float' },\n\t\t{ name: 'y', type: 'float' },\n\t\t{ name: 'z', type: 'float' }\n\t]\n} );\n\nmx_gradient_scale2d_0.setLayout( {\n\tname: 'mx_gradient_scale2d_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'v', type: 'float' }\n\t]\n} );\n\nmx_gradient_scale3d_0.setLayout( {\n\tname: 'mx_gradient_scale3d_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'v', type: 'float' }\n\t]\n} );\n\nmx_gradient_scale2d_1.setLayout( {\n\tname: 'mx_gradient_scale2d_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'v', type: 'vec3' }\n\t]\n} );\n\nmx_gradient_scale3d_1.setLayout( {\n\tname: 'mx_gradient_scale3d_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'v', type: 'vec3' }\n\t]\n} );\n\nmx_rotl32.setLayout( {\n\tname: 'mx_rotl32',\n\ttype: 'uint',\n\tinputs: [\n\t\t{ name: 'x', type: 'uint' },\n\t\t{ name: 'k', type: 'int' }\n\t]\n} );\n\nmx_bjfinal.setLayout( {\n\tname: 'mx_bjfinal',\n\ttype: 'uint',\n\tinputs: [\n\t\t{ name: 'a', type: 'uint' },\n\t\t{ name: 'b', type: 'uint' },\n\t\t{ name: 'c', type: 'uint' }\n\t]\n} );\n\nmx_bits_to_01.setLayout( {\n\tname: 'mx_bits_to_01',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'bits', type: 'uint' }\n\t]\n} );\n\nmx_fade.setLayout( {\n\tname: 'mx_fade',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 't', type: 'float' }\n\t]\n} );\n\nmx_hash_int_0.setLayout( {\n\tname: 'mx_hash_int_0',\n\ttype: 'uint',\n\tinputs: [\n\t\t{ name: 'x', type: 'int' }\n\t]\n} );\n\nmx_hash_int_1.setLayout( {\n\tname: 'mx_hash_int_1',\n\ttype: 'uint',\n\tinputs: [\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' }\n\t]\n} );\n\nmx_hash_int_2.setLayout( {\n\tname: 'mx_hash_int_2',\n\ttype: 'uint',\n\tinputs: [\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' },\n\t\t{ name: 'z', type: 'int' }\n\t]\n} );\n\nmx_hash_int_3.setLayout( {\n\tname: 'mx_hash_int_3',\n\ttype: 'uint',\n\tinputs: [\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' },\n\t\t{ name: 'z', type: 'int' },\n\t\t{ name: 'xx', type: 'int' }\n\t]\n} );\n\nmx_hash_int_4.setLayout( {\n\tname: 'mx_hash_int_4',\n\ttype: 'uint',\n\tinputs: [\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' },\n\t\t{ name: 'z', type: 'int' },\n\t\t{ name: 'xx', type: 'int' },\n\t\t{ name: 'yy', type: 'int' }\n\t]\n} );\n\nmx_hash_vec3_0.setLayout( {\n\tname: 'mx_hash_vec3_0',\n\ttype: 'uvec3',\n\tinputs: [\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' }\n\t]\n} );\n\nmx_hash_vec3_1.setLayout( {\n\tname: 'mx_hash_vec3_1',\n\ttype: 'uvec3',\n\tinputs: [\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' },\n\t\t{ name: 'z', type: 'int' }\n\t]\n} );\n\nmx_perlin_noise_float_0.setLayout( {\n\tname: 'mx_perlin_noise_float_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' }\n\t]\n} );\n\nmx_perlin_noise_float_1.setLayout( {\n\tname: 'mx_perlin_noise_float_1',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' }\n\t]\n} );\n\nmx_perlin_noise_vec3_0.setLayout( {\n\tname: 'mx_perlin_noise_vec3_0',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' }\n\t]\n} );\n\nmx_perlin_noise_vec3_1.setLayout( {\n\tname: 'mx_perlin_noise_vec3_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' }\n\t]\n} );\n\nmx_cell_noise_float_0.setLayout( {\n\tname: 'mx_cell_noise_float_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'float' }\n\t]\n} );\n\nmx_cell_noise_float_1.setLayout( {\n\tname: 'mx_cell_noise_float_1',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' }\n\t]\n} );\n\nmx_cell_noise_float_2.setLayout( {\n\tname: 'mx_cell_noise_float_2',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' }\n\t]\n} );\n\nmx_cell_noise_float_3.setLayout( {\n\tname: 'mx_cell_noise_float_3',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec4' }\n\t]\n} );\n\nmx_cell_noise_vec3_0.setLayout( {\n\tname: 'mx_cell_noise_vec3_0',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'float' }\n\t]\n} );\n\nmx_cell_noise_vec3_1.setLayout( {\n\tname: 'mx_cell_noise_vec3_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' }\n\t]\n} );\n\nmx_cell_noise_vec3_2.setLayout( {\n\tname: 'mx_cell_noise_vec3_2',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' }\n\t]\n} );\n\nmx_cell_noise_vec3_3.setLayout( {\n\tname: 'mx_cell_noise_vec3_3',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec4' }\n\t]\n} );\n\nmx_fractal_noise_float.setLayout( {\n\tname: 'mx_fractal_noise_float',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'octaves', type: 'int' },\n\t\t{ name: 'lacunarity', type: 'float' },\n\t\t{ name: 'diminish', type: 'float' }\n\t]\n} );\n\nmx_fractal_noise_vec3.setLayout( {\n\tname: 'mx_fractal_noise_vec3',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'octaves', type: 'int' },\n\t\t{ name: 'lacunarity', type: 'float' },\n\t\t{ name: 'diminish', type: 'float' }\n\t]\n} );\n\nmx_fractal_noise_vec2.setLayout( {\n\tname: 'mx_fractal_noise_vec2',\n\ttype: 'vec2',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'octaves', type: 'int' },\n\t\t{ name: 'lacunarity', type: 'float' },\n\t\t{ name: 'diminish', type: 'float' }\n\t]\n} );\n\nmx_fractal_noise_vec4.setLayout( {\n\tname: 'mx_fractal_noise_vec4',\n\ttype: 'vec4',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'octaves', type: 'int' },\n\t\t{ name: 'lacunarity', type: 'float' },\n\t\t{ name: 'diminish', type: 'float' }\n\t]\n} );\n\nmx_worley_distance_0.setLayout( {\n\tname: 'mx_worley_distance_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' },\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' },\n\t\t{ name: 'xoff', type: 'int' },\n\t\t{ name: 'yoff', type: 'int' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nmx_worley_distance_1.setLayout( {\n\tname: 'mx_worley_distance_1',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' },\n\t\t{ name: 'z', type: 'int' },\n\t\t{ name: 'xoff', type: 'int' },\n\t\t{ name: 'yoff', type: 'int' },\n\t\t{ name: 'zoff', type: 'int' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nmx_worley_noise_float_0.setLayout( {\n\tname: 'mx_worley_noise_float_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nmx_worley_noise_vec2_0.setLayout( {\n\tname: 'mx_worley_noise_vec2_0',\n\ttype: 'vec2',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nmx_worley_noise_vec3_0.setLayout( {\n\tname: 'mx_worley_noise_vec3_0',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nmx_worley_noise_float_1.setLayout( {\n\tname: 'mx_worley_noise_float_1',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nmx_worley_noise_vec2_1.setLayout( {\n\tname: 'mx_worley_noise_vec2_1',\n\ttype: 'vec2',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nmx_worley_noise_vec3_1.setLayout( {\n\tname: 'mx_worley_noise_vec3_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nexport { mx_select, mx_negate_if, mx_floor, mx_floorfrac, mx_bilerp, mx_trilerp, mx_gradient_float, mx_gradient_vec3, mx_gradient_scale2d, mx_gradient_scale3d, mx_rotl32, mx_bjmix, mx_bjfinal, mx_bits_to_01, mx_fade, mx_hash_int, mx_hash_vec3, mx_perlin_noise_float, mx_perlin_noise_vec3, mx_cell_noise_float, mx_cell_noise_vec3, mx_fractal_noise_float, mx_fractal_noise_vec3, mx_fractal_noise_vec2, mx_fractal_noise_vec4, mx_worley_distance, mx_worley_noise_float, mx_worley_noise_vec2, mx_worley_noise_vec3 };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}