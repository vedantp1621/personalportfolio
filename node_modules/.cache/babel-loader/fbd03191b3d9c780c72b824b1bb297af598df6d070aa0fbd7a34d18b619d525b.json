{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Node, { addNodeClass } from './Node.js';\nimport { cond } from '../math/CondNode.js';\nimport { ShaderNode, nodeProxy, getCurrentStack, setCurrentStack } from '../shadernode/ShaderNode.js';\nvar StackNode = /*#__PURE__*/function (_Node) {\n  _inherits(StackNode, _Node);\n  var _super = _createSuper(StackNode);\n  function StackNode() {\n    var _this;\n    var parent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    _classCallCheck(this, StackNode);\n    _this = _super.call(this);\n    _this.nodes = [];\n    _this.outputNode = null;\n    _this.parent = parent;\n    _this._currentCond = null;\n    _this.isStackNode = true;\n    return _this;\n  }\n  _createClass(StackNode, [{\n    key: \"getNodeType\",\n    value: function getNodeType(builder) {\n      return this.outputNode ? this.outputNode.getNodeType(builder) : 'void';\n    }\n  }, {\n    key: \"add\",\n    value: function add(node) {\n      this.nodes.push(node);\n      return this;\n    }\n  }, {\n    key: \"if\",\n    value: function _if(boolNode, method) {\n      var methodNode = new ShaderNode(method);\n      this._currentCond = cond(boolNode, methodNode);\n      return this.add(this._currentCond);\n    }\n  }, {\n    key: \"elseif\",\n    value: function elseif(boolNode, method) {\n      var methodNode = new ShaderNode(method);\n      var ifNode = cond(boolNode, methodNode);\n      this._currentCond.elseNode = ifNode;\n      this._currentCond = ifNode;\n      return this;\n    }\n  }, {\n    key: \"else\",\n    value: function _else(method) {\n      this._currentCond.elseNode = new ShaderNode(method);\n      return this;\n    }\n  }, {\n    key: \"build\",\n    value: function build(builder) {\n      var _this$outputNode, _get2;\n      var previousStack = getCurrentStack();\n      setCurrentStack(this);\n      var _iterator = _createForOfIteratorHelper(this.nodes),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var node = _step.value;\n          node.build(builder, 'void');\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      setCurrentStack(previousStack);\n      for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        params[_key - 1] = arguments[_key];\n      }\n      return this.outputNode ? (_this$outputNode = this.outputNode).build.apply(_this$outputNode, [builder].concat(params)) : (_get2 = _get(_getPrototypeOf(StackNode.prototype), \"build\", this)).call.apply(_get2, [this, builder].concat(params));\n    }\n  }]);\n  return StackNode;\n}(Node);\nexport default StackNode;\nexport var stack = nodeProxy(StackNode);\naddNodeClass('StackNode', StackNode);","map":{"version":3,"names":["Node","addNodeClass","cond","ShaderNode","nodeProxy","getCurrentStack","setCurrentStack","StackNode","_Node","_inherits","_super","_createSuper","_this","parent","arguments","length","undefined","_classCallCheck","call","nodes","outputNode","_currentCond","isStackNode","_createClass","key","value","getNodeType","builder","add","node","push","_if","boolNode","method","methodNode","elseif","ifNode","elseNode","_else","build","_this$outputNode","_get2","previousStack","_iterator","_createForOfIteratorHelper","_step","s","n","done","err","e","f","_len","params","Array","_key","apply","concat","_get","_getPrototypeOf","prototype","stack"],"sources":["/Users/vedant/node_modules/three/examples/jsm/nodes/core/StackNode.js"],"sourcesContent":["import Node, { addNodeClass } from './Node.js';\nimport { cond } from '../math/CondNode.js';\nimport { ShaderNode, nodeProxy, getCurrentStack, setCurrentStack } from '../shadernode/ShaderNode.js';\n\nclass StackNode extends Node {\n\n\tconstructor( parent = null ) {\n\n\t\tsuper();\n\n\t\tthis.nodes = [];\n\t\tthis.outputNode = null;\n\n\t\tthis.parent = parent;\n\n\t\tthis._currentCond = null;\n\n\t\tthis.isStackNode = true;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.outputNode ? this.outputNode.getNodeType( builder ) : 'void';\n\n\t}\n\n\tadd( node ) {\n\n\t\tthis.nodes.push( node );\n\n\t\treturn this;\n\n\t}\n\n\tif( boolNode, method ) {\n\n\t\tconst methodNode = new ShaderNode( method );\n\t\tthis._currentCond = cond( boolNode, methodNode );\n\n\t\treturn this.add( this._currentCond );\n\n\t}\n\n\telseif( boolNode, method ) {\n\n\t\tconst methodNode = new ShaderNode( method );\n\t\tconst ifNode = cond( boolNode, methodNode );\n\n\t\tthis._currentCond.elseNode = ifNode;\n\t\tthis._currentCond = ifNode;\n\n\t\treturn this;\n\n\t}\n\n\telse( method ) {\n\n\t\tthis._currentCond.elseNode = new ShaderNode( method );\n\n\t\treturn this;\n\n\t}\n\n\tbuild( builder, ...params ) {\n\n\t\tconst previousStack = getCurrentStack();\n\n\t\tsetCurrentStack( this );\n\n\t\tfor ( const node of this.nodes ) {\n\n\t\t\tnode.build( builder, 'void' );\n\n\t\t}\n\n\t\tsetCurrentStack( previousStack );\n\n\t\treturn this.outputNode ? this.outputNode.build( builder, ...params ) : super.build( builder, ...params );\n\n\t}\n\n}\n\nexport default StackNode;\n\nexport const stack = nodeProxy( StackNode );\n\naddNodeClass( 'StackNode', StackNode );\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}