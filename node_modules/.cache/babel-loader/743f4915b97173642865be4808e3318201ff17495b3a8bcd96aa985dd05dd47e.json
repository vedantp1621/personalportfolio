{"ast":null,"code":"import F_Schlick from './F_Schlick.js';\nimport V_GGX_SmithCorrelated from './V_GGX_SmithCorrelated.js';\nimport D_GGX from './D_GGX.js';\nimport { transformedNormalView } from '../../accessors/NormalNode.js';\nimport { positionViewDirection } from '../../accessors/PositionNode.js';\nimport { iridescence } from '../../core/PropertyNode.js';\nimport { tslFn } from '../../shadernode/ShaderNode.js';\n\n// GGX Distribution, Schlick Fresnel, GGX_SmithCorrelated Visibility\nconst BRDF_GGX = tslFn(inputs => {\n  const {\n    lightDirection,\n    f0,\n    f90,\n    roughness,\n    iridescenceFresnel\n  } = inputs;\n  const normalView = inputs.normalView || transformedNormalView;\n  const alpha = roughness.pow2(); // UE4's roughness\n\n  const halfDir = lightDirection.add(positionViewDirection).normalize();\n  const dotNL = normalView.dot(lightDirection).clamp();\n  const dotNV = normalView.dot(positionViewDirection).clamp(); // @ TODO: Move to core dotNV\n  const dotNH = normalView.dot(halfDir).clamp();\n  const dotVH = positionViewDirection.dot(halfDir).clamp();\n  let F = F_Schlick({\n    f0,\n    f90,\n    dotVH\n  });\n  if (iridescenceFresnel) {\n    F = iridescence.mix(F, iridescenceFresnel);\n  }\n  const V = V_GGX_SmithCorrelated({\n    alpha,\n    dotNL,\n    dotNV\n  });\n  const D = D_GGX({\n    alpha,\n    dotNH\n  });\n  return F.mul(V).mul(D);\n}); // validated\n\nexport default BRDF_GGX;","map":{"version":3,"names":["F_Schlick","V_GGX_SmithCorrelated","D_GGX","transformedNormalView","positionViewDirection","iridescence","tslFn","BRDF_GGX","inputs","lightDirection","f0","f90","roughness","iridescenceFresnel","normalView","alpha","pow2","halfDir","add","normalize","dotNL","dot","clamp","dotNV","dotNH","dotVH","F","mix","V","D","mul"],"sources":["/Users/vedant/node_modules/three/examples/jsm/nodes/functions/BSDF/BRDF_GGX.js"],"sourcesContent":["import F_Schlick from './F_Schlick.js';\nimport V_GGX_SmithCorrelated from './V_GGX_SmithCorrelated.js';\nimport D_GGX from './D_GGX.js';\nimport { transformedNormalView } from '../../accessors/NormalNode.js';\nimport { positionViewDirection } from '../../accessors/PositionNode.js';\nimport { iridescence } from '../../core/PropertyNode.js';\nimport { tslFn } from '../../shadernode/ShaderNode.js';\n\n// GGX Distribution, Schlick Fresnel, GGX_SmithCorrelated Visibility\nconst BRDF_GGX = tslFn( ( inputs ) => {\n\n\tconst { lightDirection, f0, f90, roughness, iridescenceFresnel } = inputs;\n\n\tconst normalView = inputs.normalView || transformedNormalView;\n\n\tconst alpha = roughness.pow2(); // UE4's roughness\n\n\tconst halfDir = lightDirection.add( positionViewDirection ).normalize();\n\n\tconst dotNL = normalView.dot( lightDirection ).clamp();\n\tconst dotNV = normalView.dot( positionViewDirection ).clamp(); // @ TODO: Move to core dotNV\n\tconst dotNH = normalView.dot( halfDir ).clamp();\n\tconst dotVH = positionViewDirection.dot( halfDir ).clamp();\n\n\tlet F = F_Schlick( { f0, f90, dotVH } );\n\n\tif ( iridescenceFresnel ) {\n\n\t\tF = iridescence.mix( F, iridescenceFresnel );\n\n\t}\n\n\tconst V = V_GGX_SmithCorrelated( { alpha, dotNL, dotNV } );\n\tconst D = D_GGX( { alpha, dotNH } );\n\n\treturn F.mul( V ).mul( D );\n\n} ); // validated\n\nexport default BRDF_GGX;\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,gBAAgB;AACtC,OAAOC,qBAAqB,MAAM,4BAA4B;AAC9D,OAAOC,KAAK,MAAM,YAAY;AAC9B,SAASC,qBAAqB,QAAQ,+BAA+B;AACrE,SAASC,qBAAqB,QAAQ,iCAAiC;AACvE,SAASC,WAAW,QAAQ,4BAA4B;AACxD,SAASC,KAAK,QAAQ,gCAAgC;;AAEtD;AACA,MAAMC,QAAQ,GAAGD,KAAK,CAAIE,MAAM,IAAM;EAErC,MAAM;IAAEC,cAAc;IAAEC,EAAE;IAAEC,GAAG;IAAEC,SAAS;IAAEC;EAAmB,CAAC,GAAGL,MAAM;EAEzE,MAAMM,UAAU,GAAGN,MAAM,CAACM,UAAU,IAAIX,qBAAqB;EAE7D,MAAMY,KAAK,GAAGH,SAAS,CAACI,IAAI,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAMC,OAAO,GAAGR,cAAc,CAACS,GAAG,CAAEd,qBAAsB,CAAC,CAACe,SAAS,CAAC,CAAC;EAEvE,MAAMC,KAAK,GAAGN,UAAU,CAACO,GAAG,CAAEZ,cAAe,CAAC,CAACa,KAAK,CAAC,CAAC;EACtD,MAAMC,KAAK,GAAGT,UAAU,CAACO,GAAG,CAAEjB,qBAAsB,CAAC,CAACkB,KAAK,CAAC,CAAC,CAAC,CAAC;EAC/D,MAAME,KAAK,GAAGV,UAAU,CAACO,GAAG,CAAEJ,OAAQ,CAAC,CAACK,KAAK,CAAC,CAAC;EAC/C,MAAMG,KAAK,GAAGrB,qBAAqB,CAACiB,GAAG,CAAEJ,OAAQ,CAAC,CAACK,KAAK,CAAC,CAAC;EAE1D,IAAII,CAAC,GAAG1B,SAAS,CAAE;IAAEU,EAAE;IAAEC,GAAG;IAAEc;EAAM,CAAE,CAAC;EAEvC,IAAKZ,kBAAkB,EAAG;IAEzBa,CAAC,GAAGrB,WAAW,CAACsB,GAAG,CAAED,CAAC,EAAEb,kBAAmB,CAAC;EAE7C;EAEA,MAAMe,CAAC,GAAG3B,qBAAqB,CAAE;IAAEc,KAAK;IAAEK,KAAK;IAAEG;EAAM,CAAE,CAAC;EAC1D,MAAMM,CAAC,GAAG3B,KAAK,CAAE;IAAEa,KAAK;IAAES;EAAM,CAAE,CAAC;EAEnC,OAAOE,CAAC,CAACI,GAAG,CAAEF,CAAE,CAAC,CAACE,GAAG,CAAED,CAAE,CAAC;AAE3B,CAAE,CAAC,CAAC,CAAC;;AAEL,eAAetB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}