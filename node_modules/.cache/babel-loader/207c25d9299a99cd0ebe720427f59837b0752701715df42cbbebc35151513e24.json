{"ast":null,"code":"import _toConsumableArray from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Node, { addNodeClass } from '../core/Node.js';\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\nvar FunctionOverloadingNode = /*#__PURE__*/function (_Node) {\n  _inherits(FunctionOverloadingNode, _Node);\n  var _super = _createSuper(FunctionOverloadingNode);\n  function FunctionOverloadingNode() {\n    var _this;\n    var functionNodes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    _classCallCheck(this, FunctionOverloadingNode);\n    _this = _super.call(this);\n    _this.functionNodes = functionNodes;\n    for (var _len = arguments.length, parametersNodes = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      parametersNodes[_key - 1] = arguments[_key];\n    }\n    _this.parametersNodes = parametersNodes;\n    _this._candidateFnCall = null;\n    return _this;\n  }\n  _createClass(FunctionOverloadingNode, [{\n    key: \"getNodeType\",\n    value: function getNodeType() {\n      return this.functionNodes[0].shaderNode.layout.type;\n    }\n  }, {\n    key: \"setup\",\n    value: function setup(builder) {\n      var params = this.parametersNodes;\n      var candidateFnCall = this._candidateFnCall;\n      if (candidateFnCall === null) {\n        var candidateFn = null;\n        var candidateScore = -1;\n        var _iterator = _createForOfIteratorHelper(this.functionNodes),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var functionNode = _step.value;\n            var shaderNode = functionNode.shaderNode;\n            var layout = shaderNode.layout;\n            if (layout === null) {\n              throw new Error('FunctionOverloadingNode: FunctionNode must be a layout.');\n            }\n            var inputs = layout.inputs;\n            if (params.length === inputs.length) {\n              var score = 0;\n              for (var i = 0; i < params.length; i++) {\n                var param = params[i];\n                var input = inputs[i];\n                if (param.getNodeType(builder) === input.type) {\n                  score++;\n                } else {\n                  score = 0;\n                }\n              }\n              if (score > candidateScore) {\n                candidateFn = functionNode;\n                candidateScore = score;\n              }\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        this._candidateFnCall = candidateFnCall = candidateFn.apply(void 0, _toConsumableArray(params));\n      }\n      return candidateFnCall;\n    }\n  }]);\n  return FunctionOverloadingNode;\n}(Node);\nexport default FunctionOverloadingNode;\nvar overloadingBaseFn = nodeProxy(FunctionOverloadingNode);\nexport var overloadingFn = function overloadingFn(functionNodes) {\n  return function () {\n    for (var _len2 = arguments.length, params = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      params[_key2] = arguments[_key2];\n    }\n    return overloadingBaseFn.apply(void 0, [functionNodes].concat(params));\n  };\n};\naddNodeClass('FunctionOverloadingNode', FunctionOverloadingNode);","map":{"version":3,"names":["Node","addNodeClass","nodeProxy","FunctionOverloadingNode","_Node","_inherits","_super","_createSuper","_this","functionNodes","arguments","length","undefined","_classCallCheck","call","_len","parametersNodes","Array","_key","_candidateFnCall","_createClass","key","value","getNodeType","shaderNode","layout","type","setup","builder","params","candidateFnCall","candidateFn","candidateScore","_iterator","_createForOfIteratorHelper","_step","s","n","done","functionNode","Error","inputs","score","i","param","input","err","e","f","apply","_toConsumableArray","overloadingBaseFn","overloadingFn","_len2","_key2","concat"],"sources":["/Users/vedant/node_modules/three/examples/jsm/nodes/utils/FunctionOverloadingNode.js"],"sourcesContent":["import Node, { addNodeClass } from '../core/Node.js';\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\n\nclass FunctionOverloadingNode extends Node {\n\n\tconstructor( functionNodes = [], ...parametersNodes ) {\n\n\t\tsuper();\n\n\t\tthis.functionNodes = functionNodes;\n\t\tthis.parametersNodes = parametersNodes;\n\n\t\tthis._candidateFnCall = null;\n\n\t}\n\n\tgetNodeType() {\n\n\t\treturn this.functionNodes[ 0 ].shaderNode.layout.type;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst params = this.parametersNodes;\n\n\t\tlet candidateFnCall = this._candidateFnCall;\n\n\t\tif ( candidateFnCall === null ) {\n\n\t\t\tlet candidateFn = null;\n\t\t\tlet candidateScore = - 1;\n\n\t\t\tfor ( const functionNode of this.functionNodes ) {\n\n\t\t\t\tconst shaderNode = functionNode.shaderNode;\n\t\t\t\tconst layout = shaderNode.layout;\n\n\t\t\t\tif ( layout === null ) {\n\n\t\t\t\t\tthrow new Error( 'FunctionOverloadingNode: FunctionNode must be a layout.' );\n\n\t\t\t\t}\n\n\t\t\t\tconst inputs = layout.inputs;\n\n\t\t\t\tif ( params.length === inputs.length ) {\n\n\t\t\t\t\tlet score = 0;\n\n\t\t\t\t\tfor ( let i = 0; i < params.length; i ++ ) {\n\n\t\t\t\t\t\tconst param = params[ i ];\n\t\t\t\t\t\tconst input = inputs[ i ];\n\n\t\t\t\t\t\tif ( param.getNodeType( builder ) === input.type ) {\n\n\t\t\t\t\t\t\tscore ++;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tscore = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( score > candidateScore ) {\n\n\t\t\t\t\t\tcandidateFn = functionNode;\n\t\t\t\t\t\tcandidateScore = score;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._candidateFnCall = candidateFnCall = candidateFn( ...params );\n\n\t\t}\n\n\t\treturn candidateFnCall;\n\n\t}\n\n}\n\nexport default FunctionOverloadingNode;\n\nconst overloadingBaseFn = nodeProxy( FunctionOverloadingNode );\n\nexport const overloadingFn = ( functionNodes ) => ( ...params ) => overloadingBaseFn( functionNodes, ...params );\n\naddNodeClass( 'FunctionOverloadingNode', FunctionOverloadingNode );\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}