{"ast":null,"code":"import _classCallCheck from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { addNodeMaterial } from './NodeMaterial.js';\nimport { transformedNormalView } from '../accessors/NormalNode.js';\nimport { positionViewDirection } from '../accessors/PositionNode.js';\nimport PhysicalLightingModel from '../functions/PhysicalLightingModel.js';\nimport MeshPhysicalNodeMaterial from './MeshPhysicalNodeMaterial.js';\nimport { float, vec3 } from '../shadernode/ShaderNode.js';\nvar SSSLightingModel = /*#__PURE__*/function (_PhysicalLightingMode) {\n  _inherits(SSSLightingModel, _PhysicalLightingMode);\n  var _super = _createSuper(SSSLightingModel);\n  function SSSLightingModel(useClearcoat, useSheen, useIridescence, useSSS) {\n    var _this;\n    _classCallCheck(this, SSSLightingModel);\n    _this = _super.call(this, useClearcoat, useSheen, useIridescence);\n    _this.useSSS = useSSS;\n    return _this;\n  }\n  _createClass(SSSLightingModel, [{\n    key: \"direct\",\n    value: function direct(_ref, stack, builder) {\n      var lightDirection = _ref.lightDirection,\n        lightColor = _ref.lightColor,\n        reflectedLight = _ref.reflectedLight;\n      if (this.useSSS === true) {\n        var material = builder.material;\n        var thicknessColorNode = material.thicknessColorNode,\n          thicknessDistortionNode = material.thicknessDistortionNode,\n          thicknessAmbientNode = material.thicknessAmbientNode,\n          thicknessAttenuationNode = material.thicknessAttenuationNode,\n          thicknessPowerNode = material.thicknessPowerNode,\n          thicknessScaleNode = material.thicknessScaleNode;\n        var scatteringHalf = lightDirection.add(transformedNormalView.mul(thicknessDistortionNode)).normalize();\n        var scatteringDot = float(positionViewDirection.dot(scatteringHalf.negate()).saturate().pow(thicknessPowerNode).mul(thicknessScaleNode));\n        var scatteringIllu = vec3(scatteringDot.add(thicknessAmbientNode).mul(thicknessColorNode));\n        reflectedLight.directDiffuse.addAssign(scatteringIllu.mul(thicknessAttenuationNode.mul(lightColor)));\n      }\n      _get(_getPrototypeOf(SSSLightingModel.prototype), \"direct\", this).call(this, {\n        lightDirection: lightDirection,\n        lightColor: lightColor,\n        reflectedLight: reflectedLight\n      }, stack, builder);\n    }\n  }]);\n  return SSSLightingModel;\n}(PhysicalLightingModel);\nvar MeshSSSNodeMaterial = /*#__PURE__*/function (_MeshPhysicalNodeMate) {\n  _inherits(MeshSSSNodeMaterial, _MeshPhysicalNodeMate);\n  var _super2 = _createSuper(MeshSSSNodeMaterial);\n  function MeshSSSNodeMaterial(parameters) {\n    var _this2;\n    _classCallCheck(this, MeshSSSNodeMaterial);\n    _this2 = _super2.call(this, parameters);\n    _this2.thicknessColorNode = null;\n    _this2.thicknessDistortionNode = float(0.1);\n    _this2.thicknessAmbientNode = float(0.0);\n    _this2.thicknessAttenuationNode = float(.1);\n    _this2.thicknessPowerNode = float(2.0);\n    _this2.thicknessScaleNode = float(10.0);\n    return _this2;\n  }\n  _createClass(MeshSSSNodeMaterial, [{\n    key: \"useSSS\",\n    get: function get() {\n      return this.thicknessColorNode !== null;\n    }\n  }, {\n    key: \"setupLightingModel\",\n    value: function setupLightingModel( /*builder*/\n    ) {\n      return new SSSLightingModel(this.useClearcoat, this.useSheen, this.useIridescence, this.useSSS);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source) {\n      this.thicknessColorNode = source.thicknessColorNode;\n      this.thicknessDistortionNode = source.thicknessDistortionNode;\n      this.thicknessAmbientNode = source.thicknessAmbientNode;\n      this.thicknessAttenuationNode = source.thicknessAttenuationNode;\n      this.thicknessPowerNode = source.thicknessPowerNode;\n      this.thicknessScaleNode = source.thicknessScaleNode;\n      return _get(_getPrototypeOf(MeshSSSNodeMaterial.prototype), \"copy\", this).call(this, source);\n    }\n  }]);\n  return MeshSSSNodeMaterial;\n}(MeshPhysicalNodeMaterial);\nexport default MeshSSSNodeMaterial;\naddNodeMaterial('MeshSSSNodeMaterial', MeshSSSNodeMaterial);","map":{"version":3,"names":["addNodeMaterial","transformedNormalView","positionViewDirection","PhysicalLightingModel","MeshPhysicalNodeMaterial","float","vec3","SSSLightingModel","_PhysicalLightingMode","_inherits","_super","_createSuper","useClearcoat","useSheen","useIridescence","useSSS","_this","_classCallCheck","call","_createClass","key","value","direct","_ref","stack","builder","lightDirection","lightColor","reflectedLight","material","thicknessColorNode","thicknessDistortionNode","thicknessAmbientNode","thicknessAttenuationNode","thicknessPowerNode","thicknessScaleNode","scatteringHalf","add","mul","normalize","scatteringDot","dot","negate","saturate","pow","scatteringIllu","directDiffuse","addAssign","_get","_getPrototypeOf","prototype","MeshSSSNodeMaterial","_MeshPhysicalNodeMate","_super2","parameters","_this2","get","setupLightingModel","copy","source"],"sources":["/Users/vedant/node_modules/three/examples/jsm/nodes/materials/MeshSSSNodeMaterial.js"],"sourcesContent":["import { addNodeMaterial } from './NodeMaterial.js';\nimport { transformedNormalView } from '../accessors/NormalNode.js';\nimport { positionViewDirection } from '../accessors/PositionNode.js';\nimport PhysicalLightingModel from '../functions/PhysicalLightingModel.js';\nimport MeshPhysicalNodeMaterial from './MeshPhysicalNodeMaterial.js';\nimport { float, vec3 } from '../shadernode/ShaderNode.js';\n\nclass SSSLightingModel extends PhysicalLightingModel {\n\n\tconstructor( useClearcoat, useSheen, useIridescence, useSSS ) {\n\n\t\tsuper( useClearcoat, useSheen, useIridescence );\n\n\t\tthis.useSSS = useSSS;\n\n\t}\n\n\tdirect( { lightDirection, lightColor, reflectedLight }, stack, builder ) {\n\n\t\tif ( this.useSSS === true ) {\n\n\t\t\tconst material = builder.material;\n\n\t\t\tconst { thicknessColorNode, thicknessDistortionNode, thicknessAmbientNode, thicknessAttenuationNode, thicknessPowerNode, thicknessScaleNode } = material;\n\n\t\t\tconst scatteringHalf = lightDirection.add( transformedNormalView.mul( thicknessDistortionNode ) ).normalize();\n\t\t\tconst scatteringDot = float( positionViewDirection.dot( scatteringHalf.negate() ).saturate().pow( thicknessPowerNode ).mul( thicknessScaleNode ) );\n\t\t\tconst scatteringIllu = vec3( scatteringDot.add( thicknessAmbientNode ).mul( thicknessColorNode ) );\n\n\t\t\treflectedLight.directDiffuse.addAssign( scatteringIllu.mul( thicknessAttenuationNode.mul( lightColor ) ) );\n\n\t\t}\n\n\t\tsuper.direct( { lightDirection, lightColor, reflectedLight }, stack, builder );\n\n\t}\n\n}\n\nclass MeshSSSNodeMaterial extends MeshPhysicalNodeMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.thicknessColorNode = null;\n\t\tthis.thicknessDistortionNode = float( 0.1 );\n\t\tthis.thicknessAmbientNode = float( 0.0 );\n\t\tthis.thicknessAttenuationNode = float( .1 );\n\t\tthis.thicknessPowerNode = float( 2.0 );\n\t\tthis.thicknessScaleNode = float( 10.0 );\n\n\t}\n\n\tget useSSS() {\n\n\t\treturn this.thicknessColorNode !== null;\n\n\t}\n\n\tsetupLightingModel( /*builder*/ ) {\n\n\t\treturn new SSSLightingModel( this.useClearcoat, this.useSheen, this.useIridescence, this.useSSS );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.thicknessColorNode = source.thicknessColorNode;\n\t\tthis.thicknessDistortionNode = source.thicknessDistortionNode;\n\t\tthis.thicknessAmbientNode = source.thicknessAmbientNode;\n\t\tthis.thicknessAttenuationNode = source.thicknessAttenuationNode;\n\t\tthis.thicknessPowerNode = source.thicknessPowerNode;\n\t\tthis.thicknessScaleNode = source.thicknessScaleNode;\n\n\t\treturn super.copy( source );\n\n\t}\n\n}\n\nexport default MeshSSSNodeMaterial;\n\naddNodeMaterial( 'MeshSSSNodeMaterial', MeshSSSNodeMaterial );\n"],"mappings":";;;;;;AAAA,SAASA,eAAe,QAAQ,mBAAmB;AACnD,SAASC,qBAAqB,QAAQ,4BAA4B;AAClE,SAASC,qBAAqB,QAAQ,8BAA8B;AACpE,OAAOC,qBAAqB,MAAM,uCAAuC;AACzE,OAAOC,wBAAwB,MAAM,+BAA+B;AACpE,SAASC,KAAK,EAAEC,IAAI,QAAQ,6BAA6B;AAAC,IAEpDC,gBAAgB,0BAAAC,qBAAA;EAAAC,SAAA,CAAAF,gBAAA,EAAAC,qBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,gBAAA;EAErB,SAAAA,iBAAaK,YAAY,EAAEC,QAAQ,EAAEC,cAAc,EAAEC,MAAM,EAAG;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAV,gBAAA;IAE7DS,KAAA,GAAAN,MAAA,CAAAQ,IAAA,OAAON,YAAY,EAAEC,QAAQ,EAAEC,cAAc;IAE7CE,KAAA,CAAKD,MAAM,GAAGA,MAAM;IAAC,OAAAC,KAAA;EAEtB;EAACG,YAAA,CAAAZ,gBAAA;IAAAa,GAAA;IAAAC,KAAA,EAED,SAAAC,OAAAC,IAAA,EAAwDC,KAAK,EAAEC,OAAO,EAAG;MAAA,IAA/DC,cAAc,GAAAH,IAAA,CAAdG,cAAc;QAAEC,UAAU,GAAAJ,IAAA,CAAVI,UAAU;QAAEC,cAAc,GAAAL,IAAA,CAAdK,cAAc;MAEnD,IAAK,IAAI,CAACb,MAAM,KAAK,IAAI,EAAG;QAE3B,IAAMc,QAAQ,GAAGJ,OAAO,CAACI,QAAQ;QAEjC,IAAQC,kBAAkB,GAAsHD,QAAQ,CAAhJC,kBAAkB;UAAEC,uBAAuB,GAA6FF,QAAQ,CAA5HE,uBAAuB;UAAEC,oBAAoB,GAAuEH,QAAQ,CAAnGG,oBAAoB;UAAEC,wBAAwB,GAA6CJ,QAAQ,CAA7EI,wBAAwB;UAAEC,kBAAkB,GAAyBL,QAAQ,CAAnDK,kBAAkB;UAAEC,kBAAkB,GAAKN,QAAQ,CAA/BM,kBAAkB;QAE3I,IAAMC,cAAc,GAAGV,cAAc,CAACW,GAAG,CAAEpC,qBAAqB,CAACqC,GAAG,CAAEP,uBAAwB,CAAE,CAAC,CAACQ,SAAS,CAAC,CAAC;QAC7G,IAAMC,aAAa,GAAGnC,KAAK,CAAEH,qBAAqB,CAACuC,GAAG,CAAEL,cAAc,CAACM,MAAM,CAAC,CAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,GAAG,CAAEV,kBAAmB,CAAC,CAACI,GAAG,CAAEH,kBAAmB,CAAE,CAAC;QAClJ,IAAMU,cAAc,GAAGvC,IAAI,CAAEkC,aAAa,CAACH,GAAG,CAAEL,oBAAqB,CAAC,CAACM,GAAG,CAAER,kBAAmB,CAAE,CAAC;QAElGF,cAAc,CAACkB,aAAa,CAACC,SAAS,CAAEF,cAAc,CAACP,GAAG,CAAEL,wBAAwB,CAACK,GAAG,CAAEX,UAAW,CAAE,CAAE,CAAC;MAE3G;MAEAqB,IAAA,CAAAC,eAAA,CAAA1C,gBAAA,CAAA2C,SAAA,mBAAAhC,IAAA,OAAc;QAAEQ,cAAc,EAAdA,cAAc;QAAEC,UAAU,EAAVA,UAAU;QAAEC,cAAc,EAAdA;MAAe,CAAC,EAAEJ,KAAK,EAAEC,OAAO;IAE7E;EAAC;EAAA,OAAAlB,gBAAA;AAAA,EA5B6BJ,qBAAqB;AAAA,IAgC9CgD,mBAAmB,0BAAAC,qBAAA;EAAA3C,SAAA,CAAA0C,mBAAA,EAAAC,qBAAA;EAAA,IAAAC,OAAA,GAAA1C,YAAA,CAAAwC,mBAAA;EAExB,SAAAA,oBAAaG,UAAU,EAAG;IAAA,IAAAC,MAAA;IAAAtC,eAAA,OAAAkC,mBAAA;IAEzBI,MAAA,GAAAF,OAAA,CAAAnC,IAAA,OAAOoC,UAAU;IAEjBC,MAAA,CAAKzB,kBAAkB,GAAG,IAAI;IAC9ByB,MAAA,CAAKxB,uBAAuB,GAAG1B,KAAK,CAAE,GAAI,CAAC;IAC3CkD,MAAA,CAAKvB,oBAAoB,GAAG3B,KAAK,CAAE,GAAI,CAAC;IACxCkD,MAAA,CAAKtB,wBAAwB,GAAG5B,KAAK,CAAE,EAAG,CAAC;IAC3CkD,MAAA,CAAKrB,kBAAkB,GAAG7B,KAAK,CAAE,GAAI,CAAC;IACtCkD,MAAA,CAAKpB,kBAAkB,GAAG9B,KAAK,CAAE,IAAK,CAAC;IAAC,OAAAkD,MAAA;EAEzC;EAACpC,YAAA,CAAAgC,mBAAA;IAAA/B,GAAA;IAAAoC,GAAA,EAED,SAAAA,IAAA,EAAa;MAEZ,OAAO,IAAI,CAAC1B,kBAAkB,KAAK,IAAI;IAExC;EAAC;IAAAV,GAAA;IAAAC,KAAA,EAED,SAAAoC,mBAAA,CAAoB;IAAA,EAAc;MAEjC,OAAO,IAAIlD,gBAAgB,CAAE,IAAI,CAACK,YAAY,EAAE,IAAI,CAACC,QAAQ,EAAE,IAAI,CAACC,cAAc,EAAE,IAAI,CAACC,MAAO,CAAC;IAElG;EAAC;IAAAK,GAAA;IAAAC,KAAA,EAED,SAAAqC,KAAMC,MAAM,EAAG;MAEd,IAAI,CAAC7B,kBAAkB,GAAG6B,MAAM,CAAC7B,kBAAkB;MACnD,IAAI,CAACC,uBAAuB,GAAG4B,MAAM,CAAC5B,uBAAuB;MAC7D,IAAI,CAACC,oBAAoB,GAAG2B,MAAM,CAAC3B,oBAAoB;MACvD,IAAI,CAACC,wBAAwB,GAAG0B,MAAM,CAAC1B,wBAAwB;MAC/D,IAAI,CAACC,kBAAkB,GAAGyB,MAAM,CAACzB,kBAAkB;MACnD,IAAI,CAACC,kBAAkB,GAAGwB,MAAM,CAACxB,kBAAkB;MAEnD,OAAAa,IAAA,CAAAC,eAAA,CAAAE,mBAAA,CAAAD,SAAA,iBAAAhC,IAAA,OAAmByC,MAAM;IAE1B;EAAC;EAAA,OAAAR,mBAAA;AAAA,EAtCgC/C,wBAAwB;AA0C1D,eAAe+C,mBAAmB;AAElCnD,eAAe,CAAE,qBAAqB,EAAEmD,mBAAoB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}