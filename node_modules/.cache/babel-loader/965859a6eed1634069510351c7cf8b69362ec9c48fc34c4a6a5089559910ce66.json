{"ast":null,"code":"import _classCallCheck from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _construct from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/construct.js\";\nimport _toConsumableArray from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport Node, { addNodeClass } from '../core/Node.js';\nimport ArrayElementNode from '../utils/ArrayElementNode.js';\nimport ConvertNode from '../utils/ConvertNode.js';\nimport JoinNode from '../utils/JoinNode.js';\nimport SplitNode from '../utils/SplitNode.js';\nimport SetNode from '../utils/SetNode.js';\nimport ConstNode from '../core/ConstNode.js';\nimport { getValueFromType, getValueType } from '../core/NodeUtils.js';\n\n//\n\nvar currentStack = null;\nvar NodeElements = new Map(); // @TODO: Currently only a few nodes are added, probably also add others\n\nexport function addNodeElement(name, nodeElement) {\n  if (NodeElements.has(name)) {\n    console.warn(\"Redefinition of node element \".concat(name));\n    return;\n  }\n  if (typeof nodeElement !== 'function') throw new Error(\"Node element \".concat(name, \" is not a function\"));\n  NodeElements.set(name, nodeElement);\n}\nvar parseSwizzle = function parseSwizzle(props) {\n  return props.replace(/r|s/g, 'x').replace(/g|t/g, 'y').replace(/b|p/g, 'z').replace(/a|q/g, 'w');\n};\nvar shaderNodeHandler = {\n  setup: function setup(NodeClosure, params) {\n    var inputs = params.shift();\n    return NodeClosure.apply(void 0, [nodeObjects(inputs)].concat(_toConsumableArray(params)));\n  },\n  get: function get(node, prop, nodeObj) {\n    if (typeof prop === 'string' && node[prop] === undefined) {\n      if (node.isStackNode !== true && prop === 'assign') {\n        return function () {\n          var _currentStack;\n          for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n            params[_key] = arguments[_key];\n          }\n          (_currentStack = currentStack).assign.apply(_currentStack, [nodeObj].concat(params));\n          return nodeObj;\n        };\n      } else if (NodeElements.has(prop)) {\n        var nodeElement = NodeElements.get(prop);\n        return node.isStackNode ? function () {\n          return nodeObj.add(nodeElement.apply(void 0, arguments));\n        } : function () {\n          for (var _len2 = arguments.length, params = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            params[_key2] = arguments[_key2];\n          }\n          return nodeElement.apply(void 0, [nodeObj].concat(params));\n        };\n      } else if (prop === 'self') {\n        return node;\n      } else if (prop.endsWith('Assign') && NodeElements.has(prop.slice(0, prop.length - 'Assign'.length))) {\n        var _nodeElement = NodeElements.get(prop.slice(0, prop.length - 'Assign'.length));\n        return node.isStackNode ? function () {\n          return nodeObj.assign(arguments.length <= 0 ? undefined : arguments[0], _nodeElement.apply(void 0, arguments));\n        } : function () {\n          for (var _len3 = arguments.length, params = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n            params[_key3] = arguments[_key3];\n          }\n          return nodeObj.assign(_nodeElement.apply(void 0, [nodeObj].concat(params)));\n        };\n      } else if (/^[xyzwrgbastpq]{1,4}$/.test(prop) === true) {\n        // accessing properties ( swizzle )\n\n        prop = parseSwizzle(prop);\n        return nodeObject(new SplitNode(nodeObj, prop));\n      } else if (/^set[XYZWRGBASTPQ]{1,4}$/.test(prop) === true) {\n        // set properties ( swizzle )\n\n        prop = parseSwizzle(prop.slice(3).toLowerCase());\n\n        // sort to xyzw sequence\n\n        prop = prop.split('').sort().join('');\n        return function (value) {\n          return nodeObject(new SetNode(node, prop, value));\n        };\n      } else if (prop === 'width' || prop === 'height' || prop === 'depth') {\n        // accessing property\n\n        if (prop === 'width') prop = 'x';else if (prop === 'height') prop = 'y';else if (prop === 'depth') prop = 'z';\n        return nodeObject(new SplitNode(node, prop));\n      } else if (/^\\d+$/.test(prop) === true) {\n        // accessing array\n\n        return nodeObject(new ArrayElementNode(nodeObj, new ConstNode(Number(prop), 'uint')));\n      }\n    }\n    return Reflect.get(node, prop, nodeObj);\n  },\n  set: function set(node, prop, value, nodeObj) {\n    if (typeof prop === 'string' && node[prop] === undefined) {\n      // setting properties\n\n      if (/^[xyzwrgbastpq]{1,4}$/.test(prop) === true || prop === 'width' || prop === 'height' || prop === 'depth' || /^\\d+$/.test(prop) === true) {\n        nodeObj[prop].assign(value);\n        return true;\n      }\n    }\n    return Reflect.set(node, prop, value, nodeObj);\n  }\n};\nvar nodeObjectsCacheMap = new WeakMap();\nvar nodeBuilderFunctionsCacheMap = new WeakMap();\nvar ShaderNodeObject = function ShaderNodeObject(obj) {\n  var altType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var type = getValueType(obj);\n  if (type === 'node') {\n    var _nodeObject = nodeObjectsCacheMap.get(obj);\n    if (_nodeObject === undefined) {\n      _nodeObject = new Proxy(obj, shaderNodeHandler);\n      nodeObjectsCacheMap.set(obj, _nodeObject);\n      nodeObjectsCacheMap.set(_nodeObject, _nodeObject);\n    }\n    return _nodeObject;\n  } else if (altType === null && (type === 'float' || type === 'boolean') || type && type !== 'shader' && type !== 'string') {\n    return nodeObject(getConstNode(obj, altType));\n  } else if (type === 'shader') {\n    return tslFn(obj);\n  }\n  return obj;\n};\nvar ShaderNodeObjects = function ShaderNodeObjects(objects) {\n  var altType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  for (var name in objects) {\n    objects[name] = nodeObject(objects[name], altType);\n  }\n  return objects;\n};\nvar ShaderNodeArray = function ShaderNodeArray(array) {\n  var altType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var len = array.length;\n  for (var i = 0; i < len; i++) {\n    array[i] = nodeObject(array[i], altType);\n  }\n  return array;\n};\nvar ShaderNodeProxy = function ShaderNodeProxy(NodeClass) {\n  var scope = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var factor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var settings = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  var assignNode = function assignNode(node) {\n    return nodeObject(settings !== null ? Object.assign(node, settings) : node);\n  };\n  if (scope === null) {\n    return function () {\n      for (var _len4 = arguments.length, params = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        params[_key4] = arguments[_key4];\n      }\n      return assignNode(_construct(NodeClass, _toConsumableArray(nodeArray(params))));\n    };\n  } else if (factor !== null) {\n    factor = nodeObject(factor);\n    return function () {\n      for (var _len5 = arguments.length, params = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        params[_key5] = arguments[_key5];\n      }\n      return assignNode(_construct(NodeClass, [scope].concat(_toConsumableArray(nodeArray(params)), [factor])));\n    };\n  } else {\n    return function () {\n      for (var _len6 = arguments.length, params = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        params[_key6] = arguments[_key6];\n      }\n      return assignNode(_construct(NodeClass, [scope].concat(_toConsumableArray(nodeArray(params)))));\n    };\n  }\n};\nvar ShaderNodeImmutable = function ShaderNodeImmutable(NodeClass) {\n  for (var _len7 = arguments.length, params = new Array(_len7 > 1 ? _len7 - 1 : 0), _key7 = 1; _key7 < _len7; _key7++) {\n    params[_key7 - 1] = arguments[_key7];\n  }\n  return nodeObject(_construct(NodeClass, _toConsumableArray(nodeArray(params))));\n};\nvar ShaderCallNodeInternal = /*#__PURE__*/function (_Node) {\n  _inherits(ShaderCallNodeInternal, _Node);\n  var _super = _createSuper(ShaderCallNodeInternal);\n  function ShaderCallNodeInternal(shaderNode, inputNodes) {\n    var _this;\n    _classCallCheck(this, ShaderCallNodeInternal);\n    _this = _super.call(this);\n    _this.shaderNode = shaderNode;\n    _this.inputNodes = inputNodes;\n    return _this;\n  }\n  _createClass(ShaderCallNodeInternal, [{\n    key: \"getNodeType\",\n    value: function getNodeType(builder) {\n      var _builder$getNodePrope = builder.getNodeProperties(this),\n        outputNode = _builder$getNodePrope.outputNode;\n      return outputNode ? outputNode.getNodeType(builder) : _get(_getPrototypeOf(ShaderCallNodeInternal.prototype), \"getNodeType\", this).call(this, builder);\n    }\n  }, {\n    key: \"call\",\n    value: function call(builder) {\n      var shaderNode = this.shaderNode,\n        inputNodes = this.inputNodes;\n      if (shaderNode.layout) {\n        var functionNodesCacheMap = nodeBuilderFunctionsCacheMap.get(builder.constructor);\n        if (functionNodesCacheMap === undefined) {\n          functionNodesCacheMap = new WeakMap();\n          nodeBuilderFunctionsCacheMap.set(builder.constructor, functionNodesCacheMap);\n        }\n        var functionNode = functionNodesCacheMap.get(shaderNode);\n        if (functionNode === undefined) {\n          functionNode = nodeObject(builder.buildFunctionNode(shaderNode));\n          functionNodesCacheMap.set(shaderNode, functionNode);\n        }\n        if (builder.currentFunctionNode !== null) {\n          builder.currentFunctionNode.includes.push(functionNode);\n        }\n        return nodeObject(functionNode.call(inputNodes));\n      }\n      var jsFunc = shaderNode.jsFunc;\n      var outputNode = inputNodes !== null ? jsFunc(inputNodes, builder.stack, builder) : jsFunc(builder.stack, builder);\n      return nodeObject(outputNode);\n    }\n  }, {\n    key: \"setup\",\n    value: function setup(builder) {\n      builder.addStack();\n      builder.stack.outputNode = this.call(builder);\n      return builder.removeStack();\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder, output) {\n      var _builder$getNodePrope2 = builder.getNodeProperties(this),\n        outputNode = _builder$getNodePrope2.outputNode;\n      if (outputNode === null) {\n        // TSL: It's recommended to use `tslFn` in setup() pass.\n\n        return this.call(builder).build(builder, output);\n      }\n      return _get(_getPrototypeOf(ShaderCallNodeInternal.prototype), \"generate\", this).call(this, builder, output);\n    }\n  }]);\n  return ShaderCallNodeInternal;\n}(Node);\nvar ShaderNodeInternal = /*#__PURE__*/function (_Node2) {\n  _inherits(ShaderNodeInternal, _Node2);\n  var _super2 = _createSuper(ShaderNodeInternal);\n  function ShaderNodeInternal(jsFunc) {\n    var _this2;\n    _classCallCheck(this, ShaderNodeInternal);\n    _this2 = _super2.call(this);\n    _this2.jsFunc = jsFunc;\n    _this2.layout = null;\n    return _this2;\n  }\n  _createClass(ShaderNodeInternal, [{\n    key: \"isArrayInput\",\n    get: function get() {\n      return /^\\((\\s+)?\\[/.test(this.jsFunc.toString());\n    }\n  }, {\n    key: \"setLayout\",\n    value: function setLayout(layout) {\n      this.layout = layout;\n      return this;\n    }\n  }, {\n    key: \"call\",\n    value: function call() {\n      var inputs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      nodeObjects(inputs);\n      return nodeObject(new ShaderCallNodeInternal(this, inputs));\n    }\n  }, {\n    key: \"setup\",\n    value: function setup() {\n      return this.call();\n    }\n  }]);\n  return ShaderNodeInternal;\n}(Node);\nvar bools = [false, true];\nvar uints = [0, 1, 2, 3];\nvar ints = [-1, -2];\nvar floats = [0.5, 1.5, 1 / 3, 1e-6, 1e6, Math.PI, Math.PI * 2, 1 / Math.PI, 2 / Math.PI, 1 / (Math.PI * 2), Math.PI / 2];\nvar boolsCacheMap = new Map();\nfor (var _i = 0, _bools = bools; _i < _bools.length; _i++) {\n  var _bool = _bools[_i];\n  boolsCacheMap.set(_bool, new ConstNode(_bool));\n}\nvar uintsCacheMap = new Map();\nfor (var _i2 = 0, _uints = uints; _i2 < _uints.length; _i2++) {\n  var _uint = _uints[_i2];\n  uintsCacheMap.set(_uint, new ConstNode(_uint, 'uint'));\n}\nvar intsCacheMap = new Map(_toConsumableArray(uintsCacheMap).map(function (el) {\n  return new ConstNode(el.value, 'int');\n}));\nfor (var _i3 = 0, _ints = ints; _i3 < _ints.length; _i3++) {\n  var _int = _ints[_i3];\n  intsCacheMap.set(_int, new ConstNode(_int, 'int'));\n}\nvar floatsCacheMap = new Map(_toConsumableArray(intsCacheMap).map(function (el) {\n  return new ConstNode(el.value);\n}));\nfor (var _i4 = 0, _floats = floats; _i4 < _floats.length; _i4++) {\n  var _float = _floats[_i4];\n  floatsCacheMap.set(_float, new ConstNode(_float));\n}\nfor (var _i5 = 0, _floats2 = floats; _i5 < _floats2.length; _i5++) {\n  var _float2 = _floats2[_i5];\n  floatsCacheMap.set(-_float2, new ConstNode(-_float2));\n}\nvar cacheMaps = {\n  bool: boolsCacheMap,\n  uint: uintsCacheMap,\n  ints: intsCacheMap,\n  float: floatsCacheMap\n};\nvar constNodesCacheMap = new Map([].concat(_toConsumableArray(boolsCacheMap), _toConsumableArray(floatsCacheMap)));\nvar getConstNode = function getConstNode(value, type) {\n  if (constNodesCacheMap.has(value)) {\n    return constNodesCacheMap.get(value);\n  } else if (value.isNode === true) {\n    return value;\n  } else {\n    return new ConstNode(value, type);\n  }\n};\nvar safeGetNodeType = function safeGetNodeType(node) {\n  try {\n    return node.getNodeType();\n  } catch (_) {\n    return undefined;\n  }\n};\nvar ConvertType = function ConvertType(type) {\n  var cacheMap = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return function () {\n    for (var _len8 = arguments.length, params = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      params[_key8] = arguments[_key8];\n    }\n    if (params.length === 0 || !['bool', 'float', 'int', 'uint'].includes(type) && params.every(function (param) {\n      return typeof param !== 'object';\n    })) {\n      params = [getValueFromType.apply(void 0, [type].concat(_toConsumableArray(params)))];\n    }\n    if (params.length === 1 && cacheMap !== null && cacheMap.has(params[0])) {\n      return nodeObject(cacheMap.get(params[0]));\n    }\n    if (params.length === 1) {\n      var node = getConstNode(params[0], type);\n      if (safeGetNodeType(node) === type) return nodeObject(node);\n      return nodeObject(new ConvertNode(node, type));\n    }\n    var nodes = params.map(function (param) {\n      return getConstNode(param);\n    });\n    return nodeObject(new JoinNode(nodes, type));\n  };\n};\n\n// exports\n\n// utils\n\nexport var getConstNodeType = function getConstNodeType(value) {\n  return value !== undefined && value !== null ? value.nodeType || value.convertTo || (typeof value === 'string' ? value : null) : null;\n};\n\n// shader node base\n\nexport function ShaderNode(jsFunc) {\n  return new Proxy(new ShaderNodeInternal(jsFunc), shaderNodeHandler);\n}\nexport var nodeObject = function nodeObject(val) {\n  var altType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return (/* new */ShaderNodeObject(val, altType)\n  );\n};\nexport var nodeObjects = function nodeObjects(val) {\n  var altType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return new ShaderNodeObjects(val, altType);\n};\nexport var nodeArray = function nodeArray(val) {\n  var altType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return new ShaderNodeArray(val, altType);\n};\nexport var nodeProxy = function nodeProxy() {\n  for (var _len9 = arguments.length, params = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n    params[_key9] = arguments[_key9];\n  }\n  return _construct(ShaderNodeProxy, params);\n};\nexport var nodeImmutable = function nodeImmutable() {\n  for (var _len10 = arguments.length, params = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n    params[_key10] = arguments[_key10];\n  }\n  return _construct(ShaderNodeImmutable, params);\n};\nexport var shader = function shader(jsFunc) {\n  // @deprecated, r154\n\n  console.warn('TSL: shader() is deprecated. Use tslFn() instead.');\n  return new ShaderNode(jsFunc);\n};\nexport var tslFn = function tslFn(jsFunc) {\n  var shaderNode = new ShaderNode(jsFunc);\n  var fn = function fn() {\n    var inputs;\n    for (var _len11 = arguments.length, params = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {\n      params[_key11] = arguments[_key11];\n    }\n    nodeObjects(params);\n    if (params[0] && params[0].isNode) {\n      inputs = [].concat(params);\n    } else {\n      inputs = params[0];\n    }\n    return shaderNode.call(inputs);\n  };\n  fn.shaderNode = shaderNode;\n  fn.setLayout = function (layout) {\n    shaderNode.setLayout(layout);\n    return fn;\n  };\n  return fn;\n};\naddNodeClass('ShaderNode', ShaderNode);\n\n//\n\nexport var setCurrentStack = function setCurrentStack(stack) {\n  if (currentStack === stack) {\n\n    //throw new Error( 'Stack already defined.' );\n  }\n  currentStack = stack;\n};\nexport var getCurrentStack = function getCurrentStack() {\n  return currentStack;\n};\nexport var If = function If() {\n  var _currentStack2;\n  return (_currentStack2 = currentStack).if.apply(_currentStack2, arguments);\n};\nexport function append(node) {\n  if (currentStack) currentStack.add(node);\n  return node;\n}\naddNodeElement('append', append);\n\n// types\n// @TODO: Maybe export from ConstNode.js?\n\nexport var color = new ConvertType('color');\nexport var float = new ConvertType('float', cacheMaps.float);\nexport var int = new ConvertType('int', cacheMaps.int);\nexport var uint = new ConvertType('uint', cacheMaps.uint);\nexport var bool = new ConvertType('bool', cacheMaps.bool);\nexport var vec2 = new ConvertType('vec2');\nexport var ivec2 = new ConvertType('ivec2');\nexport var uvec2 = new ConvertType('uvec2');\nexport var bvec2 = new ConvertType('bvec2');\nexport var vec3 = new ConvertType('vec3');\nexport var ivec3 = new ConvertType('ivec3');\nexport var uvec3 = new ConvertType('uvec3');\nexport var bvec3 = new ConvertType('bvec3');\nexport var vec4 = new ConvertType('vec4');\nexport var ivec4 = new ConvertType('ivec4');\nexport var uvec4 = new ConvertType('uvec4');\nexport var bvec4 = new ConvertType('bvec4');\nexport var mat2 = new ConvertType('mat2');\nexport var imat2 = new ConvertType('imat2');\nexport var umat2 = new ConvertType('umat2');\nexport var bmat2 = new ConvertType('bmat2');\nexport var mat3 = new ConvertType('mat3');\nexport var imat3 = new ConvertType('imat3');\nexport var umat3 = new ConvertType('umat3');\nexport var bmat3 = new ConvertType('bmat3');\nexport var mat4 = new ConvertType('mat4');\nexport var imat4 = new ConvertType('imat4');\nexport var umat4 = new ConvertType('umat4');\nexport var bmat4 = new ConvertType('bmat4');\nexport var string = function string() {\n  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return nodeObject(new ConstNode(value, 'string'));\n};\nexport var arrayBuffer = function arrayBuffer(value) {\n  return nodeObject(new ConstNode(value, 'ArrayBuffer'));\n};\naddNodeElement('color', color);\naddNodeElement('float', float);\naddNodeElement('int', int);\naddNodeElement('uint', uint);\naddNodeElement('bool', bool);\naddNodeElement('vec2', vec2);\naddNodeElement('ivec2', ivec2);\naddNodeElement('uvec2', uvec2);\naddNodeElement('bvec2', bvec2);\naddNodeElement('vec3', vec3);\naddNodeElement('ivec3', ivec3);\naddNodeElement('uvec3', uvec3);\naddNodeElement('bvec3', bvec3);\naddNodeElement('vec4', vec4);\naddNodeElement('ivec4', ivec4);\naddNodeElement('uvec4', uvec4);\naddNodeElement('bvec4', bvec4);\naddNodeElement('mat2', mat2);\naddNodeElement('imat2', imat2);\naddNodeElement('umat2', umat2);\naddNodeElement('bmat2', bmat2);\naddNodeElement('mat3', mat3);\naddNodeElement('imat3', imat3);\naddNodeElement('umat3', umat3);\naddNodeElement('bmat3', bmat3);\naddNodeElement('mat4', mat4);\naddNodeElement('imat4', imat4);\naddNodeElement('umat4', umat4);\naddNodeElement('bmat4', bmat4);\naddNodeElement('string', string);\naddNodeElement('arrayBuffer', arrayBuffer);\n\n// basic nodes\n// HACK - we cannot export them from the corresponding files because of the cyclic dependency\nexport var element = nodeProxy(ArrayElementNode);\nexport var convert = function convert(node, types) {\n  return nodeObject(new ConvertNode(nodeObject(node), types));\n};\nexport var split = function split(node, channels) {\n  return nodeObject(new SplitNode(nodeObject(node), channels));\n};\naddNodeElement('element', element);\naddNodeElement('convert', convert);","map":{"version":3,"names":["Node","addNodeClass","ArrayElementNode","ConvertNode","JoinNode","SplitNode","SetNode","ConstNode","getValueFromType","getValueType","currentStack","NodeElements","Map","addNodeElement","name","nodeElement","has","console","warn","concat","Error","set","parseSwizzle","props","replace","shaderNodeHandler","setup","NodeClosure","params","inputs","shift","apply","nodeObjects","_toConsumableArray","get","node","prop","nodeObj","undefined","isStackNode","_currentStack","_len","arguments","length","Array","_key","assign","add","_len2","_key2","endsWith","slice","_len3","_key3","test","nodeObject","toLowerCase","split","sort","join","value","Number","Reflect","nodeObjectsCacheMap","WeakMap","nodeBuilderFunctionsCacheMap","ShaderNodeObject","obj","altType","type","Proxy","getConstNode","tslFn","ShaderNodeObjects","objects","ShaderNodeArray","array","len","i","ShaderNodeProxy","NodeClass","scope","factor","settings","assignNode","Object","_len4","_key4","_construct","nodeArray","_len5","_key5","_len6","_key6","ShaderNodeImmutable","_len7","_key7","ShaderCallNodeInternal","_Node","_inherits","_super","_createSuper","shaderNode","inputNodes","_this","_classCallCheck","call","_createClass","key","getNodeType","builder","_builder$getNodePrope","getNodeProperties","outputNode","_get","_getPrototypeOf","prototype","layout","functionNodesCacheMap","constructor","functionNode","buildFunctionNode","currentFunctionNode","includes","push","jsFunc","stack","addStack","removeStack","generate","output","_builder$getNodePrope2","build","ShaderNodeInternal","_Node2","_super2","_this2","toString","setLayout","bools","uints","ints","floats","Math","PI","boolsCacheMap","_i","_bools","bool","uintsCacheMap","_i2","_uints","uint","intsCacheMap","map","el","_i3","_ints","int","floatsCacheMap","_i4","_floats","float","_i5","_floats2","cacheMaps","constNodesCacheMap","isNode","safeGetNodeType","_","ConvertType","cacheMap","_len8","_key8","every","param","nodes","getConstNodeType","nodeType","convertTo","ShaderNode","val","nodeProxy","_len9","_key9","nodeImmutable","_len10","_key10","shader","fn","_len11","_key11","setCurrentStack","getCurrentStack","If","_currentStack2","if","append","color","vec2","ivec2","uvec2","bvec2","vec3","ivec3","uvec3","bvec3","vec4","ivec4","uvec4","bvec4","mat2","imat2","umat2","bmat2","mat3","imat3","umat3","bmat3","mat4","imat4","umat4","bmat4","string","arrayBuffer","element","convert","types","channels"],"sources":["/Users/vedant/node_modules/three/examples/jsm/nodes/shadernode/ShaderNode.js"],"sourcesContent":["import Node, { addNodeClass } from '../core/Node.js';\nimport ArrayElementNode from '../utils/ArrayElementNode.js';\nimport ConvertNode from '../utils/ConvertNode.js';\nimport JoinNode from '../utils/JoinNode.js';\nimport SplitNode from '../utils/SplitNode.js';\nimport SetNode from '../utils/SetNode.js';\nimport ConstNode from '../core/ConstNode.js';\nimport { getValueFromType, getValueType } from '../core/NodeUtils.js';\n\n//\n\nlet currentStack = null;\n\nconst NodeElements = new Map(); // @TODO: Currently only a few nodes are added, probably also add others\n\nexport function addNodeElement( name, nodeElement ) {\n\n\tif ( NodeElements.has( name ) ) {\n\n\t\tconsole.warn( `Redefinition of node element ${ name }` );\n\t\treturn;\n\n\t}\n\n\tif ( typeof nodeElement !== 'function' ) throw new Error( `Node element ${ name } is not a function` );\n\n\tNodeElements.set( name, nodeElement );\n\n}\n\nconst parseSwizzle = ( props ) => props.replace( /r|s/g, 'x' ).replace( /g|t/g, 'y' ).replace( /b|p/g, 'z' ).replace( /a|q/g, 'w' );\n\nconst shaderNodeHandler = {\n\n\tsetup( NodeClosure, params ) {\n\n\t\tconst inputs = params.shift();\n\n\t\treturn NodeClosure( nodeObjects( inputs ), ...params );\n\n\t},\n\n\tget( node, prop, nodeObj ) {\n\n\t\tif ( typeof prop === 'string' && node[ prop ] === undefined ) {\n\n\t\t\tif ( node.isStackNode !== true && prop === 'assign' ) {\n\n\t\t\t\treturn ( ...params ) => {\n\n\t\t\t\t\tcurrentStack.assign( nodeObj, ...params );\n\n\t\t\t\t\treturn nodeObj;\n\n\t\t\t\t};\n\n\t\t\t} else if ( NodeElements.has( prop ) ) {\n\n\t\t\t\tconst nodeElement = NodeElements.get( prop );\n\n\t\t\t\treturn node.isStackNode ? ( ...params ) => nodeObj.add( nodeElement( ...params ) ) : ( ...params ) => nodeElement( nodeObj, ...params );\n\n\t\t\t} else if ( prop === 'self' ) {\n\n\t\t\t\treturn node;\n\n\t\t\t} else if ( prop.endsWith( 'Assign' ) && NodeElements.has( prop.slice( 0, prop.length - 'Assign'.length ) ) ) {\n\n\t\t\t\tconst nodeElement = NodeElements.get( prop.slice( 0, prop.length - 'Assign'.length ) );\n\n\t\t\t\treturn node.isStackNode ? ( ...params ) => nodeObj.assign( params[ 0 ], nodeElement( ...params ) ) : ( ...params ) => nodeObj.assign( nodeElement( nodeObj, ...params ) );\n\n\t\t\t} else if ( /^[xyzwrgbastpq]{1,4}$/.test( prop ) === true ) {\n\n\t\t\t\t// accessing properties ( swizzle )\n\n\t\t\t\tprop = parseSwizzle( prop );\n\n\t\t\t\treturn nodeObject( new SplitNode( nodeObj, prop ) );\n\n\t\t\t} else if ( /^set[XYZWRGBASTPQ]{1,4}$/.test( prop ) === true ) {\n\n\t\t\t\t// set properties ( swizzle )\n\n\t\t\t\tprop = parseSwizzle( prop.slice( 3 ).toLowerCase() );\n\n\t\t\t\t// sort to xyzw sequence\n\n\t\t\t\tprop = prop.split( '' ).sort().join( '' );\n\n\t\t\t\treturn ( value ) => nodeObject( new SetNode( node, prop, value ) );\n\n\t\t\t} else if ( prop === 'width' || prop === 'height' || prop === 'depth' ) {\n\n\t\t\t\t// accessing property\n\n\t\t\t\tif ( prop === 'width' ) prop = 'x';\n\t\t\t\telse if ( prop === 'height' ) prop = 'y';\n\t\t\t\telse if ( prop === 'depth' ) prop = 'z';\n\n\t\t\t\treturn nodeObject( new SplitNode( node, prop ) );\n\n\t\t\t} else if ( /^\\d+$/.test( prop ) === true ) {\n\n\t\t\t\t// accessing array\n\n\t\t\t\treturn nodeObject( new ArrayElementNode( nodeObj, new ConstNode( Number( prop ), 'uint' ) ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Reflect.get( node, prop, nodeObj );\n\n\t},\n\n\tset( node, prop, value, nodeObj ) {\n\n\t\tif ( typeof prop === 'string' && node[ prop ] === undefined ) {\n\n\t\t\t// setting properties\n\n\t\t\tif ( /^[xyzwrgbastpq]{1,4}$/.test( prop ) === true || prop === 'width' || prop === 'height' || prop === 'depth' || /^\\d+$/.test( prop ) === true ) {\n\n\t\t\t\tnodeObj[ prop ].assign( value );\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Reflect.set( node, prop, value, nodeObj );\n\n\t}\n\n};\n\nconst nodeObjectsCacheMap = new WeakMap();\nconst nodeBuilderFunctionsCacheMap = new WeakMap();\n\nconst ShaderNodeObject = function ( obj, altType = null ) {\n\n\tconst type = getValueType( obj );\n\n\tif ( type === 'node' ) {\n\n\t\tlet nodeObject = nodeObjectsCacheMap.get( obj );\n\n\t\tif ( nodeObject === undefined ) {\n\n\t\t\tnodeObject = new Proxy( obj, shaderNodeHandler );\n\n\t\t\tnodeObjectsCacheMap.set( obj, nodeObject );\n\t\t\tnodeObjectsCacheMap.set( nodeObject, nodeObject );\n\n\t\t}\n\n\t\treturn nodeObject;\n\n\t} else if ( ( altType === null && ( type === 'float' || type === 'boolean' ) ) || ( type && type !== 'shader' && type !== 'string' ) ) {\n\n\t\treturn nodeObject( getConstNode( obj, altType ) );\n\n\t} else if ( type === 'shader' ) {\n\n\t\treturn tslFn( obj );\n\n\t}\n\n\treturn obj;\n\n};\n\nconst ShaderNodeObjects = function ( objects, altType = null ) {\n\n\tfor ( const name in objects ) {\n\n\t\tobjects[ name ] = nodeObject( objects[ name ], altType );\n\n\t}\n\n\treturn objects;\n\n};\n\nconst ShaderNodeArray = function ( array, altType = null ) {\n\n\tconst len = array.length;\n\n\tfor ( let i = 0; i < len; i ++ ) {\n\n\t\tarray[ i ] = nodeObject( array[ i ], altType );\n\n\t}\n\n\treturn array;\n\n};\n\nconst ShaderNodeProxy = function ( NodeClass, scope = null, factor = null, settings = null ) {\n\n\tconst assignNode = ( node ) => nodeObject( settings !== null ? Object.assign( node, settings ) : node );\n\n\tif ( scope === null ) {\n\n\t\treturn ( ...params ) => {\n\n\t\t\treturn assignNode( new NodeClass( ...nodeArray( params ) ) );\n\n\t\t};\n\n\t} else if ( factor !== null ) {\n\n\t\tfactor = nodeObject( factor );\n\n\t\treturn ( ...params ) => {\n\n\t\t\treturn assignNode( new NodeClass( scope, ...nodeArray( params ), factor ) );\n\n\t\t};\n\n\t} else {\n\n\t\treturn ( ...params ) => {\n\n\t\t\treturn assignNode( new NodeClass( scope, ...nodeArray( params ) ) );\n\n\t\t};\n\n\t}\n\n};\n\nconst ShaderNodeImmutable = function ( NodeClass, ...params ) {\n\n\treturn nodeObject( new NodeClass( ...nodeArray( params ) ) );\n\n};\n\nclass ShaderCallNodeInternal extends Node {\n\n\tconstructor( shaderNode, inputNodes ) {\n\n\t\tsuper();\n\n\t\tthis.shaderNode = shaderNode;\n\t\tthis.inputNodes = inputNodes;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\tconst { outputNode } = builder.getNodeProperties( this );\n\n\t\treturn outputNode ? outputNode.getNodeType( builder ) : super.getNodeType( builder );\n\n\t}\n\n\tcall( builder ) {\n\n\t\tconst { shaderNode, inputNodes } = this;\n\n\t\tif ( shaderNode.layout ) {\n\n\t\t\tlet functionNodesCacheMap = nodeBuilderFunctionsCacheMap.get( builder.constructor );\n\n\t\t\tif ( functionNodesCacheMap === undefined ) {\n\n\t\t\t\tfunctionNodesCacheMap = new WeakMap();\n\n\t\t\t\tnodeBuilderFunctionsCacheMap.set( builder.constructor, functionNodesCacheMap );\n\n\t\t\t}\n\n\t\t\tlet functionNode = functionNodesCacheMap.get( shaderNode );\n\n\t\t\tif ( functionNode === undefined ) {\n\n\t\t\t\tfunctionNode = nodeObject( builder.buildFunctionNode( shaderNode ) );\n\n\t\t\t\tfunctionNodesCacheMap.set( shaderNode, functionNode );\n\n\t\t\t}\n\n\t\t\tif ( builder.currentFunctionNode !== null ) {\n\n\t\t\t\tbuilder.currentFunctionNode.includes.push( functionNode );\n\n\t\t\t}\n\n\t\t\treturn nodeObject( functionNode.call( inputNodes ) );\n\n\t\t}\n\n\t\tconst jsFunc = shaderNode.jsFunc;\n\t\tconst outputNode = inputNodes !== null ? jsFunc( inputNodes, builder.stack, builder ) : jsFunc( builder.stack, builder );\n\n\t\treturn nodeObject( outputNode );\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tbuilder.addStack();\n\n\t\tbuilder.stack.outputNode = this.call( builder );\n\n\t\treturn builder.removeStack();\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst { outputNode } = builder.getNodeProperties( this );\n\n\t\tif ( outputNode === null ) {\n\n\t\t\t// TSL: It's recommended to use `tslFn` in setup() pass.\n\n\t\t\treturn this.call( builder ).build( builder, output );\n\n\t\t}\n\n\t\treturn super.generate( builder, output );\n\n\t}\n\n}\n\nclass ShaderNodeInternal extends Node {\n\n\tconstructor( jsFunc ) {\n\n\t\tsuper();\n\n\t\tthis.jsFunc = jsFunc;\n\t\tthis.layout = null;\n\n\t}\n\n\tget isArrayInput() {\n\n\t\treturn /^\\((\\s+)?\\[/.test( this.jsFunc.toString() );\n\n\t}\n\n\tsetLayout( layout ) {\n\n\t\tthis.layout = layout;\n\n\t\treturn this;\n\n\t}\n\n\tcall( inputs = null ) {\n\n\t\tnodeObjects( inputs );\n\n\t\treturn nodeObject( new ShaderCallNodeInternal( this, inputs ) );\n\n\t}\n\n\tsetup() {\n\n\t\treturn this.call();\n\n\t}\n\n}\n\nconst bools = [ false, true ];\nconst uints = [ 0, 1, 2, 3 ];\nconst ints = [ - 1, - 2 ];\nconst floats = [ 0.5, 1.5, 1 / 3, 1e-6, 1e6, Math.PI, Math.PI * 2, 1 / Math.PI, 2 / Math.PI, 1 / ( Math.PI * 2 ), Math.PI / 2 ];\n\nconst boolsCacheMap = new Map();\nfor ( const bool of bools ) boolsCacheMap.set( bool, new ConstNode( bool ) );\n\nconst uintsCacheMap = new Map();\nfor ( const uint of uints ) uintsCacheMap.set( uint, new ConstNode( uint, 'uint' ) );\n\nconst intsCacheMap = new Map( [ ...uintsCacheMap ].map( el => new ConstNode( el.value, 'int' ) ) );\nfor ( const int of ints ) intsCacheMap.set( int, new ConstNode( int, 'int' ) );\n\nconst floatsCacheMap = new Map( [ ...intsCacheMap ].map( el => new ConstNode( el.value ) ) );\nfor ( const float of floats ) floatsCacheMap.set( float, new ConstNode( float ) );\nfor ( const float of floats ) floatsCacheMap.set( - float, new ConstNode( - float ) );\n\nconst cacheMaps = { bool: boolsCacheMap, uint: uintsCacheMap, ints: intsCacheMap, float: floatsCacheMap };\n\nconst constNodesCacheMap = new Map( [ ...boolsCacheMap, ...floatsCacheMap ] );\n\nconst getConstNode = ( value, type ) => {\n\n\tif ( constNodesCacheMap.has( value ) ) {\n\n\t\treturn constNodesCacheMap.get( value );\n\n\t} else if ( value.isNode === true ) {\n\n\t\treturn value;\n\n\t} else {\n\n\t\treturn new ConstNode( value, type );\n\n\t}\n\n};\n\nconst safeGetNodeType = ( node ) => {\n\n\ttry {\n\n\t\treturn node.getNodeType();\n\n\t} catch ( _ ) {\n\n\t\treturn undefined;\n\n\t}\n\n};\n\nconst ConvertType = function ( type, cacheMap = null ) {\n\n\treturn ( ...params ) => {\n\n\t\tif ( params.length === 0 || ( ! [ 'bool', 'float', 'int', 'uint' ].includes( type ) && params.every( param => typeof param !== 'object' ) ) ) {\n\n\t\t\tparams = [ getValueFromType( type, ...params ) ];\n\n\t\t}\n\n\t\tif ( params.length === 1 && cacheMap !== null && cacheMap.has( params[ 0 ] ) ) {\n\n\t\t\treturn nodeObject( cacheMap.get( params[ 0 ] ) );\n\n\t\t}\n\n\t\tif ( params.length === 1 ) {\n\n\t\t\tconst node = getConstNode( params[ 0 ], type );\n\t\t\tif ( safeGetNodeType( node ) === type ) return nodeObject( node );\n\t\t\treturn nodeObject( new ConvertNode( node, type ) );\n\n\t\t}\n\n\t\tconst nodes = params.map( param => getConstNode( param ) );\n\t\treturn nodeObject( new JoinNode( nodes, type ) );\n\n\t};\n\n};\n\n// exports\n\n// utils\n\nexport const getConstNodeType = ( value ) => ( value !== undefined && value !== null ) ? ( value.nodeType || value.convertTo || ( typeof value === 'string' ? value : null ) ) : null;\n\n// shader node base\n\nexport function ShaderNode( jsFunc ) {\n\n\treturn new Proxy( new ShaderNodeInternal( jsFunc ), shaderNodeHandler );\n\n}\n\nexport const nodeObject = ( val, altType = null ) => /* new */ ShaderNodeObject( val, altType );\nexport const nodeObjects = ( val, altType = null ) => new ShaderNodeObjects( val, altType );\nexport const nodeArray = ( val, altType = null ) => new ShaderNodeArray( val, altType );\nexport const nodeProxy = ( ...params ) => new ShaderNodeProxy( ...params );\nexport const nodeImmutable = ( ...params ) => new ShaderNodeImmutable( ...params );\n\nexport const shader = ( jsFunc ) => { // @deprecated, r154\n\n\tconsole.warn( 'TSL: shader() is deprecated. Use tslFn() instead.' );\n\n\treturn new ShaderNode( jsFunc );\n\n};\n\nexport const tslFn = ( jsFunc ) => {\n\n\tconst shaderNode = new ShaderNode( jsFunc );\n\n\tconst fn = ( ...params ) => {\n\n\t\tlet inputs;\n\n\t\tnodeObjects( params );\n\n\t\tif ( params[ 0 ] && params[ 0 ].isNode ) {\n\n\t\t\tinputs = [ ...params ];\n\n\t\t} else {\n\n\t\t\tinputs = params[ 0 ];\n\n\t\t}\n\n\t\treturn shaderNode.call( inputs );\n\n\t};\n\n\tfn.shaderNode = shaderNode;\n\tfn.setLayout = ( layout ) => {\n\n\t\tshaderNode.setLayout( layout );\n\n\t\treturn fn;\n\n\t};\n\n\treturn fn;\n\n};\n\naddNodeClass( 'ShaderNode', ShaderNode );\n\n//\n\nexport const setCurrentStack = ( stack ) => {\n\n\tif ( currentStack === stack ) {\n\n\t\t//throw new Error( 'Stack already defined.' );\n\n\t}\n\n\tcurrentStack = stack;\n\n};\n\nexport const getCurrentStack = () => currentStack;\n\nexport const If = ( ...params ) => currentStack.if( ...params );\n\nexport function append( node ) {\n\n\tif ( currentStack ) currentStack.add( node );\n\n\treturn node;\n\n}\n\naddNodeElement( 'append', append );\n\n// types\n// @TODO: Maybe export from ConstNode.js?\n\nexport const color = new ConvertType( 'color' );\n\nexport const float = new ConvertType( 'float', cacheMaps.float );\nexport const int = new ConvertType( 'int', cacheMaps.int );\nexport const uint = new ConvertType( 'uint', cacheMaps.uint );\nexport const bool = new ConvertType( 'bool', cacheMaps.bool );\n\nexport const vec2 = new ConvertType( 'vec2' );\nexport const ivec2 = new ConvertType( 'ivec2' );\nexport const uvec2 = new ConvertType( 'uvec2' );\nexport const bvec2 = new ConvertType( 'bvec2' );\n\nexport const vec3 = new ConvertType( 'vec3' );\nexport const ivec3 = new ConvertType( 'ivec3' );\nexport const uvec3 = new ConvertType( 'uvec3' );\nexport const bvec3 = new ConvertType( 'bvec3' );\n\nexport const vec4 = new ConvertType( 'vec4' );\nexport const ivec4 = new ConvertType( 'ivec4' );\nexport const uvec4 = new ConvertType( 'uvec4' );\nexport const bvec4 = new ConvertType( 'bvec4' );\n\nexport const mat2 = new ConvertType( 'mat2' );\nexport const imat2 = new ConvertType( 'imat2' );\nexport const umat2 = new ConvertType( 'umat2' );\nexport const bmat2 = new ConvertType( 'bmat2' );\n\nexport const mat3 = new ConvertType( 'mat3' );\nexport const imat3 = new ConvertType( 'imat3' );\nexport const umat3 = new ConvertType( 'umat3' );\nexport const bmat3 = new ConvertType( 'bmat3' );\n\nexport const mat4 = new ConvertType( 'mat4' );\nexport const imat4 = new ConvertType( 'imat4' );\nexport const umat4 = new ConvertType( 'umat4' );\nexport const bmat4 = new ConvertType( 'bmat4' );\n\nexport const string = ( value = '' ) => nodeObject( new ConstNode( value, 'string' ) );\nexport const arrayBuffer = ( value ) => nodeObject( new ConstNode( value, 'ArrayBuffer' ) );\n\naddNodeElement( 'color', color );\naddNodeElement( 'float', float );\naddNodeElement( 'int', int );\naddNodeElement( 'uint', uint );\naddNodeElement( 'bool', bool );\naddNodeElement( 'vec2', vec2 );\naddNodeElement( 'ivec2', ivec2 );\naddNodeElement( 'uvec2', uvec2 );\naddNodeElement( 'bvec2', bvec2 );\naddNodeElement( 'vec3', vec3 );\naddNodeElement( 'ivec3', ivec3 );\naddNodeElement( 'uvec3', uvec3 );\naddNodeElement( 'bvec3', bvec3 );\naddNodeElement( 'vec4', vec4 );\naddNodeElement( 'ivec4', ivec4 );\naddNodeElement( 'uvec4', uvec4 );\naddNodeElement( 'bvec4', bvec4 );\naddNodeElement( 'mat2', mat2 );\naddNodeElement( 'imat2', imat2 );\naddNodeElement( 'umat2', umat2 );\naddNodeElement( 'bmat2', bmat2 );\naddNodeElement( 'mat3', mat3 );\naddNodeElement( 'imat3', imat3 );\naddNodeElement( 'umat3', umat3 );\naddNodeElement( 'bmat3', bmat3 );\naddNodeElement( 'mat4', mat4 );\naddNodeElement( 'imat4', imat4 );\naddNodeElement( 'umat4', umat4 );\naddNodeElement( 'bmat4', bmat4 );\naddNodeElement( 'string', string );\naddNodeElement( 'arrayBuffer', arrayBuffer );\n\n// basic nodes\n// HACK - we cannot export them from the corresponding files because of the cyclic dependency\nexport const element = nodeProxy( ArrayElementNode );\nexport const convert = ( node, types ) => nodeObject( new ConvertNode( nodeObject( node ), types ) );\nexport const split = ( node, channels ) => nodeObject( new SplitNode( nodeObject( node ), channels ) );\n\naddNodeElement( 'element', element );\naddNodeElement( 'convert', convert );\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}