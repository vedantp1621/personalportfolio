{"ast":null,"code":"import _classCallCheck from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { addNodeClass } from '../core/Node.js';\nimport TempNode from '../core/TempNode.js';\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\nvar AssignNode = /*#__PURE__*/function (_TempNode) {\n  _inherits(AssignNode, _TempNode);\n  var _super = _createSuper(AssignNode);\n  function AssignNode(targetNode, sourceNode) {\n    var _this;\n    _classCallCheck(this, AssignNode);\n    _this = _super.call(this);\n    _this.targetNode = targetNode;\n    _this.sourceNode = sourceNode;\n    return _this;\n  }\n  _createClass(AssignNode, [{\n    key: \"hasDependencies\",\n    value: function hasDependencies() {\n      return false;\n    }\n  }, {\n    key: \"getNodeType\",\n    value: function getNodeType(builder, output) {\n      return output !== 'void' ? this.targetNode.getNodeType(builder) : 'void';\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder, output) {\n      var targetNode = this.targetNode;\n      var sourceNode = this.sourceNode;\n      var targetType = targetNode.getNodeType(builder);\n      var target = targetNode.build(builder);\n      var source = sourceNode.build(builder, targetType);\n      var snippet = \"\".concat(target, \" = \").concat(source);\n      if (output === 'void') {\n        builder.addLineFlowCode(snippet);\n        return;\n      } else {\n        var sourceType = sourceNode.getNodeType(builder);\n        if (sourceType === 'void') {\n          builder.addLineFlowCode(snippet);\n          return target;\n        }\n        return builder.format(snippet, targetType, output);\n      }\n    }\n  }]);\n  return AssignNode;\n}(TempNode);\nexport default AssignNode;\nexport var assign = nodeProxy(AssignNode);\naddNodeClass('AssignNode', AssignNode);\naddNodeElement('assign', assign);","map":{"version":3,"names":["addNodeClass","TempNode","addNodeElement","nodeProxy","AssignNode","_TempNode","_inherits","_super","_createSuper","targetNode","sourceNode","_this","_classCallCheck","call","_createClass","key","value","hasDependencies","getNodeType","builder","output","generate","targetType","target","build","source","snippet","concat","addLineFlowCode","sourceType","format","assign"],"sources":["/Users/vedant/node_modules/three/examples/jsm/nodes/core/AssignNode.js"],"sourcesContent":["import { addNodeClass } from '../core/Node.js';\nimport TempNode from '../core/TempNode.js';\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\n\nclass AssignNode extends TempNode {\n\n\tconstructor( targetNode, sourceNode ) {\n\n\t\tsuper();\n\n\t\tthis.targetNode = targetNode;\n\t\tthis.sourceNode = sourceNode;\n\n\t}\n\n\thasDependencies() {\n\n\t\treturn false;\n\n\t}\n\n\tgetNodeType( builder, output ) {\n\n\t\treturn output !== 'void' ? this.targetNode.getNodeType( builder ) : 'void';\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst targetNode = this.targetNode;\n\t\tconst sourceNode = this.sourceNode;\n\n\t\tconst targetType = targetNode.getNodeType( builder );\n\n\t\tconst target = targetNode.build( builder );\n\t\tconst source = sourceNode.build( builder, targetType );\n\n\t\tconst snippet = `${ target } = ${ source }`;\n\n\t\tif ( output === 'void' ) {\n\n\t\t\tbuilder.addLineFlowCode( snippet );\n\n\t\t\treturn;\n\n\t\t} else {\n\n\t\t\tconst sourceType = sourceNode.getNodeType( builder );\n\n\t\t\tif ( sourceType === 'void' ) {\n\n\t\t\t\tbuilder.addLineFlowCode( snippet );\n\n\t\t\t\treturn target;\n\n\t\t\t}\n\n\t\t\treturn builder.format( snippet, targetType, output );\n\n\t\t}\n\n\t}\n\n}\n\nexport default AssignNode;\n\nexport const assign = nodeProxy( AssignNode );\n\naddNodeClass( 'AssignNode', AssignNode );\n\naddNodeElement( 'assign', assign );\n"],"mappings":";;;;AAAA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,SAASC,cAAc,EAAEC,SAAS,QAAQ,6BAA6B;AAAC,IAElEC,UAAU,0BAAAC,SAAA;EAAAC,SAAA,CAAAF,UAAA,EAAAC,SAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,UAAA;EAEf,SAAAA,WAAaK,UAAU,EAAEC,UAAU,EAAG;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAR,UAAA;IAErCO,KAAA,GAAAJ,MAAA,CAAAM,IAAA;IAEAF,KAAA,CAAKF,UAAU,GAAGA,UAAU;IAC5BE,KAAA,CAAKD,UAAU,GAAGA,UAAU;IAAC,OAAAC,KAAA;EAE9B;EAACG,YAAA,CAAAV,UAAA;IAAAW,GAAA;IAAAC,KAAA,EAED,SAAAC,gBAAA,EAAkB;MAEjB,OAAO,KAAK;IAEb;EAAC;IAAAF,GAAA;IAAAC,KAAA,EAED,SAAAE,YAAaC,OAAO,EAAEC,MAAM,EAAG;MAE9B,OAAOA,MAAM,KAAK,MAAM,GAAG,IAAI,CAACX,UAAU,CAACS,WAAW,CAAEC,OAAQ,CAAC,GAAG,MAAM;IAE3E;EAAC;IAAAJ,GAAA;IAAAC,KAAA,EAED,SAAAK,SAAUF,OAAO,EAAEC,MAAM,EAAG;MAE3B,IAAMX,UAAU,GAAG,IAAI,CAACA,UAAU;MAClC,IAAMC,UAAU,GAAG,IAAI,CAACA,UAAU;MAElC,IAAMY,UAAU,GAAGb,UAAU,CAACS,WAAW,CAAEC,OAAQ,CAAC;MAEpD,IAAMI,MAAM,GAAGd,UAAU,CAACe,KAAK,CAAEL,OAAQ,CAAC;MAC1C,IAAMM,MAAM,GAAGf,UAAU,CAACc,KAAK,CAAEL,OAAO,EAAEG,UAAW,CAAC;MAEtD,IAAMI,OAAO,MAAAC,MAAA,CAAOJ,MAAM,SAAAI,MAAA,CAAQF,MAAM,CAAG;MAE3C,IAAKL,MAAM,KAAK,MAAM,EAAG;QAExBD,OAAO,CAACS,eAAe,CAAEF,OAAQ,CAAC;QAElC;MAED,CAAC,MAAM;QAEN,IAAMG,UAAU,GAAGnB,UAAU,CAACQ,WAAW,CAAEC,OAAQ,CAAC;QAEpD,IAAKU,UAAU,KAAK,MAAM,EAAG;UAE5BV,OAAO,CAACS,eAAe,CAAEF,OAAQ,CAAC;UAElC,OAAOH,MAAM;QAEd;QAEA,OAAOJ,OAAO,CAACW,MAAM,CAAEJ,OAAO,EAAEJ,UAAU,EAAEF,MAAO,CAAC;MAErD;IAED;EAAC;EAAA,OAAAhB,UAAA;AAAA,EAzDuBH,QAAQ;AA6DjC,eAAeG,UAAU;AAEzB,OAAO,IAAM2B,MAAM,GAAG5B,SAAS,CAAEC,UAAW,CAAC;AAE7CJ,YAAY,CAAE,YAAY,EAAEI,UAAW,CAAC;AAExCF,cAAc,CAAE,QAAQ,EAAE6B,MAAO,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}