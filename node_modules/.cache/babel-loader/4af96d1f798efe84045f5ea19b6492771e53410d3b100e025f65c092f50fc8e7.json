{"ast":null,"code":"import Node, { addNodeClass } from '../core/Node.js';\nimport { property } from '../core/PropertyNode.js';\nimport { context as contextNode } from '../core/ContextNode.js';\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\nclass CondNode extends Node {\n  constructor(condNode, ifNode) {\n    let elseNode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    super();\n    this.condNode = condNode;\n    this.ifNode = ifNode;\n    this.elseNode = elseNode;\n  }\n  getNodeType(builder) {\n    const ifType = this.ifNode.getNodeType(builder);\n    if (this.elseNode !== null) {\n      const elseType = this.elseNode.getNodeType(builder);\n      if (builder.getTypeLength(elseType) > builder.getTypeLength(ifType)) {\n        return elseType;\n      }\n    }\n    return ifType;\n  }\n  generate(builder) {\n    const type = this.getNodeType(builder);\n    const context = {\n      tempWrite: false\n    };\n    const {\n      ifNode,\n      elseNode\n    } = this;\n    const needsProperty = ifNode.getNodeType(builder) !== 'void' || elseNode && elseNode.getNodeType(builder) !== 'void';\n    const nodeProperty = needsProperty ? property(type).build(builder) : '';\n    const nodeSnippet = contextNode(this.condNode /*, context*/).build(builder, 'bool');\n    builder.addFlowCode(`\\n${builder.tab}if ( ${nodeSnippet} ) {\\n\\n`).addFlowTab();\n    let ifSnippet = contextNode(this.ifNode, context).build(builder, type);\n    ifSnippet = needsProperty ? nodeProperty + ' = ' + ifSnippet + ';' : ifSnippet;\n    builder.removeFlowTab().addFlowCode(builder.tab + '\\t' + ifSnippet + '\\n\\n' + builder.tab + '}');\n    if (elseNode !== null) {\n      builder.addFlowCode(' else {\\n\\n').addFlowTab();\n      let elseSnippet = contextNode(elseNode, context).build(builder, type);\n      elseSnippet = nodeProperty ? nodeProperty + ' = ' + elseSnippet + ';' : elseSnippet;\n      builder.removeFlowTab().addFlowCode(builder.tab + '\\t' + elseSnippet + '\\n\\n' + builder.tab + '}\\n\\n');\n    } else {\n      builder.addFlowCode('\\n\\n');\n    }\n    return nodeProperty;\n  }\n}\nexport default CondNode;\nexport const cond = nodeProxy(CondNode);\naddNodeElement('cond', cond);\naddNodeClass('CondNode', CondNode);","map":{"version":3,"names":["Node","addNodeClass","property","context","contextNode","addNodeElement","nodeProxy","CondNode","constructor","condNode","ifNode","elseNode","arguments","length","undefined","getNodeType","builder","ifType","elseType","getTypeLength","generate","type","tempWrite","needsProperty","nodeProperty","build","nodeSnippet","addFlowCode","tab","addFlowTab","ifSnippet","removeFlowTab","elseSnippet","cond"],"sources":["/Users/vedant/node_modules/three/examples/jsm/nodes/math/CondNode.js"],"sourcesContent":["import Node, { addNodeClass } from '../core/Node.js';\nimport { property } from '../core/PropertyNode.js';\nimport { context as contextNode } from '../core/ContextNode.js';\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\n\nclass CondNode extends Node {\n\n\tconstructor( condNode, ifNode, elseNode = null ) {\n\n\t\tsuper();\n\n\t\tthis.condNode = condNode;\n\n\t\tthis.ifNode = ifNode;\n\t\tthis.elseNode = elseNode;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\tconst ifType = this.ifNode.getNodeType( builder );\n\n\t\tif ( this.elseNode !== null ) {\n\n\t\t\tconst elseType = this.elseNode.getNodeType( builder );\n\n\t\t\tif ( builder.getTypeLength( elseType ) > builder.getTypeLength( ifType ) ) {\n\n\t\t\t\treturn elseType;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn ifType;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst type = this.getNodeType( builder );\n\t\tconst context = { tempWrite: false };\n\n\t\tconst { ifNode, elseNode } = this;\n\n\t\tconst needsProperty = ifNode.getNodeType( builder ) !== 'void' || ( elseNode && elseNode.getNodeType( builder ) !== 'void' );\n\t\tconst nodeProperty = needsProperty ? property( type ).build( builder ) : '';\n\n\t\tconst nodeSnippet = contextNode( this.condNode/*, context*/ ).build( builder, 'bool' );\n\n\t\tbuilder.addFlowCode( `\\n${ builder.tab }if ( ${ nodeSnippet } ) {\\n\\n` ).addFlowTab();\n\n\t\tlet ifSnippet = contextNode( this.ifNode, context ).build( builder, type );\n\n\t\tifSnippet = needsProperty ? nodeProperty + ' = ' + ifSnippet + ';' : ifSnippet;\n\n\t\tbuilder.removeFlowTab().addFlowCode( builder.tab + '\\t' + ifSnippet + '\\n\\n' + builder.tab + '}' );\n\n\t\tif ( elseNode !== null ) {\n\n\t\t\tbuilder.addFlowCode( ' else {\\n\\n' ).addFlowTab();\n\n\t\t\tlet elseSnippet = contextNode( elseNode, context ).build( builder, type );\n\t\t\telseSnippet = nodeProperty ? nodeProperty + ' = ' + elseSnippet + ';' : elseSnippet;\n\n\t\t\tbuilder.removeFlowTab().addFlowCode( builder.tab + '\\t' + elseSnippet + '\\n\\n' + builder.tab + '}\\n\\n' );\n\n\t\t} else {\n\n\t\t\tbuilder.addFlowCode( '\\n\\n' );\n\n\t\t}\n\n\t\treturn nodeProperty;\n\n\t}\n\n}\n\nexport default CondNode;\n\nexport const cond = nodeProxy( CondNode );\n\naddNodeElement( 'cond', cond );\n\naddNodeClass( 'CondNode', CondNode );\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}