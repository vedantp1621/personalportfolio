{"ast":null,"code":"// Three.js Transpiler\n// https://github.com/AcademySoftwareFoundation/MaterialX/blob/main/libraries/stdlib/genglsl/lib/mx_hsv.glsl\n\nimport { int, float, vec3, If, tslFn } from '../../shadernode/ShaderNode.js';\nimport { add, sub, mul } from '../../math/OperatorNode.js';\nimport { floor, trunc, max, min } from '../../math/MathNode.js';\nconst mx_hsvtorgb = tslFn(_ref => {\n  let [hsv_immutable] = _ref;\n  const hsv = vec3(hsv_immutable).toVar();\n  const h = float(hsv.x).toVar();\n  const s = float(hsv.y).toVar();\n  const v = float(hsv.z).toVar();\n  If(s.lessThan(0.0001), () => {\n    return vec3(v, v, v);\n  }).else(() => {\n    h.assign(mul(6.0, h.sub(floor(h))));\n    const hi = int(trunc(h)).toVar();\n    const f = float(h.sub(float(hi))).toVar();\n    const p = float(v.mul(sub(1.0, s))).toVar();\n    const q = float(v.mul(sub(1.0, s.mul(f)))).toVar();\n    const t = float(v.mul(sub(1.0, s.mul(sub(1.0, f))))).toVar();\n    If(hi.equal(int(0)), () => {\n      return vec3(v, t, p);\n    }).elseif(hi.equal(int(1)), () => {\n      return vec3(q, v, p);\n    }).elseif(hi.equal(int(2)), () => {\n      return vec3(p, v, t);\n    }).elseif(hi.equal(int(3)), () => {\n      return vec3(p, q, v);\n    }).elseif(hi.equal(int(4)), () => {\n      return vec3(t, p, v);\n    });\n    return vec3(v, p, q);\n  });\n});\nconst mx_rgbtohsv = tslFn(_ref2 => {\n  let [c_immutable] = _ref2;\n  const c = vec3(c_immutable).toVar();\n  const r = float(c.x).toVar();\n  const g = float(c.y).toVar();\n  const b = float(c.z).toVar();\n  const mincomp = float(min(r, min(g, b))).toVar();\n  const maxcomp = float(max(r, max(g, b))).toVar();\n  const delta = float(maxcomp.sub(mincomp)).toVar();\n  const h = float().toVar(),\n    s = float().toVar(),\n    v = float().toVar();\n  v.assign(maxcomp);\n  If(maxcomp.greaterThan(0.0), () => {\n    s.assign(delta.div(maxcomp));\n  }).else(() => {\n    s.assign(0.0);\n  });\n  If(s.lessThanEqual(0.0), () => {\n    h.assign(0.0);\n  }).else(() => {\n    If(r.greaterThanEqual(maxcomp), () => {\n      h.assign(g.sub(b).div(delta));\n    }).elseif(g.greaterThanEqual(maxcomp), () => {\n      h.assign(add(2.0, b.sub(r).div(delta)));\n    }).else(() => {\n      h.assign(add(4.0, r.sub(g).div(delta)));\n    });\n    h.mulAssign(1.0 / 6.0);\n    If(h.lessThan(0.0), () => {\n      h.addAssign(1.0);\n    });\n  });\n  return vec3(h, s, v);\n});\n\n// layouts\n\nmx_hsvtorgb.setLayout({\n  name: 'mx_hsvtorgb',\n  type: 'vec3',\n  inputs: [{\n    name: 'hsv',\n    type: 'vec3'\n  }]\n});\nmx_rgbtohsv.setLayout({\n  name: 'mx_rgbtohsv',\n  type: 'vec3',\n  inputs: [{\n    name: 'c',\n    type: 'vec3'\n  }]\n});\nexport { mx_hsvtorgb, mx_rgbtohsv };","map":{"version":3,"names":["int","float","vec3","If","tslFn","add","sub","mul","floor","trunc","max","min","mx_hsvtorgb","_ref","hsv_immutable","hsv","toVar","h","x","s","y","v","z","lessThan","else","assign","hi","f","p","q","t","equal","elseif","mx_rgbtohsv","_ref2","c_immutable","c","r","g","b","mincomp","maxcomp","delta","greaterThan","div","lessThanEqual","greaterThanEqual","mulAssign","addAssign","setLayout","name","type","inputs"],"sources":["/Users/vedant/node_modules/three/examples/jsm/nodes/materialx/lib/mx_hsv.js"],"sourcesContent":["// Three.js Transpiler\n// https://github.com/AcademySoftwareFoundation/MaterialX/blob/main/libraries/stdlib/genglsl/lib/mx_hsv.glsl\n\nimport { int, float, vec3, If, tslFn } from '../../shadernode/ShaderNode.js';\nimport { add, sub, mul } from '../../math/OperatorNode.js';\nimport { floor, trunc, max, min } from '../../math/MathNode.js';\n\nconst mx_hsvtorgb = tslFn( ( [ hsv_immutable ] ) => {\n\n\tconst hsv = vec3( hsv_immutable ).toVar();\n\tconst h = float( hsv.x ).toVar();\n\tconst s = float( hsv.y ).toVar();\n\tconst v = float( hsv.z ).toVar();\n\n\tIf( s.lessThan( 0.0001 ), () => {\n\n\t\treturn vec3( v, v, v );\n\n\t} ).else( () => {\n\n\t\th.assign( mul( 6.0, h.sub( floor( h ) ) ) );\n\t\tconst hi = int( trunc( h ) ).toVar();\n\t\tconst f = float( h.sub( float( hi ) ) ).toVar();\n\t\tconst p = float( v.mul( sub( 1.0, s ) ) ).toVar();\n\t\tconst q = float( v.mul( sub( 1.0, s.mul( f ) ) ) ).toVar();\n\t\tconst t = float( v.mul( sub( 1.0, s.mul( sub( 1.0, f ) ) ) ) ).toVar();\n\n\t\tIf( hi.equal( int( 0 ) ), () => {\n\n\t\t\treturn vec3( v, t, p );\n\n\t\t} ).elseif( hi.equal( int( 1 ) ), () => {\n\n\t\t\treturn vec3( q, v, p );\n\n\t\t} ).elseif( hi.equal( int( 2 ) ), () => {\n\n\t\t\treturn vec3( p, v, t );\n\n\t\t} ).elseif( hi.equal( int( 3 ) ), () => {\n\n\t\t\treturn vec3( p, q, v );\n\n\t\t} ).elseif( hi.equal( int( 4 ) ), () => {\n\n\t\t\treturn vec3( t, p, v );\n\n\t\t} );\n\n\t\treturn vec3( v, p, q );\n\n\t} );\n\n} );\n\nconst mx_rgbtohsv = tslFn( ( [ c_immutable ] ) => {\n\n\tconst c = vec3( c_immutable ).toVar();\n\tconst r = float( c.x ).toVar();\n\tconst g = float( c.y ).toVar();\n\tconst b = float( c.z ).toVar();\n\tconst mincomp = float( min( r, min( g, b ) ) ).toVar();\n\tconst maxcomp = float( max( r, max( g, b ) ) ).toVar();\n\tconst delta = float( maxcomp.sub( mincomp ) ).toVar();\n\tconst h = float().toVar(), s = float().toVar(), v = float().toVar();\n\tv.assign( maxcomp );\n\n\tIf( maxcomp.greaterThan( 0.0 ), () => {\n\n\t\ts.assign( delta.div( maxcomp ) );\n\n\t} ).else( () => {\n\n\t\ts.assign( 0.0 );\n\n\t} );\n\n\tIf( s.lessThanEqual( 0.0 ), () => {\n\n\t\th.assign( 0.0 );\n\n\t} ).else( () => {\n\n\t\tIf( r.greaterThanEqual( maxcomp ), () => {\n\n\t\t\th.assign( g.sub( b ).div( delta ) );\n\n\t\t} ).elseif( g.greaterThanEqual( maxcomp ), () => {\n\n\t\t\th.assign( add( 2.0, b.sub( r ).div( delta ) ) );\n\n\t\t} ).else( () => {\n\n\t\t\th.assign( add( 4.0, r.sub( g ).div( delta ) ) );\n\n\t\t} );\n\n\t\th.mulAssign( 1.0 / 6.0 );\n\n\t\tIf( h.lessThan( 0.0 ), () => {\n\n\t\t\th.addAssign( 1.0 );\n\n\t\t} );\n\n\t} );\n\n\treturn vec3( h, s, v );\n\n} );\n\n// layouts\n\nmx_hsvtorgb.setLayout( {\n\tname: 'mx_hsvtorgb',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'hsv', type: 'vec3' }\n\t]\n} );\n\nmx_rgbtohsv.setLayout( {\n\tname: 'mx_rgbtohsv',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'c', type: 'vec3' }\n\t]\n} );\n\nexport { mx_hsvtorgb, mx_rgbtohsv };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}