{"ast":null,"code":"import TempNode from '../core/TempNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { add, mul, div } from '../math/OperatorNode.js';\nimport { floor, ceil, fract, pow } from '../math/MathNode.js';\nimport { nodeProxy, addNodeElement, float, vec2, vec4, int } from '../shadernode/ShaderNode.js';\n\n// Mipped Bicubic Texture Filtering by N8\n// https://www.shadertoy.com/view/Dl2SDW\n\nconst bC = 1.0 / 6.0;\nconst w0 = a => mul(bC, mul(a, mul(a, a.negate().add(3.0)).sub(3.0)).add(1.0));\nconst w1 = a => mul(bC, mul(a, mul(a, mul(3.0, a).sub(6.0))).add(4.0));\nconst w2 = a => mul(bC, mul(a, mul(a, mul(-3.0, a).add(3.0)).add(3.0)).add(1.0));\nconst w3 = a => mul(bC, pow(a, 3));\nconst g0 = a => w0(a).add(w1(a));\nconst g1 = a => w2(a).add(w3(a));\n\n// h0 and h1 are the two offset functions\nconst h0 = a => add(-1.0, w1(a).div(w0(a).add(w1(a))));\nconst h1 = a => add(1.0, w3(a).div(w2(a).add(w3(a))));\nconst bicubic = (textureNode, texelSize, lod) => {\n  const uv = textureNode.uvNode;\n  const uvScaled = mul(uv, texelSize.zw).add(0.5);\n  const iuv = floor(uvScaled);\n  const fuv = fract(uvScaled);\n  const g0x = g0(fuv.x);\n  const g1x = g1(fuv.x);\n  const h0x = h0(fuv.x);\n  const h1x = h1(fuv.x);\n  const h0y = h0(fuv.y);\n  const h1y = h1(fuv.y);\n  const p0 = vec2(iuv.x.add(h0x), iuv.y.add(h0y)).sub(0.5).mul(texelSize.xy);\n  const p1 = vec2(iuv.x.add(h1x), iuv.y.add(h0y)).sub(0.5).mul(texelSize.xy);\n  const p2 = vec2(iuv.x.add(h0x), iuv.y.add(h1y)).sub(0.5).mul(texelSize.xy);\n  const p3 = vec2(iuv.x.add(h1x), iuv.y.add(h1y)).sub(0.5).mul(texelSize.xy);\n  const a = g0(fuv.y).mul(add(g0x.mul(textureNode.uv(p0).level(lod)), g1x.mul(textureNode.uv(p1).level(lod))));\n  const b = g1(fuv.y).mul(add(g0x.mul(textureNode.uv(p2).level(lod)), g1x.mul(textureNode.uv(p3).level(lod))));\n  return a.add(b);\n};\nconst textureBicubicMethod = (textureNode, lodNode) => {\n  const fLodSize = vec2(textureNode.size(int(lodNode)));\n  const cLodSize = vec2(textureNode.size(int(lodNode.add(1.0))));\n  const fLodSizeInv = div(1.0, fLodSize);\n  const cLodSizeInv = div(1.0, cLodSize);\n  const fSample = bicubic(textureNode, vec4(fLodSizeInv, fLodSize), floor(lodNode));\n  const cSample = bicubic(textureNode, vec4(cLodSizeInv, cLodSize), ceil(lodNode));\n  return fract(lodNode).mix(fSample, cSample);\n};\nclass TextureBicubicNode extends TempNode {\n  constructor(textureNode) {\n    let blurNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : float(3);\n    super('vec4');\n    this.textureNode = textureNode;\n    this.blurNode = blurNode;\n  }\n  setup() {\n    return textureBicubicMethod(this.textureNode, this.blurNode);\n  }\n}\nexport default TextureBicubicNode;\nexport const textureBicubic = nodeProxy(TextureBicubicNode);\naddNodeElement('bicubic', textureBicubic);\naddNodeClass('TextureBicubicNode', TextureBicubicNode);","map":{"version":3,"names":["TempNode","addNodeClass","add","mul","div","floor","ceil","fract","pow","nodeProxy","addNodeElement","float","vec2","vec4","int","bC","w0","a","negate","sub","w1","w2","w3","g0","g1","h0","h1","bicubic","textureNode","texelSize","lod","uv","uvNode","uvScaled","zw","iuv","fuv","g0x","x","g1x","h0x","h1x","h0y","y","h1y","p0","xy","p1","p2","p3","level","b","textureBicubicMethod","lodNode","fLodSize","size","cLodSize","fLodSizeInv","cLodSizeInv","fSample","cSample","mix","TextureBicubicNode","constructor","blurNode","arguments","length","undefined","setup","textureBicubic"],"sources":["/Users/vedant/node_modules/three/examples/jsm/nodes/accessors/TextureBicubicNode.js"],"sourcesContent":["import TempNode from '../core/TempNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { add, mul, div } from '../math/OperatorNode.js';\nimport { floor, ceil, fract, pow } from '../math/MathNode.js';\nimport { nodeProxy, addNodeElement, float, vec2, vec4, int } from '../shadernode/ShaderNode.js';\n\n// Mipped Bicubic Texture Filtering by N8\n// https://www.shadertoy.com/view/Dl2SDW\n\nconst bC = 1.0 / 6.0;\n\nconst w0 = ( a ) => mul( bC, mul( a, mul( a, a.negate().add( 3.0 ) ).sub( 3.0 ) ).add( 1.0 ) );\n\nconst w1 = ( a ) => mul( bC, mul( a, mul( a, mul( 3.0, a ).sub( 6.0 ) ) ).add( 4.0 ) );\n\nconst w2 = ( a ) => mul( bC, mul( a, mul( a, mul( - 3.0, a ).add( 3.0 ) ).add( 3.0 ) ).add( 1.0 ) );\n\nconst w3 = ( a ) => mul( bC, pow( a, 3 ) );\n\nconst g0 = ( a ) => w0( a ).add( w1( a ) );\n\nconst g1 = ( a ) => w2( a ).add( w3( a ) );\n\n// h0 and h1 are the two offset functions\nconst h0 = ( a ) => add( - 1.0, w1( a ).div( w0( a ).add( w1( a ) ) ) );\n\nconst h1 = ( a ) => add( 1.0, w3( a ).div( w2( a ).add( w3( a ) ) ) );\n\nconst bicubic = ( textureNode, texelSize, lod ) => {\n\n\tconst uv = textureNode.uvNode;\n\tconst uvScaled = mul( uv, texelSize.zw ).add( 0.5 );\n\n\tconst iuv = floor( uvScaled );\n\tconst fuv = fract( uvScaled );\n\n\tconst g0x = g0( fuv.x );\n\tconst g1x = g1( fuv.x );\n\tconst h0x = h0( fuv.x );\n\tconst h1x = h1( fuv.x );\n\tconst h0y = h0( fuv.y );\n\tconst h1y = h1( fuv.y );\n\n\tconst p0 = vec2( iuv.x.add( h0x ), iuv.y.add( h0y ) ).sub( 0.5 ).mul( texelSize.xy );\n\tconst p1 = vec2( iuv.x.add( h1x ), iuv.y.add( h0y ) ).sub( 0.5 ).mul( texelSize.xy );\n\tconst p2 = vec2( iuv.x.add( h0x ), iuv.y.add( h1y ) ).sub( 0.5 ).mul( texelSize.xy );\n\tconst p3 = vec2( iuv.x.add( h1x ), iuv.y.add( h1y ) ).sub( 0.5 ).mul( texelSize.xy );\n\n\tconst a = g0( fuv.y ).mul( add( g0x.mul( textureNode.uv( p0 ).level( lod ) ), g1x.mul( textureNode.uv( p1 ).level( lod ) ) ) );\n\tconst b = g1( fuv.y ).mul( add( g0x.mul( textureNode.uv( p2 ).level( lod ) ), g1x.mul( textureNode.uv( p3 ).level( lod ) ) ) );\n\n\treturn a.add( b );\n\n};\n\nconst textureBicubicMethod = ( textureNode, lodNode ) => {\n\n\tconst fLodSize = vec2( textureNode.size( int( lodNode ) ) );\n\tconst cLodSize = vec2( textureNode.size( int( lodNode.add( 1.0 ) ) ) );\n\tconst fLodSizeInv = div( 1.0, fLodSize );\n\tconst cLodSizeInv = div( 1.0, cLodSize );\n\tconst fSample = bicubic( textureNode, vec4( fLodSizeInv, fLodSize ), floor( lodNode ) );\n\tconst cSample = bicubic( textureNode, vec4( cLodSizeInv, cLodSize ), ceil( lodNode ) );\n\n\treturn fract( lodNode ).mix( fSample, cSample );\n\n};\n\nclass TextureBicubicNode extends TempNode {\n\n\tconstructor( textureNode, blurNode = float( 3 ) ) {\n\n\t\tsuper( 'vec4' );\n\n\t\tthis.textureNode = textureNode;\n\t\tthis.blurNode = blurNode;\n\n\t}\n\n\tsetup() {\n\n\t\treturn textureBicubicMethod( this.textureNode, this.blurNode );\n\n\t}\n\n}\n\nexport default TextureBicubicNode;\n\nexport const textureBicubic = nodeProxy( TextureBicubicNode );\n\naddNodeElement( 'bicubic', textureBicubic );\n\naddNodeClass( 'TextureBicubicNode', TextureBicubicNode );\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}