{"ast":null,"code":"import _regeneratorRuntime from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createForOfIteratorHelper from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { EventDispatcher } from 'three';\nimport { NodeUpdateType } from './constants.js';\nimport { getNodeChildren, getCacheKey as _getCacheKey } from './NodeUtils.js';\nimport { MathUtils } from 'three';\nvar NodeClasses = new Map();\nvar _nodeId = 0;\nvar Node = /*#__PURE__*/function (_EventDispatcher) {\n  _inherits(Node, _EventDispatcher);\n  var _super = _createSuper(Node);\n  function Node() {\n    var _this;\n    var nodeType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    _classCallCheck(this, Node);\n    _this = _super.call(this);\n    _this.nodeType = nodeType;\n    _this.updateType = NodeUpdateType.NONE;\n    _this.updateBeforeType = NodeUpdateType.NONE;\n    _this.uuid = MathUtils.generateUUID();\n    _this.isNode = true;\n    Object.defineProperty(_assertThisInitialized(_this), 'id', {\n      value: _nodeId++\n    });\n    return _this;\n  }\n  _createClass(Node, [{\n    key: \"type\",\n    get: function get() {\n      return this.constructor.type;\n    }\n  }, {\n    key: \"getSelf\",\n    value: function getSelf() {\n      // Returns non-node object.\n\n      return this.self || this;\n    }\n  }, {\n    key: \"updateReference\",\n    value: function updateReference() {\n      return this;\n    }\n  }, {\n    key: \"isGlobal\",\n    value: function isGlobal( /*builder*/\n    ) {\n      return false;\n    }\n  }, {\n    key: \"getChildren\",\n    value: /*#__PURE__*/_regeneratorRuntime().mark(function getChildren() {\n      var _iterator, _step, childNode;\n      return _regeneratorRuntime().wrap(function getChildren$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _iterator = _createForOfIteratorHelper(getNodeChildren(this));\n            _context.prev = 1;\n            _iterator.s();\n          case 3:\n            if ((_step = _iterator.n()).done) {\n              _context.next = 9;\n              break;\n            }\n            childNode = _step.value.childNode;\n            _context.next = 7;\n            return childNode;\n          case 7:\n            _context.next = 3;\n            break;\n          case 9:\n            _context.next = 14;\n            break;\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](1);\n            _iterator.e(_context.t0);\n          case 14:\n            _context.prev = 14;\n            _iterator.f();\n            return _context.finish(14);\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }, getChildren, this, [[1, 11, 14, 17]]);\n    })\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    }\n  }, {\n    key: \"traverse\",\n    value: function traverse(callback) {\n      callback(this);\n      var _iterator2 = _createForOfIteratorHelper(this.getChildren()),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var childNode = _step2.value;\n          childNode.traverse(callback);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"getCacheKey\",\n    value: function getCacheKey() {\n      return _getCacheKey(this);\n    }\n  }, {\n    key: \"getHash\",\n    value: function getHash( /*builder*/\n    ) {\n      return this.uuid;\n    }\n  }, {\n    key: \"getUpdateType\",\n    value: function getUpdateType() {\n      return this.updateType;\n    }\n  }, {\n    key: \"getUpdateBeforeType\",\n    value: function getUpdateBeforeType() {\n      return this.updateBeforeType;\n    }\n  }, {\n    key: \"getNodeType\",\n    value: function getNodeType(builder) {\n      var nodeProperties = builder.getNodeProperties(this);\n      if (nodeProperties.outputNode) {\n        return nodeProperties.outputNode.getNodeType(builder);\n      }\n      return this.nodeType;\n    }\n  }, {\n    key: \"getShared\",\n    value: function getShared(builder) {\n      var hash = this.getHash(builder);\n      var nodeFromHash = builder.getNodeFromHash(hash);\n      return nodeFromHash || this;\n    }\n  }, {\n    key: \"setup\",\n    value: function setup(builder) {\n      var nodeProperties = builder.getNodeProperties(this);\n      var _iterator3 = _createForOfIteratorHelper(this.getChildren()),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var childNode = _step3.value;\n          nodeProperties['_node' + childNode.id] = childNode;\n        }\n\n        // return a outputNode if exists\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      return null;\n    }\n  }, {\n    key: \"construct\",\n    value: function construct(builder) {\n      // @deprecated, r157\n\n      console.warn('THREE.Node: construct() is deprecated. Use setup() instead.');\n      return this.setup(builder);\n    }\n  }, {\n    key: \"analyze\",\n    value: function analyze(builder) {\n      var nodeData = builder.getDataFromNode(this);\n      nodeData.dependenciesCount = nodeData.dependenciesCount === undefined ? 1 : nodeData.dependenciesCount + 1;\n      if (nodeData.dependenciesCount === 1) {\n        // node flow children\n\n        var nodeProperties = builder.getNodeProperties(this);\n        for (var _i = 0, _Object$values = Object.values(nodeProperties); _i < _Object$values.length; _i++) {\n          var childNode = _Object$values[_i];\n          if (childNode && childNode.isNode === true) {\n            childNode.build(builder);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder, output) {\n      var _builder$getNodePrope = builder.getNodeProperties(this),\n        outputNode = _builder$getNodePrope.outputNode;\n      if (outputNode && outputNode.isNode === true) {\n        return outputNode.build(builder, output);\n      }\n    }\n  }, {\n    key: \"updateBefore\",\n    value: function updateBefore( /*frame*/\n    ) {\n      console.warn('Abstract function.');\n    }\n  }, {\n    key: \"update\",\n    value: function update( /*frame*/\n    ) {\n      console.warn('Abstract function.');\n    }\n  }, {\n    key: \"build\",\n    value: function build(builder) {\n      var output = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var refNode = this.getShared(builder);\n      if (this !== refNode) {\n        return refNode.build(builder, output);\n      }\n      builder.addNode(this);\n      builder.addChain(this);\n\n      /* Build stages expected results:\n      \t- \"setup\"\t\t-> Node\n      \t- \"analyze\"\t\t-> null\n      \t- \"generate\"\t-> String\n      */\n      var result = null;\n      var buildStage = builder.getBuildStage();\n      if (buildStage === 'setup') {\n        var properties = builder.getNodeProperties(this);\n        if (properties.initialized !== true || builder.context.tempRead === false) {\n          var stackNodesBeforeSetup = builder.stack.nodes.length;\n          properties.initialized = true;\n          properties.outputNode = this.setup(builder);\n          if (properties.outputNode !== null && builder.stack.nodes.length !== stackNodesBeforeSetup) {\n            properties.outputNode = builder.stack;\n          }\n          for (var _i2 = 0, _Object$values2 = Object.values(properties); _i2 < _Object$values2.length; _i2++) {\n            var childNode = _Object$values2[_i2];\n            if (childNode && childNode.isNode === true) {\n              childNode.build(builder);\n            }\n          }\n        }\n      } else if (buildStage === 'analyze') {\n        this.analyze(builder);\n      } else if (buildStage === 'generate') {\n        var isGenerateOnce = this.generate.length === 1;\n        if (isGenerateOnce) {\n          var type = this.getNodeType(builder);\n          var nodeData = builder.getDataFromNode(this);\n          result = nodeData.snippet;\n          if (result === undefined /*|| builder.context.tempRead === false*/) {\n            result = this.generate(builder) || '';\n            nodeData.snippet = result;\n          }\n          result = builder.format(result, type, output);\n        } else {\n          result = this.generate(builder, output) || '';\n        }\n      }\n      builder.removeChain(this);\n      return result;\n    }\n  }, {\n    key: \"getSerializeChildren\",\n    value: function getSerializeChildren() {\n      return getNodeChildren(this);\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(json) {\n      var nodeChildren = this.getSerializeChildren();\n      var inputNodes = {};\n      var _iterator4 = _createForOfIteratorHelper(nodeChildren),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _step4$value = _step4.value,\n            property = _step4$value.property,\n            index = _step4$value.index,\n            childNode = _step4$value.childNode;\n          if (index !== undefined) {\n            if (inputNodes[property] === undefined) {\n              inputNodes[property] = Number.isInteger(index) ? [] : {};\n            }\n            inputNodes[property][index] = childNode.toJSON(json.meta).uuid;\n          } else {\n            inputNodes[property] = childNode.toJSON(json.meta).uuid;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      if (Object.keys(inputNodes).length > 0) {\n        json.inputNodes = inputNodes;\n      }\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(json) {\n      if (json.inputNodes !== undefined) {\n        var nodes = json.meta.nodes;\n        for (var property in json.inputNodes) {\n          if (Array.isArray(json.inputNodes[property])) {\n            var inputArray = [];\n            var _iterator5 = _createForOfIteratorHelper(json.inputNodes[property]),\n              _step5;\n            try {\n              for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                var uuid = _step5.value;\n                inputArray.push(nodes[uuid]);\n              }\n            } catch (err) {\n              _iterator5.e(err);\n            } finally {\n              _iterator5.f();\n            }\n            this[property] = inputArray;\n          } else if (typeof json.inputNodes[property] === 'object') {\n            var inputObject = {};\n            for (var subProperty in json.inputNodes[property]) {\n              var _uuid = json.inputNodes[property][subProperty];\n              inputObject[subProperty] = nodes[_uuid];\n            }\n            this[property] = inputObject;\n          } else {\n            var _uuid2 = json.inputNodes[property];\n            this[property] = nodes[_uuid2];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(meta) {\n      var uuid = this.uuid,\n        type = this.type;\n      var isRoot = meta === undefined || typeof meta === 'string';\n      if (isRoot) {\n        meta = {\n          textures: {},\n          images: {},\n          nodes: {}\n        };\n      }\n\n      // serialize\n\n      var data = meta.nodes[uuid];\n      if (data === undefined) {\n        data = {\n          uuid: uuid,\n          type: type,\n          meta: meta,\n          metadata: {\n            version: 4.6,\n            type: 'Node',\n            generator: 'Node.toJSON'\n          }\n        };\n        if (isRoot !== true) meta.nodes[data.uuid] = data;\n        this.serialize(data);\n        delete data.meta;\n      }\n\n      // TODO: Copied from Object3D.toJSON\n\n      function extractFromCache(cache) {\n        var values = [];\n        for (var key in cache) {\n          var _data = cache[key];\n          delete _data.metadata;\n          values.push(_data);\n        }\n        return values;\n      }\n      if (isRoot) {\n        var textures = extractFromCache(meta.textures);\n        var images = extractFromCache(meta.images);\n        var nodes = extractFromCache(meta.nodes);\n        if (textures.length > 0) data.textures = textures;\n        if (images.length > 0) data.images = images;\n        if (nodes.length > 0) data.nodes = nodes;\n      }\n      return data;\n    }\n  }]);\n  return Node;\n}(EventDispatcher);\nexport default Node;\nexport function addNodeClass(type, nodeClass) {\n  if (typeof nodeClass !== 'function' || !type) throw new Error(\"Node class \".concat(type, \" is not a class\"));\n  if (NodeClasses.has(type)) {\n    console.warn(\"Redefinition of node class \".concat(type));\n    return;\n  }\n  NodeClasses.set(type, nodeClass);\n  nodeClass.type = type;\n}\nexport function createNodeFromType(type) {\n  var Class = NodeClasses.get(type);\n  if (Class !== undefined) {\n    return new Class();\n  }\n}","map":{"version":3,"names":["EventDispatcher","NodeUpdateType","getNodeChildren","getCacheKey","MathUtils","NodeClasses","Map","_nodeId","Node","_EventDispatcher","_inherits","_super","_createSuper","_this","nodeType","arguments","length","undefined","_classCallCheck","call","updateType","NONE","updateBeforeType","uuid","generateUUID","isNode","Object","defineProperty","_assertThisInitialized","value","_createClass","key","get","constructor","type","getSelf","self","updateReference","isGlobal","_regeneratorRuntime","mark","getChildren","_iterator","_step","childNode","wrap","getChildren$","_context","prev","next","_createForOfIteratorHelper","s","n","done","t0","e","f","finish","stop","dispose","dispatchEvent","traverse","callback","_iterator2","_step2","err","getHash","getUpdateType","getUpdateBeforeType","getNodeType","builder","nodeProperties","getNodeProperties","outputNode","getShared","hash","nodeFromHash","getNodeFromHash","setup","_iterator3","_step3","id","construct","console","warn","analyze","nodeData","getDataFromNode","dependenciesCount","_i","_Object$values","values","build","generate","output","_builder$getNodePrope","updateBefore","update","refNode","addNode","addChain","result","buildStage","getBuildStage","properties","initialized","context","tempRead","stackNodesBeforeSetup","stack","nodes","_i2","_Object$values2","isGenerateOnce","snippet","format","removeChain","getSerializeChildren","serialize","json","nodeChildren","inputNodes","_iterator4","_step4","_step4$value","property","index","Number","isInteger","toJSON","meta","keys","deserialize","Array","isArray","inputArray","_iterator5","_step5","push","inputObject","subProperty","isRoot","textures","images","data","metadata","version","generator","extractFromCache","cache","addNodeClass","nodeClass","Error","concat","has","set","createNodeFromType","Class"],"sources":["/Users/vedant/node_modules/three/examples/jsm/nodes/core/Node.js"],"sourcesContent":["import { EventDispatcher } from 'three';\nimport { NodeUpdateType } from './constants.js';\nimport { getNodeChildren, getCacheKey } from './NodeUtils.js';\nimport { MathUtils } from 'three';\n\nconst NodeClasses = new Map();\n\nlet _nodeId = 0;\n\nclass Node extends EventDispatcher {\n\n\tconstructor( nodeType = null ) {\n\n\t\tsuper();\n\n\t\tthis.nodeType = nodeType;\n\n\t\tthis.updateType = NodeUpdateType.NONE;\n\t\tthis.updateBeforeType = NodeUpdateType.NONE;\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.isNode = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _nodeId ++ } );\n\n\t}\n\n\tget type() {\n\n\t\treturn this.constructor.type;\n\n\t}\n\n\tgetSelf() {\n\n\t\t// Returns non-node object.\n\n\t\treturn this.self || this;\n\n\t}\n\n\tupdateReference() {\n\n\t\treturn this;\n\n\t}\n\n\tisGlobal( /*builder*/ ) {\n\n\t\treturn false;\n\n\t}\n\n\t* getChildren() {\n\n\t\tfor ( const { childNode } of getNodeChildren( this ) ) {\n\n\t\t\tyield childNode;\n\n\t\t}\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tfor ( const childNode of this.getChildren() ) {\n\n\t\t\tchildNode.traverse( callback );\n\n\t\t}\n\n\t}\n\n\tgetCacheKey() {\n\n\t\treturn getCacheKey( this );\n\n\t}\n\n\tgetHash( /*builder*/ ) {\n\n\t\treturn this.uuid;\n\n\t}\n\n\tgetUpdateType() {\n\n\t\treturn this.updateType;\n\n\t}\n\n\tgetUpdateBeforeType() {\n\n\t\treturn this.updateBeforeType;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\tconst nodeProperties = builder.getNodeProperties( this );\n\n\t\tif ( nodeProperties.outputNode ) {\n\n\t\t\treturn nodeProperties.outputNode.getNodeType( builder );\n\n\t\t}\n\n\t\treturn this.nodeType;\n\n\t}\n\n\tgetShared( builder ) {\n\n\t\tconst hash = this.getHash( builder );\n\t\tconst nodeFromHash = builder.getNodeFromHash( hash );\n\n\t\treturn nodeFromHash || this;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst nodeProperties = builder.getNodeProperties( this );\n\n\t\tfor ( const childNode of this.getChildren() ) {\n\n\t\t\tnodeProperties[ '_node' + childNode.id ] = childNode;\n\n\t\t}\n\n\t\t// return a outputNode if exists\n\t\treturn null;\n\n\t}\n\n\tconstruct( builder ) { // @deprecated, r157\n\n\t\tconsole.warn( 'THREE.Node: construct() is deprecated. Use setup() instead.' );\n\n\t\treturn this.setup( builder );\n\n\t}\n\n\tanalyze( builder ) {\n\n\t\tconst nodeData = builder.getDataFromNode( this );\n\t\tnodeData.dependenciesCount = nodeData.dependenciesCount === undefined ? 1 : nodeData.dependenciesCount + 1;\n\n\t\tif ( nodeData.dependenciesCount === 1 ) {\n\n\t\t\t// node flow children\n\n\t\t\tconst nodeProperties = builder.getNodeProperties( this );\n\n\t\t\tfor ( const childNode of Object.values( nodeProperties ) ) {\n\n\t\t\t\tif ( childNode && childNode.isNode === true ) {\n\n\t\t\t\t\tchildNode.build( builder );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst { outputNode } = builder.getNodeProperties( this );\n\n\t\tif ( outputNode && outputNode.isNode === true ) {\n\n\t\t\treturn outputNode.build( builder, output );\n\n\t\t}\n\n\t}\n\n\tupdateBefore( /*frame*/ ) {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n\tupdate( /*frame*/ ) {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n\tbuild( builder, output = null ) {\n\n\t\tconst refNode = this.getShared( builder );\n\n\t\tif ( this !== refNode ) {\n\n\t\t\treturn refNode.build( builder, output );\n\n\t\t}\n\n\t\tbuilder.addNode( this );\n\t\tbuilder.addChain( this );\n\n\t\t/* Build stages expected results:\n\t\t\t- \"setup\"\t\t-> Node\n\t\t\t- \"analyze\"\t\t-> null\n\t\t\t- \"generate\"\t-> String\n\t\t*/\n\t\tlet result = null;\n\n\t\tconst buildStage = builder.getBuildStage();\n\n\t\tif ( buildStage === 'setup' ) {\n\n\t\t\tconst properties = builder.getNodeProperties( this );\n\n\t\t\tif ( properties.initialized !== true || builder.context.tempRead === false ) {\n\n\t\t\t\tconst stackNodesBeforeSetup = builder.stack.nodes.length;\n\n\t\t\t\tproperties.initialized = true;\n\t\t\t\tproperties.outputNode = this.setup( builder );\n\n\t\t\t\tif ( properties.outputNode !== null && builder.stack.nodes.length !== stackNodesBeforeSetup ) {\n\n\t\t\t\t\tproperties.outputNode = builder.stack;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( const childNode of Object.values( properties ) ) {\n\n\t\t\t\t\tif ( childNode && childNode.isNode === true ) {\n\n\t\t\t\t\t\tchildNode.build( builder );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( buildStage === 'analyze' ) {\n\n\t\t\tthis.analyze( builder );\n\n\t\t} else if ( buildStage === 'generate' ) {\n\n\t\t\tconst isGenerateOnce = this.generate.length === 1;\n\n\t\t\tif ( isGenerateOnce ) {\n\n\t\t\t\tconst type = this.getNodeType( builder );\n\t\t\t\tconst nodeData = builder.getDataFromNode( this );\n\n\t\t\t\tresult = nodeData.snippet;\n\n\t\t\t\tif ( result === undefined /*|| builder.context.tempRead === false*/ ) {\n\n\t\t\t\t\tresult = this.generate( builder ) || '';\n\n\t\t\t\t\tnodeData.snippet = result;\n\n\t\t\t\t}\n\n\t\t\t\tresult = builder.format( result, type, output );\n\n\t\t\t} else {\n\n\t\t\t\tresult = this.generate( builder, output ) || '';\n\n\t\t\t}\n\n\t\t}\n\n\t\tbuilder.removeChain( this );\n\n\t\treturn result;\n\n\t}\n\n\tgetSerializeChildren() {\n\n\t\treturn getNodeChildren( this );\n\n\t}\n\n\tserialize( json ) {\n\n\t\tconst nodeChildren = this.getSerializeChildren();\n\n\t\tconst inputNodes = {};\n\n\t\tfor ( const { property, index, childNode } of nodeChildren ) {\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tif ( inputNodes[ property ] === undefined ) {\n\n\t\t\t\t\tinputNodes[ property ] = Number.isInteger( index ) ? [] : {};\n\n\t\t\t\t}\n\n\t\t\t\tinputNodes[ property ][ index ] = childNode.toJSON( json.meta ).uuid;\n\n\t\t\t} else {\n\n\t\t\t\tinputNodes[ property ] = childNode.toJSON( json.meta ).uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( inputNodes ).length > 0 ) {\n\n\t\t\tjson.inputNodes = inputNodes;\n\n\t\t}\n\n\t}\n\n\tdeserialize( json ) {\n\n\t\tif ( json.inputNodes !== undefined ) {\n\n\t\t\tconst nodes = json.meta.nodes;\n\n\t\t\tfor ( const property in json.inputNodes ) {\n\n\t\t\t\tif ( Array.isArray( json.inputNodes[ property ] ) ) {\n\n\t\t\t\t\tconst inputArray = [];\n\n\t\t\t\t\tfor ( const uuid of json.inputNodes[ property ] ) {\n\n\t\t\t\t\t\tinputArray.push( nodes[ uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis[ property ] = inputArray;\n\n\t\t\t\t} else if ( typeof json.inputNodes[ property ] === 'object' ) {\n\n\t\t\t\t\tconst inputObject = {};\n\n\t\t\t\t\tfor ( const subProperty in json.inputNodes[ property ] ) {\n\n\t\t\t\t\t\tconst uuid = json.inputNodes[ property ][ subProperty ];\n\n\t\t\t\t\t\tinputObject[ subProperty ] = nodes[ uuid ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis[ property ] = inputObject;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst uuid = json.inputNodes[ property ];\n\n\t\t\t\t\tthis[ property ] = nodes[ uuid ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst { uuid, type } = this;\n\t\tconst isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t}\n\n\t\t// serialize\n\n\t\tlet data = meta.nodes[ uuid ];\n\n\t\tif ( data === undefined ) {\n\n\t\t\tdata = {\n\t\t\t\tuuid,\n\t\t\t\ttype,\n\t\t\t\tmeta,\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.6,\n\t\t\t\t\ttype: 'Node',\n\t\t\t\t\tgenerator: 'Node.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif ( isRoot !== true ) meta.nodes[ data.uuid ] = data;\n\n\t\t\tthis.serialize( data );\n\n\t\t\tdelete data.meta;\n\n\t\t}\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\t\t\tif ( nodes.length > 0 ) data.nodes = nodes;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nexport default Node;\n\nexport function addNodeClass( type, nodeClass ) {\n\n\tif ( typeof nodeClass !== 'function' || ! type ) throw new Error( `Node class ${ type } is not a class` );\n\tif ( NodeClasses.has( type ) ) {\n\n\t\tconsole.warn( `Redefinition of node class ${ type }` );\n\t\treturn;\n\n\t}\n\n\tNodeClasses.set( type, nodeClass );\n\tnodeClass.type = type;\n\n}\n\nexport function createNodeFromType( type ) {\n\n\tconst Class = NodeClasses.get( type );\n\n\tif ( Class !== undefined ) {\n\n\t\treturn new Class();\n\n\t}\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}