{"ast":null,"code":"import Node, { addNodeClass } from '../core/Node.js';\nimport { float, addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\nclass RemapNode extends Node {\n  constructor(node, inLowNode, inHighNode) {\n    let outLowNode = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : float(0);\n    let outHighNode = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : float(1);\n    super();\n    this.node = node;\n    this.inLowNode = inLowNode;\n    this.inHighNode = inHighNode;\n    this.outLowNode = outLowNode;\n    this.outHighNode = outHighNode;\n    this.doClamp = true;\n  }\n  setup() {\n    const {\n      node,\n      inLowNode,\n      inHighNode,\n      outLowNode,\n      outHighNode,\n      doClamp\n    } = this;\n    let t = node.sub(inLowNode).div(inHighNode.sub(inLowNode));\n    if (doClamp === true) t = t.clamp();\n    return t.mul(outHighNode.sub(outLowNode)).add(outLowNode);\n  }\n}\nexport default RemapNode;\nexport const remap = nodeProxy(RemapNode, null, null, {\n  doClamp: false\n});\nexport const remapClamp = nodeProxy(RemapNode);\naddNodeElement('remap', remap);\naddNodeElement('remapClamp', remapClamp);\naddNodeClass('RemapNode', RemapNode);","map":{"version":3,"names":["Node","addNodeClass","float","addNodeElement","nodeProxy","RemapNode","constructor","node","inLowNode","inHighNode","outLowNode","arguments","length","undefined","outHighNode","doClamp","setup","t","sub","div","clamp","mul","add","remap","remapClamp"],"sources":["/Users/vedant/node_modules/three/examples/jsm/nodes/utils/RemapNode.js"],"sourcesContent":["import Node, { addNodeClass } from '../core/Node.js';\nimport { float, addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\n\nclass RemapNode extends Node {\n\n\tconstructor( node, inLowNode, inHighNode, outLowNode = float( 0 ), outHighNode = float( 1 ) ) {\n\n\t\tsuper();\n\n\t\tthis.node = node;\n\t\tthis.inLowNode = inLowNode;\n\t\tthis.inHighNode = inHighNode;\n\t\tthis.outLowNode = outLowNode;\n\t\tthis.outHighNode = outHighNode;\n\n\t\tthis.doClamp = true;\n\n\t}\n\n\tsetup() {\n\n\t\tconst { node, inLowNode, inHighNode, outLowNode, outHighNode, doClamp } = this;\n\n\t\tlet t = node.sub( inLowNode ).div( inHighNode.sub( inLowNode ) );\n\n\t\tif ( doClamp === true ) t = t.clamp();\n\n\t\treturn t.mul( outHighNode.sub( outLowNode ) ).add( outLowNode );\n\n\t}\n\n}\n\nexport default RemapNode;\n\nexport const remap = nodeProxy( RemapNode, null, null, { doClamp: false } );\nexport const remapClamp = nodeProxy( RemapNode );\n\naddNodeElement( 'remap', remap );\naddNodeElement( 'remapClamp', remapClamp );\n\naddNodeClass( 'RemapNode', RemapNode );\n"],"mappings":"AAAA,OAAOA,IAAI,IAAIC,YAAY,QAAQ,iBAAiB;AACpD,SAASC,KAAK,EAAEC,cAAc,EAAEC,SAAS,QAAQ,6BAA6B;AAE9E,MAAMC,SAAS,SAASL,IAAI,CAAC;EAE5BM,WAAWA,CAAEC,IAAI,EAAEC,SAAS,EAAEC,UAAU,EAAsD;IAAA,IAApDC,UAAU,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGT,KAAK,CAAE,CAAE,CAAC;IAAA,IAAEY,WAAW,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGT,KAAK,CAAE,CAAE,CAAC;IAE1F,KAAK,CAAC,CAAC;IAEP,IAAI,CAACK,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACI,WAAW,GAAGA,WAAW;IAE9B,IAAI,CAACC,OAAO,GAAG,IAAI;EAEpB;EAEAC,KAAKA,CAAA,EAAG;IAEP,MAAM;MAAET,IAAI;MAAEC,SAAS;MAAEC,UAAU;MAAEC,UAAU;MAAEI,WAAW;MAAEC;IAAQ,CAAC,GAAG,IAAI;IAE9E,IAAIE,CAAC,GAAGV,IAAI,CAACW,GAAG,CAAEV,SAAU,CAAC,CAACW,GAAG,CAAEV,UAAU,CAACS,GAAG,CAAEV,SAAU,CAAE,CAAC;IAEhE,IAAKO,OAAO,KAAK,IAAI,EAAGE,CAAC,GAAGA,CAAC,CAACG,KAAK,CAAC,CAAC;IAErC,OAAOH,CAAC,CAACI,GAAG,CAAEP,WAAW,CAACI,GAAG,CAAER,UAAW,CAAE,CAAC,CAACY,GAAG,CAAEZ,UAAW,CAAC;EAEhE;AAED;AAEA,eAAeL,SAAS;AAExB,OAAO,MAAMkB,KAAK,GAAGnB,SAAS,CAAEC,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE;EAAEU,OAAO,EAAE;AAAM,CAAE,CAAC;AAC3E,OAAO,MAAMS,UAAU,GAAGpB,SAAS,CAAEC,SAAU,CAAC;AAEhDF,cAAc,CAAE,OAAO,EAAEoB,KAAM,CAAC;AAChCpB,cAAc,CAAE,YAAY,EAAEqB,UAAW,CAAC;AAE1CvB,YAAY,CAAE,WAAW,EAAEI,SAAU,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}