{"ast":null,"code":"import getGeometryRoughness from './getGeometryRoughness.js';\nimport { tslFn } from '../../shadernode/ShaderNode.js';\nconst getRoughness = tslFn(inputs => {\n  const {\n    roughness\n  } = inputs;\n  const geometryRoughness = getGeometryRoughness();\n  let roughnessFactor = roughness.max(0.0525); // 0.0525 corresponds to the base mip of a 256 cubemap.\n  roughnessFactor = roughnessFactor.add(geometryRoughness);\n  roughnessFactor = roughnessFactor.min(1.0);\n  return roughnessFactor;\n});\nexport default getRoughness;","map":{"version":3,"names":["getGeometryRoughness","tslFn","getRoughness","inputs","roughness","geometryRoughness","roughnessFactor","max","add","min"],"sources":["/Users/vedant/node_modules/three/examples/jsm/nodes/functions/material/getRoughness.js"],"sourcesContent":["import getGeometryRoughness from './getGeometryRoughness.js';\nimport { tslFn } from '../../shadernode/ShaderNode.js';\n\nconst getRoughness = tslFn( ( inputs ) => {\n\n\tconst { roughness } = inputs;\n\n\tconst geometryRoughness = getGeometryRoughness();\n\n\tlet roughnessFactor = roughness.max( 0.0525 ); // 0.0525 corresponds to the base mip of a 256 cubemap.\n\troughnessFactor = roughnessFactor.add( geometryRoughness );\n\troughnessFactor = roughnessFactor.min( 1.0 );\n\n\treturn roughnessFactor;\n\n} );\n\nexport default getRoughness;\n"],"mappings":"AAAA,OAAOA,oBAAoB,MAAM,2BAA2B;AAC5D,SAASC,KAAK,QAAQ,gCAAgC;AAEtD,MAAMC,YAAY,GAAGD,KAAK,CAAIE,MAAM,IAAM;EAEzC,MAAM;IAAEC;EAAU,CAAC,GAAGD,MAAM;EAE5B,MAAME,iBAAiB,GAAGL,oBAAoB,CAAC,CAAC;EAEhD,IAAIM,eAAe,GAAGF,SAAS,CAACG,GAAG,CAAE,MAAO,CAAC,CAAC,CAAC;EAC/CD,eAAe,GAAGA,eAAe,CAACE,GAAG,CAAEH,iBAAkB,CAAC;EAC1DC,eAAe,GAAGA,eAAe,CAACG,GAAG,CAAE,GAAI,CAAC;EAE5C,OAAOH,eAAe;AAEvB,CAAE,CAAC;AAEH,eAAeJ,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}