{"ast":null,"code":"import AnalyticLightNode from './AnalyticLightNode.js';\nimport { addLightNode } from './LightsNode.js';\nimport { uniform } from '../core/UniformNode.js';\nimport { mix } from '../math/MathNode.js';\nimport { normalView } from '../accessors/NormalNode.js';\nimport { objectPosition } from '../accessors/Object3DNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { Color, HemisphereLight } from 'three';\nclass HemisphereLightNode extends AnalyticLightNode {\n  constructor() {\n    let light = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    super(light);\n    this.lightPositionNode = objectPosition(light);\n    this.lightDirectionNode = this.lightPositionNode.normalize();\n    this.groundColorNode = uniform(new Color());\n  }\n  update(frame) {\n    const {\n      light\n    } = this;\n    super.update(frame);\n    this.lightPositionNode.object3d = light;\n    this.groundColorNode.value.copy(light.groundColor).multiplyScalar(light.intensity);\n  }\n  setup(builder) {\n    const {\n      colorNode,\n      groundColorNode,\n      lightDirectionNode\n    } = this;\n    const dotNL = normalView.dot(lightDirectionNode);\n    const hemiDiffuseWeight = dotNL.mul(0.5).add(0.5);\n    const irradiance = mix(groundColorNode, colorNode, hemiDiffuseWeight);\n    builder.context.irradiance.addAssign(irradiance);\n  }\n}\nexport default HemisphereLightNode;\naddNodeClass('HemisphereLightNode', HemisphereLightNode);\naddLightNode(HemisphereLight, HemisphereLightNode);","map":{"version":3,"names":["AnalyticLightNode","addLightNode","uniform","mix","normalView","objectPosition","addNodeClass","Color","HemisphereLight","HemisphereLightNode","constructor","light","arguments","length","undefined","lightPositionNode","lightDirectionNode","normalize","groundColorNode","update","frame","object3d","value","copy","groundColor","multiplyScalar","intensity","setup","builder","colorNode","dotNL","dot","hemiDiffuseWeight","mul","add","irradiance","context","addAssign"],"sources":["/Users/vedant/node_modules/three/examples/jsm/nodes/lighting/HemisphereLightNode.js"],"sourcesContent":["import AnalyticLightNode from './AnalyticLightNode.js';\nimport { addLightNode } from './LightsNode.js';\nimport { uniform } from '../core/UniformNode.js';\nimport { mix } from '../math/MathNode.js';\nimport { normalView } from '../accessors/NormalNode.js';\nimport { objectPosition } from '../accessors/Object3DNode.js';\nimport { addNodeClass } from '../core/Node.js';\n\nimport { Color, HemisphereLight } from 'three';\n\nclass HemisphereLightNode extends AnalyticLightNode {\n\n\tconstructor( light = null ) {\n\n\t\tsuper( light );\n\n\t\tthis.lightPositionNode = objectPosition( light );\n\t\tthis.lightDirectionNode = this.lightPositionNode.normalize();\n\n\t\tthis.groundColorNode = uniform( new Color() );\n\n\t}\n\n\tupdate( frame ) {\n\n\t\tconst { light } = this;\n\n\t\tsuper.update( frame );\n\n\t\tthis.lightPositionNode.object3d = light;\n\n\t\tthis.groundColorNode.value.copy( light.groundColor ).multiplyScalar( light.intensity );\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst { colorNode, groundColorNode, lightDirectionNode } = this;\n\n\t\tconst dotNL = normalView.dot( lightDirectionNode );\n\t\tconst hemiDiffuseWeight = dotNL.mul( 0.5 ).add( 0.5 );\n\n\t\tconst irradiance = mix( groundColorNode, colorNode, hemiDiffuseWeight );\n\n\t\tbuilder.context.irradiance.addAssign( irradiance );\n\n\t}\n\n}\n\nexport default HemisphereLightNode;\n\naddNodeClass( 'HemisphereLightNode', HemisphereLightNode );\n\naddLightNode( HemisphereLight, HemisphereLightNode );\n"],"mappings":"AAAA,OAAOA,iBAAiB,MAAM,wBAAwB;AACtD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,GAAG,QAAQ,qBAAqB;AACzC,SAASC,UAAU,QAAQ,4BAA4B;AACvD,SAASC,cAAc,QAAQ,8BAA8B;AAC7D,SAASC,YAAY,QAAQ,iBAAiB;AAE9C,SAASC,KAAK,EAAEC,eAAe,QAAQ,OAAO;AAE9C,MAAMC,mBAAmB,SAAST,iBAAiB,CAAC;EAEnDU,WAAWA,CAAA,EAAiB;IAAA,IAAfC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;IAExB,KAAK,CAAED,KAAM,CAAC;IAEd,IAAI,CAACI,iBAAiB,GAAGV,cAAc,CAAEM,KAAM,CAAC;IAChD,IAAI,CAACK,kBAAkB,GAAG,IAAI,CAACD,iBAAiB,CAACE,SAAS,CAAC,CAAC;IAE5D,IAAI,CAACC,eAAe,GAAGhB,OAAO,CAAE,IAAIK,KAAK,CAAC,CAAE,CAAC;EAE9C;EAEAY,MAAMA,CAAEC,KAAK,EAAG;IAEf,MAAM;MAAET;IAAM,CAAC,GAAG,IAAI;IAEtB,KAAK,CAACQ,MAAM,CAAEC,KAAM,CAAC;IAErB,IAAI,CAACL,iBAAiB,CAACM,QAAQ,GAAGV,KAAK;IAEvC,IAAI,CAACO,eAAe,CAACI,KAAK,CAACC,IAAI,CAAEZ,KAAK,CAACa,WAAY,CAAC,CAACC,cAAc,CAAEd,KAAK,CAACe,SAAU,CAAC;EAEvF;EAEAC,KAAKA,CAAEC,OAAO,EAAG;IAEhB,MAAM;MAAEC,SAAS;MAAEX,eAAe;MAAEF;IAAmB,CAAC,GAAG,IAAI;IAE/D,MAAMc,KAAK,GAAG1B,UAAU,CAAC2B,GAAG,CAAEf,kBAAmB,CAAC;IAClD,MAAMgB,iBAAiB,GAAGF,KAAK,CAACG,GAAG,CAAE,GAAI,CAAC,CAACC,GAAG,CAAE,GAAI,CAAC;IAErD,MAAMC,UAAU,GAAGhC,GAAG,CAAEe,eAAe,EAAEW,SAAS,EAAEG,iBAAkB,CAAC;IAEvEJ,OAAO,CAACQ,OAAO,CAACD,UAAU,CAACE,SAAS,CAAEF,UAAW,CAAC;EAEnD;AAED;AAEA,eAAe1B,mBAAmB;AAElCH,YAAY,CAAE,qBAAqB,EAAEG,mBAAoB,CAAC;AAE1DR,YAAY,CAAEO,eAAe,EAAEC,mBAAoB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}