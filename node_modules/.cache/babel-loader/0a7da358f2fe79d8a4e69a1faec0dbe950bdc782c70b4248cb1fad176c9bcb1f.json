{"ast":null,"code":"import _slicedToArray from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n// Three.js Transpiler\n// https://github.com/AcademySoftwareFoundation/MaterialX/blob/main/libraries/stdlib/genglsl/lib/mx_transform_color.glsl\n\nimport { bvec3, vec3, tslFn } from '../../shadernode/ShaderNode.js';\nimport { greaterThan } from '../../math/OperatorNode.js';\nimport { max, pow, mix } from '../../math/MathNode.js';\nvar mx_srgb_texture_to_lin_rec709 = tslFn(function (_ref) {\n  var _ref2 = _slicedToArray(_ref, 1),\n    color_immutable = _ref2[0];\n  var color = vec3(color_immutable).toVar();\n  var isAbove = bvec3(greaterThan(color, vec3(0.04045))).toVar();\n  var linSeg = vec3(color.div(12.92)).toVar();\n  var powSeg = vec3(pow(max(color.add(vec3(0.055)), vec3(0.0)).div(1.055), vec3(2.4))).toVar();\n  return mix(linSeg, powSeg, isAbove);\n});\n\n// layouts\n\nmx_srgb_texture_to_lin_rec709.setLayout({\n  name: 'mx_srgb_texture_to_lin_rec709',\n  type: 'vec3',\n  inputs: [{\n    name: 'color',\n    type: 'vec3'\n  }]\n});\nexport { mx_srgb_texture_to_lin_rec709 };","map":{"version":3,"names":["bvec3","vec3","tslFn","greaterThan","max","pow","mix","mx_srgb_texture_to_lin_rec709","_ref","_ref2","_slicedToArray","color_immutable","color","toVar","isAbove","linSeg","div","powSeg","add","setLayout","name","type","inputs"],"sources":["/Users/vedant/node_modules/three/examples/jsm/nodes/materialx/lib/mx_transform_color.js"],"sourcesContent":["// Three.js Transpiler\n// https://github.com/AcademySoftwareFoundation/MaterialX/blob/main/libraries/stdlib/genglsl/lib/mx_transform_color.glsl\n\nimport { bvec3, vec3, tslFn } from '../../shadernode/ShaderNode.js';\nimport { greaterThan } from '../../math/OperatorNode.js';\nimport { max, pow, mix } from '../../math/MathNode.js';\n\nconst mx_srgb_texture_to_lin_rec709 = tslFn( ( [ color_immutable ] ) => {\n\n\tconst color = vec3( color_immutable ).toVar();\n\tconst isAbove = bvec3( greaterThan( color, vec3( 0.04045 ) ) ).toVar();\n\tconst linSeg = vec3( color.div( 12.92 ) ).toVar();\n\tconst powSeg = vec3( pow( max( color.add( vec3( 0.055 ) ), vec3( 0.0 ) ).div( 1.055 ), vec3( 2.4 ) ) ).toVar();\n\n\treturn mix( linSeg, powSeg, isAbove );\n\n} );\n\n// layouts\n\nmx_srgb_texture_to_lin_rec709.setLayout( {\n\tname: 'mx_srgb_texture_to_lin_rec709',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'color', type: 'vec3' }\n\t]\n} );\n\nexport { mx_srgb_texture_to_lin_rec709 };\n"],"mappings":";AAAA;AACA;;AAEA,SAASA,KAAK,EAAEC,IAAI,EAAEC,KAAK,QAAQ,gCAAgC;AACnE,SAASC,WAAW,QAAQ,4BAA4B;AACxD,SAASC,GAAG,EAAEC,GAAG,EAAEC,GAAG,QAAQ,wBAAwB;AAEtD,IAAMC,6BAA6B,GAAGL,KAAK,CAAE,UAAAM,IAAA,EAA2B;EAAA,IAAAC,KAAA,GAAAC,cAAA,CAAAF,IAAA;IAAvBG,eAAe,GAAAF,KAAA;EAE/D,IAAMG,KAAK,GAAGX,IAAI,CAAEU,eAAgB,CAAC,CAACE,KAAK,CAAC,CAAC;EAC7C,IAAMC,OAAO,GAAGd,KAAK,CAAEG,WAAW,CAAES,KAAK,EAAEX,IAAI,CAAE,OAAQ,CAAE,CAAE,CAAC,CAACY,KAAK,CAAC,CAAC;EACtE,IAAME,MAAM,GAAGd,IAAI,CAAEW,KAAK,CAACI,GAAG,CAAE,KAAM,CAAE,CAAC,CAACH,KAAK,CAAC,CAAC;EACjD,IAAMI,MAAM,GAAGhB,IAAI,CAAEI,GAAG,CAAED,GAAG,CAAEQ,KAAK,CAACM,GAAG,CAAEjB,IAAI,CAAE,KAAM,CAAE,CAAC,EAAEA,IAAI,CAAE,GAAI,CAAE,CAAC,CAACe,GAAG,CAAE,KAAM,CAAC,EAAEf,IAAI,CAAE,GAAI,CAAE,CAAE,CAAC,CAACY,KAAK,CAAC,CAAC;EAE9G,OAAOP,GAAG,CAAES,MAAM,EAAEE,MAAM,EAAEH,OAAQ,CAAC;AAEtC,CAAE,CAAC;;AAEH;;AAEAP,6BAA6B,CAACY,SAAS,CAAE;EACxCC,IAAI,EAAE,+BAA+B;EACrCC,IAAI,EAAE,MAAM;EACZC,MAAM,EAAE,CACP;IAAEF,IAAI,EAAE,OAAO;IAAEC,IAAI,EAAE;EAAO,CAAC;AAEjC,CAAE,CAAC;AAEH,SAASd,6BAA6B"},"metadata":{},"sourceType":"module","externalDependencies":[]}