{"ast":null,"code":"import ReferenceNode from './ReferenceNode.js';\n//import { renderGroup } from '../core/UniformGroupNode.js';\n//import { NodeUpdateType } from '../core/constants.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { nodeObject } from '../shadernode/ShaderNode.js';\nclass MaterialReferenceNode extends ReferenceNode {\n  constructor(property, inputType) {\n    let material = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    super(property, inputType, material);\n    this.material = material;\n\n    //this.updateType = NodeUpdateType.RENDER;\n  }\n\n  /*setNodeType( node ) {\n  \t\tsuper.setNodeType( node );\n  \t\tthis.node.groupNode = renderGroup;\n  \t}*/\n\n  updateReference(frame) {\n    this.reference = this.material !== null ? this.material : frame.material;\n    return this.reference;\n  }\n  setup(builder) {\n    const material = this.material !== null ? this.material : builder.material;\n    this.node.value = material[this.property];\n    return super.setup(builder);\n  }\n}\nexport default MaterialReferenceNode;\nexport const materialReference = (name, type, material) => nodeObject(new MaterialReferenceNode(name, type, material));\naddNodeClass('MaterialReferenceNode', MaterialReferenceNode);","map":{"version":3,"names":["ReferenceNode","addNodeClass","nodeObject","MaterialReferenceNode","constructor","property","inputType","material","arguments","length","undefined","updateReference","frame","reference","setup","builder","node","value","materialReference","name","type"],"sources":["/Users/vedant/node_modules/three/examples/jsm/nodes/accessors/MaterialReferenceNode.js"],"sourcesContent":["import ReferenceNode from './ReferenceNode.js';\n//import { renderGroup } from '../core/UniformGroupNode.js';\n//import { NodeUpdateType } from '../core/constants.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { nodeObject } from '../shadernode/ShaderNode.js';\n\nclass MaterialReferenceNode extends ReferenceNode {\n\n\tconstructor( property, inputType, material = null ) {\n\n\t\tsuper( property, inputType, material );\n\n\t\tthis.material = material;\n\n\t\t//this.updateType = NodeUpdateType.RENDER;\n\n\t}\n\n\t/*setNodeType( node ) {\n\n\t\tsuper.setNodeType( node );\n\n\t\tthis.node.groupNode = renderGroup;\n\n\t}*/\n\n\tupdateReference( frame ) {\n\n\t\tthis.reference = this.material !== null ? this.material : frame.material;\n\n\t\treturn this.reference;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst material = this.material !== null ? this.material : builder.material;\n\n\t\tthis.node.value = material[ this.property ];\n\n\t\treturn super.setup( builder );\n\n\t}\n\n}\n\nexport default MaterialReferenceNode;\n\nexport const materialReference = ( name, type, material ) => nodeObject( new MaterialReferenceNode( name, type, material ) );\n\naddNodeClass( 'MaterialReferenceNode', MaterialReferenceNode );\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,oBAAoB;AAC9C;AACA;AACA,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,UAAU,QAAQ,6BAA6B;AAExD,MAAMC,qBAAqB,SAASH,aAAa,CAAC;EAEjDI,WAAWA,CAAEC,QAAQ,EAAEC,SAAS,EAAoB;IAAA,IAAlBC,QAAQ,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;IAEhD,KAAK,CAAEH,QAAQ,EAAEC,SAAS,EAAEC,QAAS,CAAC;IAEtC,IAAI,CAACA,QAAQ,GAAGA,QAAQ;;IAExB;EAED;;EAEA;AACD;AACA;AACA;;EAKCI,eAAeA,CAAEC,KAAK,EAAG;IAExB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACN,QAAQ,KAAK,IAAI,GAAG,IAAI,CAACA,QAAQ,GAAGK,KAAK,CAACL,QAAQ;IAExE,OAAO,IAAI,CAACM,SAAS;EAEtB;EAEAC,KAAKA,CAAEC,OAAO,EAAG;IAEhB,MAAMR,QAAQ,GAAG,IAAI,CAACA,QAAQ,KAAK,IAAI,GAAG,IAAI,CAACA,QAAQ,GAAGQ,OAAO,CAACR,QAAQ;IAE1E,IAAI,CAACS,IAAI,CAACC,KAAK,GAAGV,QAAQ,CAAE,IAAI,CAACF,QAAQ,CAAE;IAE3C,OAAO,KAAK,CAACS,KAAK,CAAEC,OAAQ,CAAC;EAE9B;AAED;AAEA,eAAeZ,qBAAqB;AAEpC,OAAO,MAAMe,iBAAiB,GAAGA,CAAEC,IAAI,EAAEC,IAAI,EAAEb,QAAQ,KAAML,UAAU,CAAE,IAAIC,qBAAqB,CAAEgB,IAAI,EAAEC,IAAI,EAAEb,QAAS,CAAE,CAAC;AAE5HN,YAAY,CAAE,uBAAuB,EAAEE,qBAAsB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}