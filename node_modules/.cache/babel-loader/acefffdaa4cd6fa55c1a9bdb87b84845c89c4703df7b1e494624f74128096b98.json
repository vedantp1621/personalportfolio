{"ast":null,"code":"import AnalyticLightNode from './AnalyticLightNode.js';\nimport { lightTargetDirection } from './LightNode.js';\nimport { addLightNode } from './LightsNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { DirectionalLight } from 'three';\nclass DirectionalLightNode extends AnalyticLightNode {\n  constructor() {\n    let light = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    super(light);\n  }\n  setup(builder) {\n    super.setup(builder);\n    const lightingModel = builder.context.lightingModel;\n    const lightColor = this.colorNode;\n    const lightDirection = lightTargetDirection(this.light);\n    const reflectedLight = builder.context.reflectedLight;\n    lightingModel.direct({\n      lightDirection,\n      lightColor,\n      reflectedLight\n    }, builder.stack, builder);\n  }\n}\nexport default DirectionalLightNode;\naddNodeClass('DirectionalLightNode', DirectionalLightNode);\naddLightNode(DirectionalLight, DirectionalLightNode);","map":{"version":3,"names":["AnalyticLightNode","lightTargetDirection","addLightNode","addNodeClass","DirectionalLight","DirectionalLightNode","constructor","light","arguments","length","undefined","setup","builder","lightingModel","context","lightColor","colorNode","lightDirection","reflectedLight","direct","stack"],"sources":["/Users/vedant/node_modules/three/examples/jsm/nodes/lighting/DirectionalLightNode.js"],"sourcesContent":["import AnalyticLightNode from './AnalyticLightNode.js';\nimport { lightTargetDirection } from './LightNode.js';\nimport { addLightNode } from './LightsNode.js';\nimport { addNodeClass } from '../core/Node.js';\n\nimport { DirectionalLight } from 'three';\n\nclass DirectionalLightNode extends AnalyticLightNode {\n\n\tconstructor( light = null ) {\n\n\t\tsuper( light );\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tsuper.setup( builder );\n\n\t\tconst lightingModel = builder.context.lightingModel;\n\n\t\tconst lightColor = this.colorNode;\n\t\tconst lightDirection = lightTargetDirection( this.light );\n\t\tconst reflectedLight = builder.context.reflectedLight;\n\n\t\tlightingModel.direct( {\n\t\t\tlightDirection,\n\t\t\tlightColor,\n\t\t\treflectedLight\n\t\t}, builder.stack, builder );\n\n\t}\n\n}\n\nexport default DirectionalLightNode;\n\naddNodeClass( 'DirectionalLightNode', DirectionalLightNode );\n\naddLightNode( DirectionalLight, DirectionalLightNode );\n"],"mappings":"AAAA,OAAOA,iBAAiB,MAAM,wBAAwB;AACtD,SAASC,oBAAoB,QAAQ,gBAAgB;AACrD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,YAAY,QAAQ,iBAAiB;AAE9C,SAASC,gBAAgB,QAAQ,OAAO;AAExC,MAAMC,oBAAoB,SAASL,iBAAiB,CAAC;EAEpDM,WAAWA,CAAA,EAAiB;IAAA,IAAfC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;IAExB,KAAK,CAAED,KAAM,CAAC;EAEf;EAEAI,KAAKA,CAAEC,OAAO,EAAG;IAEhB,KAAK,CAACD,KAAK,CAAEC,OAAQ,CAAC;IAEtB,MAAMC,aAAa,GAAGD,OAAO,CAACE,OAAO,CAACD,aAAa;IAEnD,MAAME,UAAU,GAAG,IAAI,CAACC,SAAS;IACjC,MAAMC,cAAc,GAAGhB,oBAAoB,CAAE,IAAI,CAACM,KAAM,CAAC;IACzD,MAAMW,cAAc,GAAGN,OAAO,CAACE,OAAO,CAACI,cAAc;IAErDL,aAAa,CAACM,MAAM,CAAE;MACrBF,cAAc;MACdF,UAAU;MACVG;IACD,CAAC,EAAEN,OAAO,CAACQ,KAAK,EAAER,OAAQ,CAAC;EAE5B;AAED;AAEA,eAAeP,oBAAoB;AAEnCF,YAAY,CAAE,sBAAsB,EAAEE,oBAAqB,CAAC;AAE5DH,YAAY,CAAEE,gBAAgB,EAAEC,oBAAqB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}