{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Node from '../core/Node.js';\nimport AnalyticLightNode from './AnalyticLightNode.js';\nimport { nodeObject, nodeProxy, vec3 } from '../shadernode/ShaderNode.js';\nvar LightNodes = new WeakMap();\nvar sortLights = function sortLights(lights) {\n  return lights.sort(function (a, b) {\n    return a.id - b.id;\n  });\n};\nvar LightsNode = /*#__PURE__*/function (_Node) {\n  _inherits(LightsNode, _Node);\n  var _super = _createSuper(LightsNode);\n  function LightsNode() {\n    var _this;\n    var lightNodes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    _classCallCheck(this, LightsNode);\n    _this = _super.call(this, 'vec3');\n    _this.totalDiffuseNode = vec3().temp('totalDiffuse');\n    _this.totalSpecularNode = vec3().temp('totalSpecular');\n    _this.outgoingLightNode = vec3().temp('outgoingLight');\n    _this.lightNodes = lightNodes;\n    _this._hash = null;\n    return _this;\n  }\n  _createClass(LightsNode, [{\n    key: \"hasLight\",\n    get: function get() {\n      return this.lightNodes.length > 0;\n    }\n  }, {\n    key: \"getHash\",\n    value: function getHash() {\n      if (this._hash === null) {\n        var hash = [];\n        var _iterator = _createForOfIteratorHelper(this.lightNodes),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var lightNode = _step.value;\n            hash.push(lightNode.getHash());\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        this._hash = 'lights-' + hash.join(',');\n      }\n      return this._hash;\n    }\n  }, {\n    key: \"setup\",\n    value: function setup(builder) {\n      var context = builder.context;\n      var lightingModel = context.lightingModel;\n      var outgoingLightNode = this.outgoingLightNode;\n      if (lightingModel) {\n        var lightNodes = this.lightNodes,\n          totalDiffuseNode = this.totalDiffuseNode,\n          totalSpecularNode = this.totalSpecularNode;\n        context.outgoingLight = outgoingLightNode;\n        var stack = builder.addStack();\n\n        //\n\n        lightingModel.start(context, stack, builder);\n\n        // lights\n        var _iterator2 = _createForOfIteratorHelper(lightNodes),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var lightNode = _step2.value;\n            lightNode.build(builder);\n          }\n\n          //\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n        lightingModel.indirectDiffuse(context, stack, builder);\n        lightingModel.indirectSpecular(context, stack, builder);\n        lightingModel.ambientOcclusion(context, stack, builder);\n\n        //\n\n        var backdrop = context.backdrop,\n          backdropAlpha = context.backdropAlpha;\n        var _context$reflectedLig = context.reflectedLight,\n          directDiffuse = _context$reflectedLig.directDiffuse,\n          directSpecular = _context$reflectedLig.directSpecular,\n          indirectDiffuse = _context$reflectedLig.indirectDiffuse,\n          indirectSpecular = _context$reflectedLig.indirectSpecular;\n        var totalDiffuse = directDiffuse.add(indirectDiffuse);\n        if (backdrop !== null) {\n          totalDiffuse = vec3(backdropAlpha !== null ? backdropAlpha.mix(totalDiffuse, backdrop) : backdrop);\n        }\n        totalDiffuseNode.assign(totalDiffuse);\n        totalSpecularNode.assign(directSpecular.add(indirectSpecular));\n        outgoingLightNode.assign(totalDiffuseNode.add(totalSpecularNode));\n\n        //\n\n        lightingModel.finish(context, stack, builder);\n\n        //\n\n        outgoingLightNode = outgoingLightNode.bypass(builder.removeStack());\n      }\n      return outgoingLightNode;\n    }\n  }, {\n    key: \"_getLightNodeById\",\n    value: function _getLightNodeById(id) {\n      var _iterator3 = _createForOfIteratorHelper(this.lightNodes),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var lightNode = _step3.value;\n          if (lightNode.isAnalyticLightNode && lightNode.light.id === id) {\n            return lightNode;\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      return null;\n    }\n  }, {\n    key: \"fromLights\",\n    value: function fromLights() {\n      var lights = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var lightNodes = [];\n      lights = sortLights(lights);\n      var _iterator4 = _createForOfIteratorHelper(lights),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var light = _step4.value;\n          var lightNode = this._getLightNodeById(light.id);\n          if (lightNode === null) {\n            var lightClass = light.constructor;\n            var lightNodeClass = LightNodes.has(lightClass) ? LightNodes.get(lightClass) : AnalyticLightNode;\n            lightNode = nodeObject(new lightNodeClass(light));\n          }\n          lightNodes.push(lightNode);\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      this.lightNodes = lightNodes;\n      this._hash = null;\n      return this;\n    }\n  }]);\n  return LightsNode;\n}(Node);\nexport default LightsNode;\nexport var lights = function lights(_lights) {\n  return nodeObject(new LightsNode().fromLights(_lights));\n};\nexport var lightsNode = nodeProxy(LightsNode);\nexport function addLightNode(lightClass, lightNodeClass) {\n  if (LightNodes.has(lightClass)) {\n    console.warn(\"Redefinition of light node \".concat(lightNodeClass.type));\n    return;\n  }\n  if (typeof lightClass !== 'function') throw new Error(\"Light \".concat(lightClass.name, \" is not a class\"));\n  if (typeof lightNodeClass !== 'function' || !lightNodeClass.type) throw new Error(\"Light node \".concat(lightNodeClass.type, \" is not a class\"));\n  LightNodes.set(lightClass, lightNodeClass);\n}","map":{"version":3,"names":["Node","AnalyticLightNode","nodeObject","nodeProxy","vec3","LightNodes","WeakMap","sortLights","lights","sort","a","b","id","LightsNode","_Node","_inherits","_super","_createSuper","_this","lightNodes","arguments","length","undefined","_classCallCheck","call","totalDiffuseNode","temp","totalSpecularNode","outgoingLightNode","_hash","_createClass","key","get","value","getHash","hash","_iterator","_createForOfIteratorHelper","_step","s","n","done","lightNode","push","err","e","f","join","setup","builder","context","lightingModel","outgoingLight","stack","addStack","start","_iterator2","_step2","build","indirectDiffuse","indirectSpecular","ambientOcclusion","backdrop","backdropAlpha","_context$reflectedLig","reflectedLight","directDiffuse","directSpecular","totalDiffuse","add","mix","assign","finish","bypass","removeStack","_getLightNodeById","_iterator3","_step3","isAnalyticLightNode","light","fromLights","_iterator4","_step4","lightClass","constructor","lightNodeClass","has","lightsNode","addLightNode","console","warn","concat","type","Error","name","set"],"sources":["/Users/vedant/node_modules/three/examples/jsm/nodes/lighting/LightsNode.js"],"sourcesContent":["import Node from '../core/Node.js';\nimport AnalyticLightNode from './AnalyticLightNode.js';\nimport { nodeObject, nodeProxy, vec3 } from '../shadernode/ShaderNode.js';\n\nconst LightNodes = new WeakMap();\n\nconst sortLights = ( lights ) => {\n\n\treturn lights.sort( ( a, b ) => a.id - b.id );\n\n};\n\nclass LightsNode extends Node {\n\n\tconstructor( lightNodes = [] ) {\n\n\t\tsuper( 'vec3' );\n\n\t\tthis.totalDiffuseNode = vec3().temp( 'totalDiffuse' );\n\t\tthis.totalSpecularNode = vec3().temp( 'totalSpecular' );\n\n\t\tthis.outgoingLightNode = vec3().temp( 'outgoingLight' );\n\n\t\tthis.lightNodes = lightNodes;\n\n\t\tthis._hash = null;\n\n\t}\n\n\tget hasLight() {\n\n\t\treturn this.lightNodes.length > 0;\n\n\t}\n\n\tgetHash() {\n\n\t\tif ( this._hash === null ) {\n\n\t\t\tconst hash = [];\n\n\t\t\tfor ( const lightNode of this.lightNodes ) {\n\n\t\t\t\thash.push( lightNode.getHash() );\n\n\t\t\t}\n\n\t\t\tthis._hash = 'lights-' + hash.join( ',' );\n\n\t\t}\n\n\t\treturn this._hash;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst context = builder.context;\n\t\tconst lightingModel = context.lightingModel;\n\n\t\tlet outgoingLightNode = this.outgoingLightNode;\n\n\t\tif ( lightingModel ) {\n\n\t\t\tconst { lightNodes, totalDiffuseNode, totalSpecularNode } = this;\n\n\t\t\tcontext.outgoingLight = outgoingLightNode;\n\n\t\t\tconst stack = builder.addStack();\n\n\t\t\t//\n\n\t\t\tlightingModel.start( context, stack, builder );\n\n\t\t\t// lights\n\n\t\t\tfor ( const lightNode of lightNodes ) {\n\n\t\t\t\tlightNode.build( builder );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlightingModel.indirectDiffuse( context, stack, builder );\n\t\t\tlightingModel.indirectSpecular( context, stack, builder );\n\t\t\tlightingModel.ambientOcclusion( context, stack, builder );\n\n\t\t\t//\n\n\t\t\tconst { backdrop, backdropAlpha } = context;\n\t\t\tconst { directDiffuse, directSpecular, indirectDiffuse, indirectSpecular } = context.reflectedLight;\n\n\t\t\tlet totalDiffuse = directDiffuse.add( indirectDiffuse );\n\n\t\t\tif ( backdrop !== null ) {\n\n\t\t\t\ttotalDiffuse = vec3( backdropAlpha !== null ? backdropAlpha.mix( totalDiffuse, backdrop ) : backdrop );\n\n\t\t\t}\n\n\t\t\ttotalDiffuseNode.assign( totalDiffuse );\n\t\t\ttotalSpecularNode.assign( directSpecular.add( indirectSpecular ) );\n\n\t\t\toutgoingLightNode.assign( totalDiffuseNode.add( totalSpecularNode ) );\n\n\t\t\t//\n\n\t\t\tlightingModel.finish( context, stack, builder );\n\n\t\t\t//\n\n\t\t\toutgoingLightNode = outgoingLightNode.bypass( builder.removeStack() );\n\n\t\t}\n\n\t\treturn outgoingLightNode;\n\n\t}\n\n\t_getLightNodeById( id ) {\n\n\t\tfor ( const lightNode of this.lightNodes ) {\n\n\t\t\tif ( lightNode.isAnalyticLightNode && lightNode.light.id === id ) {\n\n\t\t\t\treturn lightNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tfromLights( lights = [] ) {\n\n\t\tconst lightNodes = [];\n\n\t\tlights = sortLights( lights );\n\n\t\tfor ( const light of lights ) {\n\n\t\t\tlet lightNode = this._getLightNodeById( light.id );\n\n\t\t\tif ( lightNode === null ) {\n\n\t\t\t\tconst lightClass = light.constructor;\n\t\t\t\tconst lightNodeClass = LightNodes.has( lightClass ) ? LightNodes.get( lightClass ) : AnalyticLightNode;\n\n\t\t\t\tlightNode = nodeObject( new lightNodeClass( light ) );\n\n\t\t\t}\n\n\t\t\tlightNodes.push( lightNode );\n\n\t\t}\n\n\t\tthis.lightNodes = lightNodes;\n\t\tthis._hash = null;\n\n\t\treturn this;\n\n\t}\n\n}\n\nexport default LightsNode;\n\nexport const lights = ( lights ) => nodeObject( new LightsNode().fromLights( lights ) );\nexport const lightsNode = nodeProxy( LightsNode );\n\nexport function addLightNode( lightClass, lightNodeClass ) {\n\n\tif ( LightNodes.has( lightClass ) ) {\n\n\t\tconsole.warn( `Redefinition of light node ${ lightNodeClass.type }` );\n\t\treturn;\n\n\t}\n\n\tif ( typeof lightClass !== 'function' ) throw new Error( `Light ${ lightClass.name } is not a class` );\n\tif ( typeof lightNodeClass !== 'function' || ! lightNodeClass.type ) throw new Error( `Light node ${ lightNodeClass.type } is not a class` );\n\n\tLightNodes.set( lightClass, lightNodeClass );\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}