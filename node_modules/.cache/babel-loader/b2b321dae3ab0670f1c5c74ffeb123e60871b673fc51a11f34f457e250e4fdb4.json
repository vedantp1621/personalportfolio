{"ast":null,"code":"import _classCallCheck from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport TempNode from '../core/TempNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { addNodeElement, nodeProxy, vec4, mat2, mat4 } from '../shadernode/ShaderNode.js';\nimport { cos, sin } from '../math/MathNode.js';\nvar RotateNode = /*#__PURE__*/function (_TempNode) {\n  _inherits(RotateNode, _TempNode);\n  var _super = _createSuper(RotateNode);\n  function RotateNode(positionNode, rotationNode) {\n    var _this;\n    _classCallCheck(this, RotateNode);\n    _this = _super.call(this);\n    _this.positionNode = positionNode;\n    _this.rotationNode = rotationNode;\n    return _this;\n  }\n  _createClass(RotateNode, [{\n    key: \"getNodeType\",\n    value: function getNodeType(builder) {\n      return this.positionNode.getNodeType(builder);\n    }\n  }, {\n    key: \"setup\",\n    value: function setup(builder) {\n      var rotationNode = this.rotationNode,\n        positionNode = this.positionNode;\n      var nodeType = this.getNodeType(builder);\n      if (nodeType === 'vec2') {\n        var cosAngle = rotationNode.cos();\n        var sinAngle = rotationNode.sin();\n        var rotationMatrix = mat2(cosAngle, sinAngle, sinAngle.negate(), cosAngle);\n        return rotationMatrix.mul(positionNode);\n      } else {\n        var rotation = rotationNode;\n        var rotationXMatrix = mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, cos(rotation.x), sin(rotation.x).negate(), 0.0), vec4(0.0, sin(rotation.x), cos(rotation.x), 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n        var rotationYMatrix = mat4(vec4(cos(rotation.y), 0.0, sin(rotation.y), 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(sin(rotation.y).negate(), 0.0, cos(rotation.y), 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n        var rotationZMatrix = mat4(vec4(cos(rotation.z), sin(rotation.z).negate(), 0.0, 0.0), vec4(sin(rotation.z), cos(rotation.z), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n        return rotationXMatrix.mul(rotationYMatrix).mul(rotationZMatrix).mul(vec4(positionNode, 1.0)).xyz;\n      }\n    }\n  }]);\n  return RotateNode;\n}(TempNode);\nexport default RotateNode;\nexport var rotate = nodeProxy(RotateNode);\naddNodeElement('rotate', rotate);\naddNodeClass('RotateNode', RotateNode);","map":{"version":3,"names":["TempNode","addNodeClass","addNodeElement","nodeProxy","vec4","mat2","mat4","cos","sin","RotateNode","_TempNode","_inherits","_super","_createSuper","positionNode","rotationNode","_this","_classCallCheck","call","_createClass","key","value","getNodeType","builder","setup","nodeType","cosAngle","sinAngle","rotationMatrix","negate","mul","rotation","rotationXMatrix","x","rotationYMatrix","y","rotationZMatrix","z","xyz","rotate"],"sources":["/Users/vedant/node_modules/three/examples/jsm/nodes/utils/RotateNode.js"],"sourcesContent":["import TempNode from '../core/TempNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport {\n\taddNodeElement,\n\tnodeProxy,\n\tvec4,\n\tmat2,\n\tmat4,\n} from '../shadernode/ShaderNode.js';\nimport { cos, sin } from '../math/MathNode.js';\n\nclass RotateNode extends TempNode {\n\n\tconstructor( positionNode, rotationNode ) {\n\n\t\tsuper();\n\n\t\tthis.positionNode = positionNode;\n\t\tthis.rotationNode = rotationNode;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.positionNode.getNodeType( builder );\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst { rotationNode, positionNode } = this;\n\n\t\tconst nodeType = this.getNodeType( builder );\n\n\t\tif ( nodeType === 'vec2' ) {\n\n\t\t\tconst cosAngle = rotationNode.cos();\n\t\t\tconst sinAngle = rotationNode.sin();\n\n\t\t\tconst rotationMatrix = mat2(\n\t\t\t\tcosAngle, sinAngle,\n\t\t\t\tsinAngle.negate(), cosAngle\n\t\t\t);\n\n\t\t\treturn rotationMatrix.mul( positionNode );\n\n\t\t} else {\n\n\t\t\tconst rotation = rotationNode;\n\t\t\tconst rotationXMatrix = mat4( vec4( 1.0, 0.0, 0.0, 0.0 ), vec4( 0.0, cos( rotation.x ), sin( rotation.x ).negate(), 0.0 ), vec4( 0.0, sin( rotation.x ), cos( rotation.x ), 0.0 ), vec4( 0.0, 0.0, 0.0, 1.0 ) );\n\t\t\tconst rotationYMatrix = mat4( vec4( cos( rotation.y ), 0.0, sin( rotation.y ), 0.0 ), vec4( 0.0, 1.0, 0.0, 0.0 ), vec4( sin( rotation.y ).negate(), 0.0, cos( rotation.y ), 0.0 ), vec4( 0.0, 0.0, 0.0, 1.0 ) );\n\t\t\tconst rotationZMatrix = mat4( vec4( cos( rotation.z ), sin( rotation.z ).negate(), 0.0, 0.0 ), vec4( sin( rotation.z ), cos( rotation.z ), 0.0, 0.0 ), vec4( 0.0, 0.0, 1.0, 0.0 ), vec4( 0.0, 0.0, 0.0, 1.0 ) );\n\n\t\t\treturn rotationXMatrix.mul( rotationYMatrix ).mul( rotationZMatrix ).mul( vec4( positionNode, 1.0 ) ).xyz;\n\n\t\t}\n\n\t}\n\n}\n\nexport default RotateNode;\n\nexport const rotate = nodeProxy( RotateNode );\n\naddNodeElement( 'rotate', rotate );\n\naddNodeClass( 'RotateNode', RotateNode );\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}