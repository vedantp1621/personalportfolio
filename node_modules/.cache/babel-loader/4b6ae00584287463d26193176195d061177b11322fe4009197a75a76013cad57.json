{"ast":null,"code":"import Node from '../core/Node.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\nimport { reference } from './ReferenceNode.js';\nclass SceneNode extends Node {\n  constructor() {\n    let scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SceneNode.BACKGROUND_BLURRINESS;\n    let scene = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    super();\n    this.scope = scope;\n    this.scene = scene;\n  }\n  setup(builder) {\n    const scope = this.scope;\n    const scene = this.scene !== null ? this.scene : builder.scene;\n    let output;\n    if (scope === SceneNode.BACKGROUND_BLURRINESS) {\n      output = reference('backgroundBlurriness', 'float', scene);\n    } else if (scope === SceneNode.BACKGROUND_INTENSITY) {\n      output = reference('backgroundIntensity', 'float', scene);\n    } else {\n      console.error('THREE.SceneNode: Unknown scope:', scope);\n    }\n    return output;\n  }\n}\nSceneNode.BACKGROUND_BLURRINESS = 'backgroundBlurriness';\nSceneNode.BACKGROUND_INTENSITY = 'backgroundIntensity';\nexport default SceneNode;\nexport const backgroundBlurriness = nodeImmutable(SceneNode, SceneNode.BACKGROUND_BLURRINESS);\nexport const backgroundIntensity = nodeImmutable(SceneNode, SceneNode.BACKGROUND_INTENSITY);\naddNodeClass('SceneNode', SceneNode);","map":{"version":3,"names":["Node","addNodeClass","nodeImmutable","reference","SceneNode","constructor","scope","arguments","length","undefined","BACKGROUND_BLURRINESS","scene","setup","builder","output","BACKGROUND_INTENSITY","console","error","backgroundBlurriness","backgroundIntensity"],"sources":["/Users/vedant/node_modules/three/examples/jsm/nodes/accessors/SceneNode.js"],"sourcesContent":["import Node from '../core/Node.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\nimport { reference } from './ReferenceNode.js';\n\nclass SceneNode extends Node {\n\n\tconstructor( scope = SceneNode.BACKGROUND_BLURRINESS, scene = null ) {\n\n\t\tsuper();\n\n\t\tthis.scope = scope;\n\t\tthis.scene = scene;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst scope = this.scope;\n\t\tconst scene = this.scene !== null ? this.scene : builder.scene;\n\n\t\tlet output;\n\n\t\tif ( scope === SceneNode.BACKGROUND_BLURRINESS ) {\n\n\t\t\toutput = reference( 'backgroundBlurriness', 'float', scene );\n\n\t\t} else if ( scope === SceneNode.BACKGROUND_INTENSITY ) {\n\n\t\t\toutput = reference( 'backgroundIntensity', 'float', scene );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.SceneNode: Unknown scope:', scope );\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nSceneNode.BACKGROUND_BLURRINESS = 'backgroundBlurriness';\nSceneNode.BACKGROUND_INTENSITY = 'backgroundIntensity';\n\nexport default SceneNode;\n\nexport const backgroundBlurriness = nodeImmutable( SceneNode, SceneNode.BACKGROUND_BLURRINESS );\nexport const backgroundIntensity = nodeImmutable( SceneNode, SceneNode.BACKGROUND_INTENSITY );\n\naddNodeClass( 'SceneNode', SceneNode );\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,iBAAiB;AAClC,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,aAAa,QAAQ,6BAA6B;AAC3D,SAASC,SAAS,QAAQ,oBAAoB;AAE9C,MAAMC,SAAS,SAASJ,IAAI,CAAC;EAE5BK,WAAWA,CAAA,EAA0D;IAAA,IAAxDC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGH,SAAS,CAACM,qBAAqB;IAAA,IAAEC,KAAK,GAAAJ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;IAEjE,KAAK,CAAC,CAAC;IAEP,IAAI,CAACD,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACK,KAAK,GAAGA,KAAK;EAEnB;EAEAC,KAAKA,CAAEC,OAAO,EAAG;IAEhB,MAAMP,KAAK,GAAG,IAAI,CAACA,KAAK;IACxB,MAAMK,KAAK,GAAG,IAAI,CAACA,KAAK,KAAK,IAAI,GAAG,IAAI,CAACA,KAAK,GAAGE,OAAO,CAACF,KAAK;IAE9D,IAAIG,MAAM;IAEV,IAAKR,KAAK,KAAKF,SAAS,CAACM,qBAAqB,EAAG;MAEhDI,MAAM,GAAGX,SAAS,CAAE,sBAAsB,EAAE,OAAO,EAAEQ,KAAM,CAAC;IAE7D,CAAC,MAAM,IAAKL,KAAK,KAAKF,SAAS,CAACW,oBAAoB,EAAG;MAEtDD,MAAM,GAAGX,SAAS,CAAE,qBAAqB,EAAE,OAAO,EAAEQ,KAAM,CAAC;IAE5D,CAAC,MAAM;MAENK,OAAO,CAACC,KAAK,CAAE,iCAAiC,EAAEX,KAAM,CAAC;IAE1D;IAEA,OAAOQ,MAAM;EAEd;AAED;AAEAV,SAAS,CAACM,qBAAqB,GAAG,sBAAsB;AACxDN,SAAS,CAACW,oBAAoB,GAAG,qBAAqB;AAEtD,eAAeX,SAAS;AAExB,OAAO,MAAMc,oBAAoB,GAAGhB,aAAa,CAAEE,SAAS,EAAEA,SAAS,CAACM,qBAAsB,CAAC;AAC/F,OAAO,MAAMS,mBAAmB,GAAGjB,aAAa,CAAEE,SAAS,EAAEA,SAAS,CAACW,oBAAqB,CAAC;AAE7Fd,YAAY,CAAE,WAAW,EAAEG,SAAU,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}