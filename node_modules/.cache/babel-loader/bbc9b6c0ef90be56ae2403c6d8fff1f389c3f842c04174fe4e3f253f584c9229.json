{"ast":null,"code":"import _classCallCheck from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport LightingNode from './LightingNode.js';\nimport { cache } from '../core/CacheNode.js';\nimport { context } from '../core/ContextNode.js';\nimport { maxMipLevel } from '../utils/MaxMipLevelNode.js';\nimport { roughness, clearcoatRoughness } from '../core/PropertyNode.js';\nimport { equirectUV } from '../utils/EquirectUVNode.js';\nimport { specularMIPLevel } from '../utils/SpecularMIPLevelNode.js';\nimport { cameraViewMatrix } from '../accessors/CameraNode.js';\nimport { transformedClearcoatNormalView, transformedNormalView, transformedNormalWorld } from '../accessors/NormalNode.js';\nimport { positionViewDirection } from '../accessors/PositionNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { vec2 } from '../shadernode/ShaderNode.js';\nimport { cubeTexture } from '../accessors/CubeTextureNode.js';\nimport { reference } from '../accessors/ReferenceNode.js';\nvar envNodeCache = new WeakMap();\nvar EnvironmentNode = /*#__PURE__*/function (_LightingNode) {\n  _inherits(EnvironmentNode, _LightingNode);\n  var _super = _createSuper(EnvironmentNode);\n  function EnvironmentNode() {\n    var _this;\n    var envNode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    _classCallCheck(this, EnvironmentNode);\n    _this = _super.call(this);\n    _this.envNode = envNode;\n    return _this;\n  }\n  _createClass(EnvironmentNode, [{\n    key: \"setup\",\n    value: function setup(builder) {\n      var envNode = this.envNode;\n      if (envNode.isTextureNode && envNode.value.isCubeTexture !== true) {\n        var cacheEnvNode = envNodeCache.get(envNode.value);\n        if (cacheEnvNode === undefined) {\n          var texture = envNode.value;\n          var renderer = builder.renderer;\n\n          // @TODO: Add dispose logic here\n          var cubeRTT = builder.getCubeRenderTarget(512).fromEquirectangularTexture(renderer, texture);\n          cacheEnvNode = cubeTexture(cubeRTT.texture);\n          envNodeCache.set(envNode.value, cacheEnvNode);\n        }\n        envNode = cacheEnvNode;\n      }\n\n      //\n\n      var intensity = reference('envMapIntensity', 'float', builder.material); // @TODO: Add materialEnvIntensity in MaterialNode\n\n      var radiance = context(envNode, createRadianceContext(roughness, transformedNormalView)).mul(intensity);\n      var irradiance = context(envNode, createIrradianceContext(transformedNormalWorld)).mul(Math.PI).mul(intensity);\n      var isolateRadiance = cache(radiance);\n\n      //\n\n      builder.context.radiance.addAssign(isolateRadiance);\n      builder.context.iblIrradiance.addAssign(irradiance);\n\n      //\n\n      var clearcoatRadiance = builder.context.lightingModel.clearcoatRadiance;\n      if (clearcoatRadiance) {\n        var clearcoatRadianceContext = context(envNode, createRadianceContext(clearcoatRoughness, transformedClearcoatNormalView)).mul(intensity);\n        var isolateClearcoatRadiance = cache(clearcoatRadianceContext);\n        clearcoatRadiance.addAssign(isolateClearcoatRadiance);\n      }\n    }\n  }]);\n  return EnvironmentNode;\n}(LightingNode);\nvar createRadianceContext = function createRadianceContext(roughnessNode, normalViewNode) {\n  var reflectVec = null;\n  var textureUVNode = null;\n  return {\n    getUV: function getUV(textureNode) {\n      var node = null;\n      if (reflectVec === null) {\n        reflectVec = positionViewDirection.negate().reflect(normalViewNode);\n        reflectVec = roughnessNode.mul(roughnessNode).mix(reflectVec, normalViewNode).normalize();\n        reflectVec = reflectVec.transformDirection(cameraViewMatrix);\n      }\n      if (textureNode.isCubeTextureNode) {\n        node = reflectVec;\n      } else if (textureNode.isTextureNode) {\n        if (textureUVNode === null) {\n          // @TODO: Needed PMREM\n\n          textureUVNode = equirectUV(reflectVec);\n        }\n        node = textureUVNode;\n      }\n      return node;\n    },\n    getTextureLevel: function getTextureLevel() {\n      return roughnessNode;\n    },\n    getTextureLevelAlgorithm: function getTextureLevelAlgorithm(textureNode, levelNode) {\n      return specularMIPLevel(textureNode, levelNode);\n    }\n  };\n};\nvar createIrradianceContext = function createIrradianceContext(normalWorldNode) {\n  var textureUVNode = null;\n  return {\n    getUV: function getUV(textureNode) {\n      var node = null;\n      if (textureNode.isCubeTextureNode) {\n        node = normalWorldNode;\n      } else if (textureNode.isTextureNode) {\n        if (textureUVNode === null) {\n          // @TODO: Needed PMREM\n\n          textureUVNode = equirectUV(normalWorldNode);\n          textureUVNode = vec2(textureUVNode.x, textureUVNode.y.oneMinus());\n        }\n        node = textureUVNode;\n      }\n      return node;\n    },\n    getTextureLevel: function getTextureLevel(textureNode) {\n      return maxMipLevel(textureNode);\n    }\n  };\n};\nexport default EnvironmentNode;\naddNodeClass('EnvironmentNode', EnvironmentNode);","map":{"version":3,"names":["LightingNode","cache","context","maxMipLevel","roughness","clearcoatRoughness","equirectUV","specularMIPLevel","cameraViewMatrix","transformedClearcoatNormalView","transformedNormalView","transformedNormalWorld","positionViewDirection","addNodeClass","vec2","cubeTexture","reference","envNodeCache","WeakMap","EnvironmentNode","_LightingNode","_inherits","_super","_createSuper","_this","envNode","arguments","length","undefined","_classCallCheck","call","_createClass","key","value","setup","builder","isTextureNode","isCubeTexture","cacheEnvNode","get","texture","renderer","cubeRTT","getCubeRenderTarget","fromEquirectangularTexture","set","intensity","material","radiance","createRadianceContext","mul","irradiance","createIrradianceContext","Math","PI","isolateRadiance","addAssign","iblIrradiance","clearcoatRadiance","lightingModel","clearcoatRadianceContext","isolateClearcoatRadiance","roughnessNode","normalViewNode","reflectVec","textureUVNode","getUV","textureNode","node","negate","reflect","mix","normalize","transformDirection","isCubeTextureNode","getTextureLevel","getTextureLevelAlgorithm","levelNode","normalWorldNode","x","y","oneMinus"],"sources":["/Users/vedant/node_modules/three/examples/jsm/nodes/lighting/EnvironmentNode.js"],"sourcesContent":["import LightingNode from './LightingNode.js';\nimport { cache } from '../core/CacheNode.js';\nimport { context } from '../core/ContextNode.js';\nimport { maxMipLevel } from '../utils/MaxMipLevelNode.js';\nimport { roughness, clearcoatRoughness } from '../core/PropertyNode.js';\nimport { equirectUV } from '../utils/EquirectUVNode.js';\nimport { specularMIPLevel } from '../utils/SpecularMIPLevelNode.js';\nimport { cameraViewMatrix } from '../accessors/CameraNode.js';\nimport { transformedClearcoatNormalView, transformedNormalView, transformedNormalWorld } from '../accessors/NormalNode.js';\nimport { positionViewDirection } from '../accessors/PositionNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { vec2 } from '../shadernode/ShaderNode.js';\nimport { cubeTexture } from '../accessors/CubeTextureNode.js';\nimport { reference } from '../accessors/ReferenceNode.js';\n\nconst envNodeCache = new WeakMap();\n\nclass EnvironmentNode extends LightingNode {\n\n\tconstructor( envNode = null ) {\n\n\t\tsuper();\n\n\t\tthis.envNode = envNode;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tlet envNode = this.envNode;\n\n\t\tif ( envNode.isTextureNode && envNode.value.isCubeTexture !== true ) {\n\n\t\t\tlet cacheEnvNode = envNodeCache.get( envNode.value );\n\n\t\t\tif ( cacheEnvNode === undefined ) {\n\n\t\t\t\tconst texture = envNode.value;\n\t\t\t\tconst renderer = builder.renderer;\n\n\t\t\t\t// @TODO: Add dispose logic here\n\t\t\t\tconst cubeRTT = builder.getCubeRenderTarget( 512 ).fromEquirectangularTexture( renderer, texture );\n\n\t\t\t\tcacheEnvNode = cubeTexture( cubeRTT.texture );\n\n\t\t\t\tenvNodeCache.set( envNode.value, cacheEnvNode );\n\n\t\t\t}\n\n\t\t\tenvNode\t= cacheEnvNode;\n\n\t\t}\n\n\t\t//\n\n\t\tconst intensity = reference( 'envMapIntensity', 'float', builder.material ); // @TODO: Add materialEnvIntensity in MaterialNode\n\n\t\tconst radiance = context( envNode, createRadianceContext( roughness, transformedNormalView ) ).mul( intensity );\n\t\tconst irradiance = context( envNode, createIrradianceContext( transformedNormalWorld ) ).mul( Math.PI ).mul( intensity );\n\n\t\tconst isolateRadiance = cache( radiance );\n\n\t\t//\n\n\t\tbuilder.context.radiance.addAssign( isolateRadiance );\n\n\t\tbuilder.context.iblIrradiance.addAssign( irradiance );\n\n\t\t//\n\n\t\tconst clearcoatRadiance = builder.context.lightingModel.clearcoatRadiance;\n\n\t\tif ( clearcoatRadiance ) {\n\n\t\t\tconst clearcoatRadianceContext = context( envNode, createRadianceContext( clearcoatRoughness, transformedClearcoatNormalView ) ).mul( intensity );\n\t\t\tconst isolateClearcoatRadiance = cache( clearcoatRadianceContext );\n\n\t\t\tclearcoatRadiance.addAssign( isolateClearcoatRadiance );\n\n\t\t}\n\n\t}\n\n}\n\nconst createRadianceContext = ( roughnessNode, normalViewNode ) => {\n\n\tlet reflectVec = null;\n\tlet textureUVNode = null;\n\n\treturn {\n\t\tgetUV: ( textureNode ) => {\n\n\t\t\tlet node = null;\n\n\t\t\tif ( reflectVec === null ) {\n\n\t\t\t\treflectVec = positionViewDirection.negate().reflect( normalViewNode );\n\t\t\t\treflectVec = roughnessNode.mul( roughnessNode ).mix( reflectVec, normalViewNode ).normalize();\n\t\t\t\treflectVec = reflectVec.transformDirection( cameraViewMatrix );\n\n\t\t\t}\n\n\t\t\tif ( textureNode.isCubeTextureNode ) {\n\n\t\t\t\tnode = reflectVec;\n\n\t\t\t} else if ( textureNode.isTextureNode ) {\n\n\t\t\t\tif ( textureUVNode === null ) {\n\n\t\t\t\t\t// @TODO: Needed PMREM\n\n\t\t\t\t\ttextureUVNode = equirectUV( reflectVec );\n\n\t\t\t\t}\n\n\t\t\t\tnode = textureUVNode;\n\n\t\t\t}\n\n\t\t\treturn node;\n\n\t\t},\n\t\tgetTextureLevel: () => {\n\n\t\t\treturn roughnessNode;\n\n\t\t},\n\t\tgetTextureLevelAlgorithm: ( textureNode, levelNode ) => {\n\n\t\t\treturn specularMIPLevel( textureNode, levelNode );\n\n\t\t}\n\t};\n\n};\n\nconst createIrradianceContext = ( normalWorldNode ) => {\n\n\tlet textureUVNode = null;\n\n\treturn {\n\t\tgetUV: ( textureNode ) => {\n\n\t\t\tlet node = null;\n\n\t\t\tif ( textureNode.isCubeTextureNode ) {\n\n\t\t\t\tnode = normalWorldNode;\n\n\t\t\t} else if ( textureNode.isTextureNode ) {\n\n\t\t\t\tif ( textureUVNode === null ) {\n\n\t\t\t\t\t// @TODO: Needed PMREM\n\n\t\t\t\t\ttextureUVNode = equirectUV( normalWorldNode );\n\t\t\t\t\ttextureUVNode = vec2( textureUVNode.x, textureUVNode.y.oneMinus() );\n\n\t\t\t\t}\n\n\t\t\t\tnode = textureUVNode;\n\n\t\t\t}\n\n\t\t\treturn node;\n\n\t\t},\n\t\tgetTextureLevel: ( textureNode ) => {\n\n\t\t\treturn maxMipLevel( textureNode );\n\n\t\t}\n\t};\n\n};\n\nexport default EnvironmentNode;\n\naddNodeClass( 'EnvironmentNode', EnvironmentNode );\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}