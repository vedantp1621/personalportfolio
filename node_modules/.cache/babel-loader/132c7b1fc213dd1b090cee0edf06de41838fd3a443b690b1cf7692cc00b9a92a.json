{"ast":null,"code":"import Object3DNode from './Object3DNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { NodeUpdateType } from '../core/constants.js';\n//import { sharedUniformGroup } from '../core/UniformGroupNode.js';\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\n\n//const cameraGroup = sharedUniformGroup( 'camera' );\n\nclass CameraNode extends Object3DNode {\n  constructor() {\n    let scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : CameraNode.POSITION;\n    super(scope);\n    this.updateType = NodeUpdateType.RENDER;\n\n    //this._uniformNode.groupNode = cameraGroup;\n  }\n\n  getNodeType(builder) {\n    const scope = this.scope;\n    if (scope === CameraNode.PROJECTION_MATRIX || scope === CameraNode.PROJECTION_MATRIX_INVERSE) {\n      return 'mat4';\n    } else if (scope === CameraNode.NEAR || scope === CameraNode.FAR || scope === CameraNode.LOG_DEPTH) {\n      return 'float';\n    }\n    return super.getNodeType(builder);\n  }\n  update(frame) {\n    const camera = frame.camera;\n    const uniformNode = this._uniformNode;\n    const scope = this.scope;\n\n    //cameraGroup.needsUpdate = true;\n\n    if (scope === CameraNode.VIEW_MATRIX) {\n      uniformNode.value = camera.matrixWorldInverse;\n    } else if (scope === CameraNode.PROJECTION_MATRIX) {\n      uniformNode.value = camera.projectionMatrix;\n    } else if (scope === CameraNode.PROJECTION_MATRIX_INVERSE) {\n      uniformNode.value = camera.projectionMatrixInverse;\n    } else if (scope === CameraNode.NEAR) {\n      uniformNode.value = camera.near;\n    } else if (scope === CameraNode.FAR) {\n      uniformNode.value = camera.far;\n    } else if (scope === CameraNode.LOG_DEPTH) {\n      uniformNode.value = 2.0 / (Math.log(camera.far + 1.0) / Math.LN2);\n    } else {\n      this.object3d = camera;\n      super.update(frame);\n    }\n  }\n  generate(builder) {\n    const scope = this.scope;\n    if (scope === CameraNode.PROJECTION_MATRIX || scope === CameraNode.PROJECTION_MATRIX_INVERSE) {\n      this._uniformNode.nodeType = 'mat4';\n    } else if (scope === CameraNode.NEAR || scope === CameraNode.FAR || scope === CameraNode.LOG_DEPTH) {\n      this._uniformNode.nodeType = 'float';\n    }\n    return super.generate(builder);\n  }\n}\nCameraNode.PROJECTION_MATRIX = 'projectionMatrix';\nCameraNode.PROJECTION_MATRIX_INVERSE = 'projectionMatrixInverse';\nCameraNode.NEAR = 'near';\nCameraNode.FAR = 'far';\nCameraNode.LOG_DEPTH = 'logDepth';\nexport default CameraNode;\nexport const cameraProjectionMatrix = nodeImmutable(CameraNode, CameraNode.PROJECTION_MATRIX);\nexport const cameraProjectionMatrixInverse = nodeImmutable(CameraNode, CameraNode.PROJECTION_MATRIX_INVERSE);\nexport const cameraNear = nodeImmutable(CameraNode, CameraNode.NEAR);\nexport const cameraFar = nodeImmutable(CameraNode, CameraNode.FAR);\nexport const cameraLogDepth = nodeImmutable(CameraNode, CameraNode.LOG_DEPTH);\nexport const cameraViewMatrix = nodeImmutable(CameraNode, CameraNode.VIEW_MATRIX);\nexport const cameraNormalMatrix = nodeImmutable(CameraNode, CameraNode.NORMAL_MATRIX);\nexport const cameraWorldMatrix = nodeImmutable(CameraNode, CameraNode.WORLD_MATRIX);\nexport const cameraPosition = nodeImmutable(CameraNode, CameraNode.POSITION);\naddNodeClass('CameraNode', CameraNode);","map":{"version":3,"names":["Object3DNode","addNodeClass","NodeUpdateType","nodeImmutable","CameraNode","constructor","scope","arguments","length","undefined","POSITION","updateType","RENDER","getNodeType","builder","PROJECTION_MATRIX","PROJECTION_MATRIX_INVERSE","NEAR","FAR","LOG_DEPTH","update","frame","camera","uniformNode","_uniformNode","VIEW_MATRIX","value","matrixWorldInverse","projectionMatrix","projectionMatrixInverse","near","far","Math","log","LN2","object3d","generate","nodeType","cameraProjectionMatrix","cameraProjectionMatrixInverse","cameraNear","cameraFar","cameraLogDepth","cameraViewMatrix","cameraNormalMatrix","NORMAL_MATRIX","cameraWorldMatrix","WORLD_MATRIX","cameraPosition"],"sources":["/Users/vedant/node_modules/three/examples/jsm/nodes/accessors/CameraNode.js"],"sourcesContent":["import Object3DNode from './Object3DNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { NodeUpdateType } from '../core/constants.js';\n//import { sharedUniformGroup } from '../core/UniformGroupNode.js';\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\n\n//const cameraGroup = sharedUniformGroup( 'camera' );\n\nclass CameraNode extends Object3DNode {\n\n\tconstructor( scope = CameraNode.POSITION ) {\n\n\t\tsuper( scope );\n\n\t\tthis.updateType = NodeUpdateType.RENDER;\n\n\t\t//this._uniformNode.groupNode = cameraGroup;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\tconst scope = this.scope;\n\n\t\tif ( scope === CameraNode.PROJECTION_MATRIX || scope === CameraNode.PROJECTION_MATRIX_INVERSE ) {\n\n\t\t\treturn 'mat4';\n\n\t\t} else if ( scope === CameraNode.NEAR || scope === CameraNode.FAR || scope === CameraNode.LOG_DEPTH ) {\n\n\t\t\treturn 'float';\n\n\t\t}\n\n\t\treturn super.getNodeType( builder );\n\n\t}\n\n\tupdate( frame ) {\n\n\t\tconst camera = frame.camera;\n\t\tconst uniformNode = this._uniformNode;\n\t\tconst scope = this.scope;\n\n\t\t//cameraGroup.needsUpdate = true;\n\n\t\tif ( scope === CameraNode.VIEW_MATRIX ) {\n\n\t\t\tuniformNode.value = camera.matrixWorldInverse;\n\n\t\t} else if ( scope === CameraNode.PROJECTION_MATRIX ) {\n\n\t\t\tuniformNode.value = camera.projectionMatrix;\n\n\t\t} else if ( scope === CameraNode.PROJECTION_MATRIX_INVERSE ) {\n\n\t\t\tuniformNode.value = camera.projectionMatrixInverse;\n\n\t\t} else if ( scope === CameraNode.NEAR ) {\n\n\t\t\tuniformNode.value = camera.near;\n\n\t\t} else if ( scope === CameraNode.FAR ) {\n\n\t\t\tuniformNode.value = camera.far;\n\n\t\t} else if ( scope === CameraNode.LOG_DEPTH ) {\n\n\t\t\tuniformNode.value = 2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 );\n\n\t\t} else {\n\n\t\t\tthis.object3d = camera;\n\n\t\t\tsuper.update( frame );\n\n\t\t}\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst scope = this.scope;\n\n\t\tif ( scope === CameraNode.PROJECTION_MATRIX || scope === CameraNode.PROJECTION_MATRIX_INVERSE ) {\n\n\t\t\tthis._uniformNode.nodeType = 'mat4';\n\n\t\t} else if ( scope === CameraNode.NEAR || scope === CameraNode.FAR || scope === CameraNode.LOG_DEPTH ) {\n\n\t\t\tthis._uniformNode.nodeType = 'float';\n\n\t\t}\n\n\t\treturn super.generate( builder );\n\n\t}\n\n}\n\nCameraNode.PROJECTION_MATRIX = 'projectionMatrix';\nCameraNode.PROJECTION_MATRIX_INVERSE = 'projectionMatrixInverse';\nCameraNode.NEAR = 'near';\nCameraNode.FAR = 'far';\nCameraNode.LOG_DEPTH = 'logDepth';\n\nexport default CameraNode;\n\nexport const cameraProjectionMatrix = nodeImmutable( CameraNode, CameraNode.PROJECTION_MATRIX );\nexport const cameraProjectionMatrixInverse = nodeImmutable( CameraNode, CameraNode.PROJECTION_MATRIX_INVERSE );\nexport const cameraNear = nodeImmutable( CameraNode, CameraNode.NEAR );\nexport const cameraFar = nodeImmutable( CameraNode, CameraNode.FAR );\nexport const cameraLogDepth = nodeImmutable( CameraNode, CameraNode.LOG_DEPTH );\nexport const cameraViewMatrix = nodeImmutable( CameraNode, CameraNode.VIEW_MATRIX );\nexport const cameraNormalMatrix = nodeImmutable( CameraNode, CameraNode.NORMAL_MATRIX );\nexport const cameraWorldMatrix = nodeImmutable( CameraNode, CameraNode.WORLD_MATRIX );\nexport const cameraPosition = nodeImmutable( CameraNode, CameraNode.POSITION );\n\naddNodeClass( 'CameraNode', CameraNode );\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}