{"ast":null,"code":"import _classCallCheck from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/vedant/Documents/GitHub/vedantpPersWebsite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Node, { addNodeClass } from './Node.js';\nimport { nodeImmutable, nodeObject } from '../shadernode/ShaderNode.js';\nvar PropertyNode = /*#__PURE__*/function (_Node) {\n  _inherits(PropertyNode, _Node);\n  var _super = _createSuper(PropertyNode);\n  function PropertyNode(nodeType) {\n    var _this;\n    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var varying = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    _classCallCheck(this, PropertyNode);\n    _this = _super.call(this, nodeType);\n    _this.name = name;\n    _this.varying = varying;\n    _this.isPropertyNode = true;\n    return _this;\n  }\n  _createClass(PropertyNode, [{\n    key: \"getHash\",\n    value: function getHash(builder) {\n      return this.name || _get(_getPrototypeOf(PropertyNode.prototype), \"getHash\", this).call(this, builder);\n    }\n  }, {\n    key: \"isGlobal\",\n    value: function isGlobal( /*builder*/\n    ) {\n      return true;\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder) {\n      var nodeVar;\n      if (this.varying === true) {\n        nodeVar = builder.getVaryingFromNode(this, this.name);\n        nodeVar.needsInterpolation = true;\n      } else {\n        nodeVar = builder.getVarFromNode(this, this.name);\n      }\n      return builder.getPropertyName(nodeVar);\n    }\n  }]);\n  return PropertyNode;\n}(Node);\nexport default PropertyNode;\nexport var property = function property(type, name) {\n  return nodeObject(new PropertyNode(type, name));\n};\nexport var varyingProperty = function varyingProperty(type, name) {\n  return nodeObject(new PropertyNode(type, name, true));\n};\nexport var diffuseColor = nodeImmutable(PropertyNode, 'vec4', 'DiffuseColor');\nexport var roughness = nodeImmutable(PropertyNode, 'float', 'Roughness');\nexport var metalness = nodeImmutable(PropertyNode, 'float', 'Metalness');\nexport var clearcoat = nodeImmutable(PropertyNode, 'float', 'Clearcoat');\nexport var clearcoatRoughness = nodeImmutable(PropertyNode, 'float', 'ClearcoatRoughness');\nexport var sheen = nodeImmutable(PropertyNode, 'vec3', 'Sheen');\nexport var sheenRoughness = nodeImmutable(PropertyNode, 'float', 'SheenRoughness');\nexport var iridescence = nodeImmutable(PropertyNode, 'float', 'Iridescence');\nexport var iridescenceIOR = nodeImmutable(PropertyNode, 'float', 'IridescenceIOR');\nexport var iridescenceThickness = nodeImmutable(PropertyNode, 'float', 'IridescenceThickness');\nexport var specularColor = nodeImmutable(PropertyNode, 'color', 'SpecularColor');\nexport var shininess = nodeImmutable(PropertyNode, 'float', 'Shininess');\nexport var output = nodeImmutable(PropertyNode, 'vec4', 'Output');\nexport var dashSize = nodeImmutable(PropertyNode, 'float', 'dashSize');\nexport var gapSize = nodeImmutable(PropertyNode, 'float', 'gapSize');\nexport var pointWidth = nodeImmutable(PropertyNode, 'float', 'pointWidth');\naddNodeClass('PropertyNode', PropertyNode);","map":{"version":3,"names":["Node","addNodeClass","nodeImmutable","nodeObject","PropertyNode","_Node","_inherits","_super","_createSuper","nodeType","_this","name","arguments","length","undefined","varying","_classCallCheck","call","isPropertyNode","_createClass","key","value","getHash","builder","_get","_getPrototypeOf","prototype","isGlobal","generate","nodeVar","getVaryingFromNode","needsInterpolation","getVarFromNode","getPropertyName","property","type","varyingProperty","diffuseColor","roughness","metalness","clearcoat","clearcoatRoughness","sheen","sheenRoughness","iridescence","iridescenceIOR","iridescenceThickness","specularColor","shininess","output","dashSize","gapSize","pointWidth"],"sources":["/Users/vedant/node_modules/three/examples/jsm/nodes/core/PropertyNode.js"],"sourcesContent":["import Node, { addNodeClass } from './Node.js';\nimport { nodeImmutable, nodeObject } from '../shadernode/ShaderNode.js';\n\nclass PropertyNode extends Node {\n\n\tconstructor( nodeType, name = null, varying = false ) {\n\n\t\tsuper( nodeType );\n\n\t\tthis.name = name;\n\t\tthis.varying = varying;\n\n\t\tthis.isPropertyNode = true;\n\n\t}\n\n\tgetHash( builder ) {\n\n\t\treturn this.name || super.getHash( builder );\n\n\t}\n\n\tisGlobal( /*builder*/ ) {\n\n\t\treturn true;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tlet nodeVar;\n\n\t\tif ( this.varying === true ) {\n\n\t\t\tnodeVar = builder.getVaryingFromNode( this, this.name );\n\t\t\tnodeVar.needsInterpolation = true;\n\n\t\t} else {\n\n\t\t\tnodeVar = builder.getVarFromNode( this, this.name );\n\n\t\t}\n\n\t\treturn builder.getPropertyName( nodeVar );\n\n\t}\n\n}\n\nexport default PropertyNode;\n\nexport const property = ( type, name ) => nodeObject( new PropertyNode( type, name ) );\nexport const varyingProperty = ( type, name ) => nodeObject( new PropertyNode( type, name, true ) );\n\nexport const diffuseColor = nodeImmutable( PropertyNode, 'vec4', 'DiffuseColor' );\nexport const roughness = nodeImmutable( PropertyNode, 'float', 'Roughness' );\nexport const metalness = nodeImmutable( PropertyNode, 'float', 'Metalness' );\nexport const clearcoat = nodeImmutable( PropertyNode, 'float', 'Clearcoat' );\nexport const clearcoatRoughness = nodeImmutable( PropertyNode, 'float', 'ClearcoatRoughness' );\nexport const sheen = nodeImmutable( PropertyNode, 'vec3', 'Sheen' );\nexport const sheenRoughness = nodeImmutable( PropertyNode, 'float', 'SheenRoughness' );\nexport const iridescence = nodeImmutable( PropertyNode, 'float', 'Iridescence' );\nexport const iridescenceIOR = nodeImmutable( PropertyNode, 'float', 'IridescenceIOR' );\nexport const iridescenceThickness = nodeImmutable( PropertyNode, 'float', 'IridescenceThickness' );\nexport const specularColor = nodeImmutable( PropertyNode, 'color', 'SpecularColor' );\nexport const shininess = nodeImmutable( PropertyNode, 'float', 'Shininess' );\nexport const output = nodeImmutable( PropertyNode, 'vec4', 'Output' );\nexport const dashSize = nodeImmutable( PropertyNode, 'float', 'dashSize' );\nexport const gapSize = nodeImmutable( PropertyNode, 'float', 'gapSize' );\nexport const pointWidth = nodeImmutable( PropertyNode, 'float', 'pointWidth' );\n\naddNodeClass( 'PropertyNode', PropertyNode );\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}